{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12","program":"/home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","num_traits","/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"i128\"","--cfg","feature=\"std\"","-C","metadata=95043c39ba4deedf","-C","extra-filename=-95043c39ba4deedf","--out-dir","/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps","-L","dependency=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps","--cap-lints","allow","--cfg","has_i128","--cfg","has_to_int_unchecked","--error-format=json","--sysroot","/home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libnum_traits-95043c39ba4deedf.rmeta"},"prelude":{"crate_id":{"name":"num_traits","disambiguator":[9716346113309821185,0]},"crate_root":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src","external_crates":[{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}}],"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":472,"byte_end":19215,"line_start":11,"line_end":571,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1043,"byte_end":1050,"line_start":32,"line_end":32,"column_start":17,"column_end":24},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":427},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1114,"byte_end":1119,"line_start":34,"line_end":34,"column_start":16,"column_end":21},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2411},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1136,"byte_end":1146,"line_start":35,"line_end":35,"column_start":16,"column_end":26},"alias_span":null,"name":"FloatConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1255,"byte_end":1259,"line_start":37,"line_end":37,"column_start":16,"column_end":20},"alias_span":null,"name":"cast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1261,"byte_end":1272,"line_start":37,"line_end":37,"column_start":22,"column_end":33},"alias_span":null,"name":"AsPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":323},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1274,"byte_end":1287,"line_start":37,"line_end":37,"column_start":35,"column_end":48},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1289,"byte_end":1296,"line_start":37,"line_end":37,"column_start":50,"column_end":57},"alias_span":null,"name":"NumCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1298,"byte_end":1309,"line_start":37,"line_end":37,"column_start":59,"column_end":70},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1333,"byte_end":1336,"line_start":38,"line_end":38,"column_start":22,"column_end":25},"alias_span":null,"name":"one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1338,"byte_end":1342,"line_start":38,"line_end":38,"column_start":27,"column_end":31},"alias_span":null,"name":"zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1344,"byte_end":1347,"line_start":38,"line_end":38,"column_start":33,"column_end":36},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1349,"byte_end":1353,"line_start":38,"line_end":38,"column_start":38,"column_end":42},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":557},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1369,"byte_end":1376,"line_start":39,"line_end":39,"column_start":14,"column_end":21},"alias_span":null,"name":"PrimInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":599},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1406,"byte_end":1416,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":606},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1418,"byte_end":1428,"line_start":41,"line_end":41,"column_start":17,"column_end":27},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1430,"byte_end":1440,"line_start":41,"line_end":41,"column_start":29,"column_end":39},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":611},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1442,"byte_end":1452,"line_start":41,"line_end":41,"column_start":41,"column_end":51},"alias_span":null,"name":"CheckedNeg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1454,"byte_end":1464,"line_start":41,"line_end":41,"column_start":53,"column_end":63},"alias_span":null,"name":"CheckedRem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":613},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1466,"byte_end":1476,"line_start":41,"line_end":41,"column_start":65,"column_end":75},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":616},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1478,"byte_end":1488,"line_start":41,"line_end":41,"column_start":77,"column_end":87},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":602},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1490,"byte_end":1500,"line_start":41,"line_end":41,"column_start":89,"column_end":99},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":619},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1523,"byte_end":1526,"line_start":43,"line_end":43,"column_start":19,"column_end":22},"alias_span":null,"name":"Inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":637},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1551,"byte_end":1557,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"alias_span":null,"name":"MulAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1559,"byte_end":1571,"line_start":44,"line_end":44,"column_start":32,"column_end":44},"alias_span":null,"name":"MulAddAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":669},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1600,"byte_end":1610,"line_start":45,"line_end":45,"column_start":27,"column_end":37},"alias_span":null,"name":"Saturating","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1612,"byte_end":1625,"line_start":45,"line_end":45,"column_start":39,"column_end":52},"alias_span":null,"name":"SaturatingAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":678},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1627,"byte_end":1640,"line_start":45,"line_end":45,"column_start":54,"column_end":67},"alias_span":null,"name":"SaturatingMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1642,"byte_end":1655,"line_start":45,"line_end":45,"column_start":69,"column_end":82},"alias_span":null,"name":"SaturatingSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":704},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1687,"byte_end":1698,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"alias_span":null,"name":"WrappingAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":708},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1700,"byte_end":1711,"line_start":47,"line_end":47,"column_start":18,"column_end":29},"alias_span":null,"name":"WrappingMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":711},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1713,"byte_end":1724,"line_start":47,"line_end":47,"column_start":31,"column_end":42},"alias_span":null,"name":"WrappingNeg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":714},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1726,"byte_end":1737,"line_start":47,"line_end":47,"column_start":44,"column_end":55},"alias_span":null,"name":"WrappingShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1739,"byte_end":1750,"line_start":47,"line_end":47,"column_start":57,"column_end":68},"alias_span":null,"name":"WrappingShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":706},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1752,"byte_end":1763,"line_start":47,"line_end":47,"column_start":70,"column_end":81},"alias_span":null,"name":"WrappingSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":764},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1782,"byte_end":1793,"line_start":49,"line_end":49,"column_start":15,"column_end":26},"alias_span":null,"name":"checked_pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1795,"byte_end":1798,"line_start":49,"line_end":49,"column_start":28,"column_end":31},"alias_span":null,"name":"pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1800,"byte_end":1803,"line_start":49,"line_end":49,"column_start":33,"column_end":36},"alias_span":null,"name":"Pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":859},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1821,"byte_end":1824,"line_start":50,"line_end":50,"column_start":16,"column_end":19},"alias_span":null,"name":"abs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":861},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1826,"byte_end":1833,"line_start":50,"line_end":50,"column_start":21,"column_end":28},"alias_span":null,"name":"abs_sub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1835,"byte_end":1841,"line_start":50,"line_end":50,"column_start":30,"column_end":36},"alias_span":null,"name":"signum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":844},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1843,"byte_end":1849,"line_start":50,"line_end":50,"column_start":38,"column_end":44},"alias_span":null,"name":"Signed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1851,"byte_end":1859,"line_start":50,"line_end":50,"column_start":46,"column_end":54},"alias_span":null,"name":"Unsigned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":472,"byte_end":19215,"line_start":11,"line_end":571,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":241},{"krate":0,"index":360},{"krate":0,"index":489},{"krate":0,"index":523},{"krate":0,"index":575},{"krate":0,"index":736},{"krate":0,"index":767},{"krate":0,"index":831},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":891},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":4724},{"krate":0,"index":4727},{"krate":0,"index":4730},{"krate":0,"index":4733},{"krate":0,"index":4736},{"krate":0,"index":4739},{"krate":0,"index":4742},{"krate":0,"index":4745},{"krate":0,"index":4748},{"krate":0,"index":4751},{"krate":0,"index":4754},{"krate":0,"index":4757},{"krate":0,"index":905},{"krate":0,"index":4760},{"krate":0,"index":4765},{"krate":0,"index":4767},{"krate":0,"index":4769},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":4771},{"krate":0,"index":4780},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":916}],"decl_id":null,"docs":" Numeric traits for generic mathematics","sig":null,"attributes":[{"value":"/ Numeric traits for generic mathematics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":472,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":515,"byte_end":518,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Compatibility","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":519,"byte_end":539,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":540,"byte_end":543,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `num-traits` crate is tested for rustc 1.8 and greater.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":544,"byte_end":607,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":667,"byte_end":700,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":701,"byte_end":711,"line_start":19,"line_end":19,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":180},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/bounds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounds","qualname":"::bounds","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/bounds.rs","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":234},{"krate":0,"index":954},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":957},{"krate":0,"index":980},{"krate":0,"index":1002},{"krate":0,"index":1023},{"krate":0,"index":1043},{"krate":0,"index":1062},{"krate":0,"index":1080},{"krate":0,"index":1097},{"krate":0,"index":1113},{"krate":0,"index":1128},{"krate":0,"index":1142},{"krate":0,"index":1155},{"krate":0,"index":1167},{"krate":0,"index":1178},{"krate":0,"index":1188},{"krate":0,"index":1197},{"krate":0,"index":1205},{"krate":0,"index":1212},{"krate":0,"index":1218},{"krate":0,"index":1223},{"krate":0,"index":1227},{"krate":0,"index":1230}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/bounds.rs","byte_start":20696,"byte_end":20703,"line_start":9,"line_end":9,"column_start":11,"column_end":18},"name":"Bounded","qualname":"::bounds::Bounded","value":"Bounded","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[{"value":"/ Numbers which have upper and lower bounds","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/bounds.rs","byte_start":20640,"byte_end":20685,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/bounds.rs","byte_start":20839,"byte_end":20848,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"min_value","qualname":"::bounds::Bounded::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" returns the smallest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the smallest finite number this type can represent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/bounds.rs","byte_start":20769,"byte_end":20831,"line_start":11,"line_end":11,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/bounds.rs","byte_start":20933,"byte_end":20942,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"max_value","qualname":"::bounds::Bounded::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" returns the largest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the largest finite number this type can represent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/bounds.rs","byte_start":20864,"byte_end":20925,"line_start":13,"line_end":13,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":241},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cast","qualname":"::cast","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":1233},{"krate":0,"index":1248},{"krate":0,"index":1263},{"krate":0,"index":1278},{"krate":0,"index":1293},{"krate":0,"index":1308},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":1323},{"krate":0,"index":1338},{"krate":0,"index":1353},{"krate":0,"index":1368},{"krate":0,"index":1383},{"krate":0,"index":1398},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":1413},{"krate":0,"index":1464},{"krate":0,"index":323},{"krate":0,"index":338},{"krate":0,"index":1515},{"krate":0,"index":1530},{"krate":0,"index":1545},{"krate":0,"index":1560},{"krate":0,"index":1575},{"krate":0,"index":1590},{"krate":0,"index":1605},{"krate":0,"index":1620},{"krate":0,"index":1635},{"krate":0,"index":1650},{"krate":0,"index":1665},{"krate":0,"index":1680},{"krate":0,"index":1695},{"krate":0,"index":1710},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1777},{"krate":0,"index":1780},{"krate":0,"index":1783},{"krate":0,"index":1786},{"krate":0,"index":1789},{"krate":0,"index":1792},{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1799},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":1807},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1813},{"krate":0,"index":1815},{"krate":0,"index":1817},{"krate":0,"index":1819},{"krate":0,"index":1821},{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1827},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1865},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1951},{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2133},{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2139},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":2179},{"krate":0,"index":2181},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2201},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":297},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24037,"byte_end":24048,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"ToPrimitive","qualname":"::cast::ToPrimitive","value":"ToPrimitive","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a value to a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":23971,"byte_end":24026,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24207,"byte_end":24215,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::cast::ToPrimitive::to_isize","value":"pub fn to_isize(&Self) -> Option<isize>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `isize`. If the value cannot be\n represented by an `isize`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `isize`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24055,"byte_end":24125,"line_start":13,"line_end":13,"column_start":5,"column_end":75}},{"value":"/ represented by an `isize`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24130,"byte_end":24185,"line_start":14,"line_end":14,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24190,"byte_end":24199,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24462,"byte_end":24467,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"to_i8","qualname":"::cast::ToPrimitive::to_i8","value":"pub fn to_i8(&Self) -> Option<i8>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i8`. If the value cannot be\n represented by an `i8`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i8`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24316,"byte_end":24383,"line_start":20,"line_end":20,"column_start":5,"column_end":72}},{"value":"/ represented by an `i8`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24388,"byte_end":24440,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24445,"byte_end":24454,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24710,"byte_end":24716,"line_start":30,"line_end":30,"column_start":8,"column_end":14},"name":"to_i16","qualname":"::cast::ToPrimitive::to_i16","value":"pub fn to_i16(&Self) -> Option<i16>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i16`. If the value cannot be\n represented by an `i16`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i16`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24562,"byte_end":24630,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ represented by an `i16`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24635,"byte_end":24688,"line_start":28,"line_end":28,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24693,"byte_end":24702,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24961,"byte_end":24967,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"to_i32","qualname":"::cast::ToPrimitive::to_i32","value":"pub fn to_i32(&Self) -> Option<i32>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i32`. If the value cannot be\n represented by an `i32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i32`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24813,"byte_end":24881,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/ represented by an `i32`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24886,"byte_end":24939,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":24944,"byte_end":24953,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25198,"byte_end":25204,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"to_i64","qualname":"::cast::ToPrimitive::to_i64","value":"pub fn to_i64(&Self) -> Option<i64>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i64`. If the value cannot be\n represented by an `i64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i64`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25064,"byte_end":25132,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/ represented by an `i64`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25137,"byte_end":25190,"line_start":42,"line_end":42,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25721,"byte_end":25728,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"to_i128","qualname":"::cast::ToPrimitive::to_i128","value":"pub fn to_i128(&Self) -> Option<i128>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i128`. If the value cannot be\n represented by an `i128` (`i64` under the default implementation), then\n `None` is returned.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i128`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25233,"byte_end":25302,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ represented by an `i128` (`i64` under the default implementation), then","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25307,"byte_end":25382,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25387,"byte_end":25410,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25415,"byte_end":25418,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25423,"byte_end":25501,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25506,"byte_end":25509,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_i64()`. Types implementing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25514,"byte_end":25592,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25597,"byte_end":25678,"line_start":52,"line_end":52,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25683,"byte_end":25692,"line_start":53,"line_end":53,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25697,"byte_end":25713,"line_start":54,"line_end":54,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25953,"byte_end":25961,"line_start":62,"line_end":62,"column_start":8,"column_end":16},"name":"to_usize","qualname":"::cast::ToPrimitive::to_usize","value":"pub fn to_usize(&Self) -> Option<usize>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `usize`. If the value cannot be\n represented by a `usize`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `usize`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25803,"byte_end":25872,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/ represented by a `usize`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25877,"byte_end":25931,"line_start":60,"line_end":60,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":25936,"byte_end":25945,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26206,"byte_end":26211,"line_start":69,"line_end":69,"column_start":8,"column_end":13},"name":"to_u8","qualname":"::cast::ToPrimitive::to_u8","value":"pub fn to_u8(&Self) -> Option<u8>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u8`. If the value cannot be\n represented by a `u8`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u8`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26062,"byte_end":26128,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/ represented by a `u8`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26133,"byte_end":26184,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26189,"byte_end":26198,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26452,"byte_end":26458,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"to_u16","qualname":"::cast::ToPrimitive::to_u16","value":"pub fn to_u16(&Self) -> Option<u16>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u16`. If the value cannot be\n represented by a `u16`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u16`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26306,"byte_end":26373,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ represented by a `u16`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26378,"byte_end":26430,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26435,"byte_end":26444,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26701,"byte_end":26707,"line_start":83,"line_end":83,"column_start":8,"column_end":14},"name":"to_u32","qualname":"::cast::ToPrimitive::to_u32","value":"pub fn to_u32(&Self) -> Option<u32>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u32`. If the value cannot be\n represented by a `u32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u32`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26555,"byte_end":26622,"line_start":80,"line_end":80,"column_start":5,"column_end":72}},{"value":"/ represented by a `u32`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26627,"byte_end":26679,"line_start":81,"line_end":81,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26684,"byte_end":26693,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26936,"byte_end":26942,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"to_u64","qualname":"::cast::ToPrimitive::to_u64","value":"pub fn to_u64(&Self) -> Option<u64>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u64`. If the value cannot be\n represented by a `u64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u64`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26804,"byte_end":26871,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/ represented by a `u64`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26876,"byte_end":26928,"line_start":88,"line_end":88,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27458,"byte_end":27465,"line_start":101,"line_end":101,"column_start":8,"column_end":15},"name":"to_u128","qualname":"::cast::ToPrimitive::to_u128","value":"pub fn to_u128(&Self) -> Option<u128>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `u128`. If the value cannot be\n represented by a `u128` (`u64` under the default implementation), then\n `None` is returned.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `u128`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":26971,"byte_end":27039,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ represented by a `u128` (`u64` under the default implementation), then","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27044,"byte_end":27118,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27123,"byte_end":27146,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27151,"byte_end":27154,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27159,"byte_end":27237,"line_start":95,"line_end":95,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27242,"byte_end":27245,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_u64()`.  Types implementing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27250,"byte_end":27329,"line_start":97,"line_end":97,"column_start":5,"column_end":84}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27334,"byte_end":27415,"line_start":98,"line_end":98,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27420,"byte_end":27429,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27434,"byte_end":27450,"line_start":100,"line_end":100,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27688,"byte_end":27694,"line_start":108,"line_end":108,"column_start":8,"column_end":14},"name":"to_f32","qualname":"::cast::ToPrimitive::to_f32","value":"pub fn to_f32(&Self) -> Option<f32>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f32`. If the value cannot be\n represented by an `f32`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f32`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27540,"byte_end":27608,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ represented by an `f32`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27613,"byte_end":27666,"line_start":106,"line_end":106,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27671,"byte_end":27680,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27939,"byte_end":27945,"line_start":115,"line_end":115,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::cast::ToPrimitive::to_f64","value":"pub fn to_f64(&Self) -> Option<f64>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f64`. If the value cannot be\n represented by an `f64`, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f64`. If the value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27791,"byte_end":27859,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/ represented by an `f64`, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27864,"byte_end":27917,"line_start":113,"line_end":113,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":27922,"byte_end":27931,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":323},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":36930,"byte_end":36943,"line_start":395,"line_end":395,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::cast::FromPrimitive","value":"FromPrimitive: Sized","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a number to a value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":36864,"byte_end":36919,"line_start":394,"line_end":394,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37126,"byte_end":37136,"line_start":399,"line_end":399,"column_start":8,"column_end":18},"name":"from_isize","qualname":"::cast::FromPrimitive::from_isize","value":"pub fn from_isize(isize) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `isize` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `isize` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":36957,"byte_end":37029,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37034,"byte_end":37104,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37109,"byte_end":37118,"line_start":398,"line_end":398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37395,"byte_end":37402,"line_start":406,"line_end":406,"column_start":8,"column_end":15},"name":"from_i8","qualname":"::cast::FromPrimitive::from_i8","value":"pub fn from_i8(i8) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `i8` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i8` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37229,"byte_end":37298,"line_start":403,"line_end":403,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37303,"byte_end":37373,"line_start":404,"line_end":404,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37378,"byte_end":37387,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37653,"byte_end":37661,"line_start":413,"line_end":413,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::cast::FromPrimitive::from_i16","value":"pub fn from_i16(i16) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `i16` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i16` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37486,"byte_end":37556,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37561,"byte_end":37631,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37636,"byte_end":37645,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37913,"byte_end":37921,"line_start":420,"line_end":420,"column_start":8,"column_end":16},"name":"from_i32","qualname":"::cast::FromPrimitive::from_i32","value":"pub fn from_i32(i32) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `i32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i32` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37746,"byte_end":37816,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37821,"byte_end":37891,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":37896,"byte_end":37905,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38159,"byte_end":38167,"line_start":426,"line_end":426,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::cast::FromPrimitive::from_i64","value":"pub fn from_i64(i64) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `i64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `i64` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38006,"byte_end":38076,"line_start":424,"line_end":424,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38081,"byte_end":38151,"line_start":425,"line_end":425,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38657,"byte_end":38666,"line_start":437,"line_end":437,"column_start":8,"column_end":17},"name":"from_i128","qualname":"::cast::FromPrimitive::from_i128","value":"pub fn from_i128(i128) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `i128` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.","sig":null,"attributes":[{"value":"/ Converts an `i128` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38198,"byte_end":38269,"line_start":428,"line_end":428,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38274,"byte_end":38344,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38349,"byte_end":38352,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38357,"byte_end":38435,"line_start":431,"line_end":431,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38440,"byte_end":38443,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_i64()`. Types implementing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38448,"byte_end":38528,"line_start":433,"line_end":433,"column_start":5,"column_end":85}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38533,"byte_end":38614,"line_start":434,"line_end":434,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38619,"byte_end":38628,"line_start":435,"line_end":435,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38633,"byte_end":38649,"line_start":436,"line_end":436,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38926,"byte_end":38936,"line_start":444,"line_end":444,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::cast::FromPrimitive::from_usize","value":"pub fn from_usize(usize) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts a `usize` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `usize` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38758,"byte_end":38829,"line_start":441,"line_end":441,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38834,"byte_end":38904,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":38909,"byte_end":38918,"line_start":443,"line_end":443,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39195,"byte_end":39202,"line_start":451,"line_end":451,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::cast::FromPrimitive::from_u8","value":"pub fn from_u8(u8) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `u8` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u8` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39029,"byte_end":39098,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39103,"byte_end":39173,"line_start":449,"line_end":449,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39178,"byte_end":39187,"line_start":450,"line_end":450,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39453,"byte_end":39461,"line_start":458,"line_end":458,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::cast::FromPrimitive::from_u16","value":"pub fn from_u16(u16) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `u16` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u16` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39286,"byte_end":39356,"line_start":455,"line_end":455,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39361,"byte_end":39431,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39436,"byte_end":39445,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39713,"byte_end":39721,"line_start":465,"line_end":465,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::cast::FromPrimitive::from_u32","value":"pub fn from_u32(u32) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `u32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u32` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39546,"byte_end":39616,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39621,"byte_end":39691,"line_start":463,"line_end":463,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39696,"byte_end":39705,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39959,"byte_end":39967,"line_start":471,"line_end":471,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::cast::FromPrimitive::from_u64","value":"pub fn from_u64(u64) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `u64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts an `u64` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39806,"byte_end":39876,"line_start":469,"line_end":469,"column_start":5,"column_end":75}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39881,"byte_end":39951,"line_start":470,"line_end":470,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40457,"byte_end":40466,"line_start":482,"line_end":482,"column_start":8,"column_end":17},"name":"from_u128","qualname":"::cast::FromPrimitive::from_u128","value":"pub fn from_u128(u128) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts an `u128` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.","sig":null,"attributes":[{"value":"/ Converts an `u128` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":39998,"byte_end":40069,"line_start":473,"line_end":473,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40074,"byte_end":40144,"line_start":474,"line_end":474,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40149,"byte_end":40152,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40157,"byte_end":40235,"line_start":476,"line_end":476,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40240,"byte_end":40243,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_u64()`. Types implementing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40248,"byte_end":40328,"line_start":478,"line_end":478,"column_start":5,"column_end":85}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40333,"byte_end":40414,"line_start":479,"line_end":479,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40419,"byte_end":40428,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40433,"byte_end":40449,"line_start":481,"line_end":481,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40724,"byte_end":40732,"line_start":489,"line_end":489,"column_start":8,"column_end":16},"name":"from_f32","qualname":"::cast::FromPrimitive::from_f32","value":"pub fn from_f32(f32) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts a `f32` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `f32` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40558,"byte_end":40627,"line_start":486,"line_end":486,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40632,"byte_end":40702,"line_start":487,"line_end":487,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40707,"byte_end":40716,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40983,"byte_end":40991,"line_start":496,"line_end":496,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::cast::FromPrimitive::from_f64","value":"pub fn from_f64(f64) -> Option<Self>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Converts a `f64` to return an optional value of this type. If the\n value cannot be represented by this type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Converts a `f64` to return an optional value of this type. If the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40817,"byte_end":40886,"line_start":493,"line_end":493,"column_start":5,"column_end":74}},{"value":"/ value cannot be represented by this type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40891,"byte_end":40961,"line_start":494,"line_end":494,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":40966,"byte_end":40975,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":345},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45237,"byte_end":45241,"line_start":666,"line_end":666,"column_start":8,"column_end":12},"name":"cast","qualname":"::cast::cast","value":"pub fn cast<T: NumCast, U: NumCast>(T) -> Option<U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one machine scalar to another.","sig":null,"attributes":[{"value":"/ Cast from one machine scalar to another.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45024,"byte_end":45068,"line_start":655,"line_end":655,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45069,"byte_end":45072,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45073,"byte_end":45087,"line_start":657,"line_end":657,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45088,"byte_end":45091,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45092,"byte_end":45099,"line_start":659,"line_end":659,"column_start":1,"column_end":8}},{"value":"/ # use num_traits as num;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45100,"byte_end":45128,"line_start":660,"line_end":660,"column_start":1,"column_end":29}},{"value":"/ let twenty: f32 = num::cast(0x14).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45129,"byte_end":45176,"line_start":661,"line_end":661,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(twenty, 20f32);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45177,"byte_end":45207,"line_start":662,"line_end":662,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45208,"byte_end":45215,"line_start":663,"line_end":663,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45216,"byte_end":45219,"line_start":664,"line_end":664,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45220,"byte_end":45229,"line_start":665,"line_end":665,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":348},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45375,"byte_end":45382,"line_start":671,"line_end":671,"column_start":11,"column_end":18},"name":"NumCast","qualname":"::cast::NumCast","value":"NumCast: Sized + ToPrimitive","parent":null,"children":[{"krate":0,"index":349}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[{"value":"/ An interface for casting between machine scalars.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45311,"byte_end":45364,"line_start":670,"line_end":670,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45628,"byte_end":45632,"line_start":675,"line_end":675,"column_start":8,"column_end":12},"name":"from","qualname":"::cast::NumCast::from","value":"pub fn from<T: ToPrimitive>(T) -> Option<Self>","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Creates a number from another value that can be converted into\n a primitive via the `ToPrimitive` trait. If the source value cannot be\n represented by the target type, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Creates a number from another value that can be converted into","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45410,"byte_end":45476,"line_start":672,"line_end":672,"column_start":5,"column_end":71}},{"value":"/ a primitive via the `ToPrimitive` trait. If the source value cannot be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45481,"byte_end":45555,"line_start":673,"line_end":673,"column_start":5,"column_end":79}},{"value":"/ represented by the target type, then `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45560,"byte_end":45620,"line_start":674,"line_end":674,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":356},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47768,"byte_end":47779,"line_start":750,"line_end":750,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::cast::AsPrimitive","value":"AsPrimitive<T>: 'static + Copy","parent":null,"children":[{"krate":0,"index":358}],"decl_id":null,"docs":" A generic interface for casting between machine scalars with the\n `as` operator, which admits narrowing and precision loss.\n Implementers of this trait `AsPrimitive` should behave like a primitive\n numeric type (e.g. a newtype around another primitive), and the\n intended conversion must never fail.","sig":null,"attributes":[{"value":"/ A generic interface for casting between machine scalars with the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46660,"byte_end":46728,"line_start":715,"line_end":715,"column_start":1,"column_end":69}},{"value":"/ `as` operator, which admits narrowing and precision loss.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46729,"byte_end":46790,"line_start":716,"line_end":716,"column_start":1,"column_end":62}},{"value":"/ Implementers of this trait `AsPrimitive` should behave like a primitive","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46791,"byte_end":46866,"line_start":717,"line_end":717,"column_start":1,"column_end":76}},{"value":"/ numeric type (e.g. a newtype around another primitive), and the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46867,"byte_end":46934,"line_start":718,"line_end":718,"column_start":1,"column_end":68}},{"value":"/ intended conversion must never fail.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46935,"byte_end":46975,"line_start":719,"line_end":719,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46976,"byte_end":46979,"line_start":720,"line_end":720,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46980,"byte_end":46994,"line_start":721,"line_end":721,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46995,"byte_end":46998,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46999,"byte_end":47006,"line_start":723,"line_end":723,"column_start":1,"column_end":8}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47007,"byte_end":47041,"line_start":724,"line_end":724,"column_start":1,"column_end":35}},{"value":"/ let three: i32 = (3.14159265f32).as_();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47042,"byte_end":47085,"line_start":725,"line_end":725,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(three, 3);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47086,"byte_end":47111,"line_start":726,"line_end":726,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47112,"byte_end":47119,"line_start":727,"line_end":727,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47120,"byte_end":47123,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47124,"byte_end":47136,"line_start":729,"line_end":729,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47137,"byte_end":47140,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ Currently, some uses of the `as` operator are not entirely safe.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47141,"byte_end":47209,"line_start":731,"line_end":731,"column_start":1,"column_end":69}},{"value":"/ In particular, it is undefined behavior if:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47210,"byte_end":47257,"line_start":732,"line_end":732,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47258,"byte_end":47261,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ - A truncated floating point value cannot fit in the target integer","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47262,"byte_end":47333,"line_start":734,"line_end":734,"column_start":1,"column_end":72}},{"value":"/   type ([#10184](https://github.com/rust-lang/rust/issues/10184));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47334,"byte_end":47404,"line_start":735,"line_end":735,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47405,"byte_end":47408,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47409,"byte_end":47422,"line_start":737,"line_end":737,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47423,"byte_end":47457,"line_start":738,"line_end":738,"column_start":1,"column_end":35}},{"value":"/ let x: u8 = (1.04E+17).as_(); // UB","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47458,"byte_end":47497,"line_start":739,"line_end":739,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47498,"byte_end":47505,"line_start":740,"line_end":740,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47506,"byte_end":47509,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ - Or a floating point value does not fit in another floating","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47510,"byte_end":47574,"line_start":742,"line_end":742,"column_start":1,"column_end":65}},{"value":"/   point type ([#15536](https://github.com/rust-lang/rust/issues/15536)).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47575,"byte_end":47651,"line_start":743,"line_end":743,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47652,"byte_end":47655,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47656,"byte_end":47669,"line_start":745,"line_end":745,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47670,"byte_end":47704,"line_start":746,"line_end":746,"column_start":1,"column_end":35}},{"value":"/ let x: f32 = (1e300f64).as_(); // UB","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47705,"byte_end":47745,"line_start":747,"line_end":747,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47746,"byte_end":47753,"line_start":748,"line_end":748,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47754,"byte_end":47757,"line_start":749,"line_end":749,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47898,"byte_end":47901,"line_start":755,"line_end":755,"column_start":8,"column_end":11},"name":"as_","qualname":"::cast::AsPrimitive::as_","value":"pub fn as_(Self) -> T","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Convert a value to another, using the `as` operator.\n","sig":null,"attributes":[{"value":"/ Convert a value to another, using the `as` operator.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47834,"byte_end":47890,"line_start":754,"line_end":754,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":360},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":2295},{"krate":0,"index":2353},{"krate":0,"index":488},{"krate":0,"index":2411},{"krate":0,"index":2431},{"krate":0,"index":2451}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49627,"byte_end":49636,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"FloatCore","qualname":"::float::FloatCore","value":"FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers that works with `no_std`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49485,"byte_end":49555,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49556,"byte_end":49559,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This trait implements a subset of the `Float` trait.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49560,"byte_end":49616,"line_start":15,"line_end":15,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50033,"byte_end":50041,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::FloatCore::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns positive infinity.","sig":null,"attributes":[{"value":"/ Returns positive infinity.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49699,"byte_end":49729,"line_start":17,"line_end":17,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49734,"byte_end":49737,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49742,"byte_end":49756,"line_start":19,"line_end":19,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49761,"byte_end":49764,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49769,"byte_end":49776,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49781,"byte_end":49818,"line_start":22,"line_end":22,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49823,"byte_end":49847,"line_start":23,"line_end":23,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49852,"byte_end":49855,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49860,"byte_end":49894,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/     assert!(T::infinity() == x);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49899,"byte_end":49935,"line_start":26,"line_end":26,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49940,"byte_end":49945,"line_start":27,"line_end":27,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49950,"byte_end":49953,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49958,"byte_end":49983,"line_start":29,"line_end":29,"column_start":5,"column_end":30}},{"value":"/ check(f64::INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49988,"byte_end":50013,"line_start":30,"line_end":30,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50018,"byte_end":50025,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50404,"byte_end":50416,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::FloatCore::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns negative infinity.","sig":null,"attributes":[{"value":"/ Returns negative infinity.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50058,"byte_end":50088,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50093,"byte_end":50096,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50101,"byte_end":50115,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50120,"byte_end":50123,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50128,"byte_end":50135,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50140,"byte_end":50177,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50182,"byte_end":50206,"line_start":40,"line_end":40,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50211,"byte_end":50214,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50219,"byte_end":50253,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/     assert!(T::neg_infinity() == x);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50258,"byte_end":50298,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50303,"byte_end":50308,"line_start":44,"line_end":44,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50313,"byte_end":50316,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50321,"byte_end":50350,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50355,"byte_end":50384,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50389,"byte_end":50396,"line_start":48,"line_end":48,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50726,"byte_end":50729,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::FloatCore::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns NaN.","sig":null,"attributes":[{"value":"/ Returns NaN.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50433,"byte_end":50449,"line_start":51,"line_end":51,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50454,"byte_end":50457,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50462,"byte_end":50476,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50481,"byte_end":50484,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50489,"byte_end":50496,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50501,"byte_end":50538,"line_start":56,"line_end":56,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50543,"byte_end":50546,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>() {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50551,"byte_end":50581,"line_start":58,"line_end":58,"column_start":5,"column_end":35}},{"value":"/     let n = T::nan();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50586,"byte_end":50611,"line_start":59,"line_end":59,"column_start":5,"column_end":30}},{"value":"/     assert!(n != n);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50616,"byte_end":50640,"line_start":60,"line_end":60,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50645,"byte_end":50650,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50655,"byte_end":50658,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ check::<f32>();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50663,"byte_end":50682,"line_start":63,"line_end":63,"column_start":5,"column_end":24}},{"value":"/ check::<f64>();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50687,"byte_end":50706,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50711,"byte_end":50718,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51145,"byte_end":51153,"line_start":85,"line_end":85,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::FloatCore::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50746,"byte_end":50765,"line_start":68,"line_end":68,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50770,"byte_end":50773,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50778,"byte_end":50792,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50797,"byte_end":50800,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50805,"byte_end":50812,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50817,"byte_end":50854,"line_start":73,"line_end":73,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50859,"byte_end":50883,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50888,"byte_end":50891,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(n: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50896,"byte_end":50930,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/     let z = T::neg_zero();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50935,"byte_end":50965,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/     assert!(z.is_zero());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":50970,"byte_end":50999,"line_start":78,"line_end":78,"column_start":5,"column_end":34}},{"value":"/     assert!(T::one() / z == n);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51004,"byte_end":51039,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51044,"byte_end":51049,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51054,"byte_end":51057,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51062,"byte_end":51091,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51096,"byte_end":51125,"line_start":83,"line_end":83,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51130,"byte_end":51137,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51532,"byte_end":51541,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::FloatCore::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51170,"byte_end":51237,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51242,"byte_end":51245,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51250,"byte_end":51264,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51269,"byte_end":51272,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51277,"byte_end":51284,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51289,"byte_end":51326,"line_start":92,"line_end":92,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51331,"byte_end":51355,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51360,"byte_end":51363,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51368,"byte_end":51402,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_value() == x);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51407,"byte_end":51444,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51449,"byte_end":51454,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51459,"byte_end":51462,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51467,"byte_end":51487,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ check(f64::MIN);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51492,"byte_end":51512,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51517,"byte_end":51524,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51961,"byte_end":51979,"line_start":119,"line_end":119,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::FloatCore::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51558,"byte_end":51639,"line_start":104,"line_end":104,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51644,"byte_end":51647,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51652,"byte_end":51666,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51671,"byte_end":51674,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51679,"byte_end":51686,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51691,"byte_end":51728,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51733,"byte_end":51757,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51762,"byte_end":51765,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51770,"byte_end":51804,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_positive_value() == x);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51809,"byte_end":51855,"line_start":113,"line_end":113,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51860,"byte_end":51865,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51870,"byte_end":51873,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN_POSITIVE);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51878,"byte_end":51907,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/ check(f64::MIN_POSITIVE);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51912,"byte_end":51941,"line_start":117,"line_end":117,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51946,"byte_end":51953,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52341,"byte_end":52348,"line_start":136,"line_end":136,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::FloatCore::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":51996,"byte_end":52040,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52045,"byte_end":52048,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52053,"byte_end":52067,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52072,"byte_end":52075,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52080,"byte_end":52087,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52092,"byte_end":52129,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52134,"byte_end":52158,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52163,"byte_end":52166,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52171,"byte_end":52205,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/     assert!(T::epsilon() == x);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52210,"byte_end":52245,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52250,"byte_end":52255,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52260,"byte_end":52263,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ check(f32::EPSILON);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52268,"byte_end":52292,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/ check(f64::EPSILON);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52297,"byte_end":52321,"line_start":134,"line_end":134,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52326,"byte_end":52333,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52726,"byte_end":52735,"line_start":153,"line_end":153,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::FloatCore::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52365,"byte_end":52431,"line_start":138,"line_end":138,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52436,"byte_end":52439,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52444,"byte_end":52458,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52463,"byte_end":52466,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52471,"byte_end":52478,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52483,"byte_end":52520,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52525,"byte_end":52549,"line_start":144,"line_end":144,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52554,"byte_end":52557,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52562,"byte_end":52596,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/     assert!(T::max_value() == x);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52601,"byte_end":52638,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52643,"byte_end":52648,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52653,"byte_end":52656,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52661,"byte_end":52681,"line_start":150,"line_end":150,"column_start":5,"column_end":25}},{"value":"/ check(f64::MAX);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52686,"byte_end":52706,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52711,"byte_end":52718,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53185,"byte_end":53191,"line_start":173,"line_end":173,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::FloatCore::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns `true` if the number is NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is NaN.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52752,"byte_end":52792,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52797,"byte_end":52800,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52805,"byte_end":52819,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52824,"byte_end":52827,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52832,"byte_end":52839,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52844,"byte_end":52881,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52886,"byte_end":52910,"line_start":161,"line_end":161,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52915,"byte_end":52918,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52923,"byte_end":52966,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_nan() == p);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":52971,"byte_end":53004,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53009,"byte_end":53014,"line_start":165,"line_end":165,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53019,"byte_end":53022,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ check(f32::NAN, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53027,"byte_end":53053,"line_start":167,"line_end":167,"column_start":5,"column_end":31}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53058,"byte_end":53090,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/ check(f64::NAN, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53095,"byte_end":53121,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53126,"byte_end":53151,"line_start":170,"line_end":170,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53156,"byte_end":53163,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53168,"byte_end":53177,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53768,"byte_end":53779,"line_start":197,"line_end":197,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::FloatCore::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns `true` if the number is infinite.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is infinite.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53240,"byte_end":53285,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53290,"byte_end":53293,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53298,"byte_end":53312,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53317,"byte_end":53320,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53325,"byte_end":53332,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53337,"byte_end":53374,"line_start":182,"line_end":182,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53379,"byte_end":53403,"line_start":183,"line_end":183,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53408,"byte_end":53411,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53416,"byte_end":53459,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_infinite() == p);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53464,"byte_end":53502,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53507,"byte_end":53512,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53517,"byte_end":53520,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53525,"byte_end":53556,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ check(f32::NEG_INFINITY, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53561,"byte_end":53596,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ check(f32::NAN, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53601,"byte_end":53628,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/ check(f64::INFINITY, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53633,"byte_end":53664,"line_start":192,"line_end":192,"column_start":5,"column_end":36}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53669,"byte_end":53704,"line_start":193,"line_end":193,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53709,"byte_end":53734,"line_start":194,"line_end":194,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53739,"byte_end":53746,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53751,"byte_end":53760,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54380,"byte_end":54389,"line_start":220,"line_end":220,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::FloatCore::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither infinite or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither infinite or NaN.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53872,"byte_end":53932,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53937,"byte_end":53940,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53945,"byte_end":53959,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53964,"byte_end":53967,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53972,"byte_end":53979,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":53984,"byte_end":54021,"line_start":206,"line_end":206,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54026,"byte_end":54050,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54055,"byte_end":54058,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54063,"byte_end":54106,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_finite() == p);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54111,"byte_end":54147,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54152,"byte_end":54157,"line_start":211,"line_end":211,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54162,"byte_end":54165,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54170,"byte_end":54202,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54207,"byte_end":54233,"line_start":214,"line_end":214,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54238,"byte_end":54274,"line_start":215,"line_end":215,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54279,"byte_end":54314,"line_start":216,"line_end":216,"column_start":5,"column_end":40}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54319,"byte_end":54346,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54351,"byte_end":54358,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54363,"byte_end":54372,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54987,"byte_end":54996,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::FloatCore::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite, subnormal or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite, subnormal or NaN.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54464,"byte_end":54541,"line_start":224,"line_end":224,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54546,"byte_end":54549,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54554,"byte_end":54568,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54573,"byte_end":54576,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54581,"byte_end":54588,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54593,"byte_end":54630,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54635,"byte_end":54659,"line_start":230,"line_end":230,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54664,"byte_end":54667,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54672,"byte_end":54715,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_normal() == p);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54720,"byte_end":54756,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54761,"byte_end":54766,"line_start":234,"line_end":234,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54771,"byte_end":54774,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54779,"byte_end":54811,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54816,"byte_end":54842,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54847,"byte_end":54883,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54888,"byte_end":54923,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54928,"byte_end":54953,"line_start":240,"line_end":240,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54958,"byte_end":54965,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":54970,"byte_end":54979,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55835,"byte_end":55843,"line_start":269,"line_end":269,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::FloatCore::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55070,"byte_end":55145,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55150,"byte_end":55219,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55224,"byte_end":55246,"line_start":249,"line_end":249,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55251,"byte_end":55254,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55259,"byte_end":55273,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55278,"byte_end":55281,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55286,"byte_end":55293,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55298,"byte_end":55335,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55340,"byte_end":55364,"line_start":255,"line_end":255,"column_start":5,"column_end":29}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55369,"byte_end":55398,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55403,"byte_end":55406,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, c: FpCategory) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55411,"byte_end":55460,"line_start":258,"line_end":258,"column_start":5,"column_end":54}},{"value":"/     assert!(x.classify() == c);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55465,"byte_end":55500,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55505,"byte_end":55510,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55515,"byte_end":55518,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, FpCategory::Infinite);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55523,"byte_end":55570,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ check(f32::MAX, FpCategory::Normal);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55575,"byte_end":55615,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/ check(f64::NAN, FpCategory::Nan);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55620,"byte_end":55657,"line_start":264,"line_end":264,"column_start":5,"column_end":42}},{"value":"/ check(f64::MIN_POSITIVE, FpCategory::Normal);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55662,"byte_end":55711,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/ check(f64::MIN_POSITIVE / 2.0, FpCategory::Subnormal);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55716,"byte_end":55774,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/ check(0.0f64, FpCategory::Zero);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55779,"byte_end":55815,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55820,"byte_end":55827,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56476,"byte_end":56481,"line_start":294,"line_end":294,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::FloatCore::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55870,"byte_end":55933,"line_start":271,"line_end":271,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55938,"byte_end":55941,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55946,"byte_end":55960,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55965,"byte_end":55968,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55973,"byte_end":55980,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":55985,"byte_end":56022,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56027,"byte_end":56051,"line_start":277,"line_end":277,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56056,"byte_end":56059,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56064,"byte_end":56104,"line_start":279,"line_end":279,"column_start":5,"column_end":45}},{"value":"/     assert!(x.floor() == y);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56109,"byte_end":56141,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56146,"byte_end":56151,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56156,"byte_end":56159,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56164,"byte_end":56204,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56209,"byte_end":56232,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56237,"byte_end":56260,"line_start":285,"line_end":285,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56265,"byte_end":56288,"line_start":286,"line_end":286,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56293,"byte_end":56317,"line_start":287,"line_end":287,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56322,"byte_end":56347,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56352,"byte_end":56377,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -2.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56382,"byte_end":56407,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56412,"byte_end":56442,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56447,"byte_end":56454,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56459,"byte_end":56468,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57327,"byte_end":57331,"line_start":328,"line_end":328,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::FloatCore::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56718,"byte_end":56785,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56790,"byte_end":56793,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56798,"byte_end":56812,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56817,"byte_end":56820,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56825,"byte_end":56832,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56837,"byte_end":56874,"line_start":310,"line_end":310,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56879,"byte_end":56903,"line_start":311,"line_end":311,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56908,"byte_end":56911,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56916,"byte_end":56956,"line_start":313,"line_end":313,"column_start":5,"column_end":45}},{"value":"/     assert!(x.ceil() == y);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56961,"byte_end":56992,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":56997,"byte_end":57002,"line_start":315,"line_end":315,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57007,"byte_end":57010,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57015,"byte_end":57055,"line_start":317,"line_end":317,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57060,"byte_end":57083,"line_start":318,"line_end":318,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57088,"byte_end":57111,"line_start":319,"line_end":319,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 2.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57116,"byte_end":57139,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57144,"byte_end":57168,"line_start":321,"line_end":321,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57173,"byte_end":57198,"line_start":322,"line_end":322,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57203,"byte_end":57228,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57233,"byte_end":57258,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57263,"byte_end":57293,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57298,"byte_end":57305,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57310,"byte_end":57319,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58163,"byte_end":58168,"line_start":361,"line_end":361,"column_start":8,"column_end":13},"name":"round","qualname":"::float::FloatCore::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from `0.0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57568,"byte_end":57650,"line_start":339,"line_end":339,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57655,"byte_end":57658,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57663,"byte_end":57677,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57682,"byte_end":57685,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57690,"byte_end":57697,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57702,"byte_end":57739,"line_start":344,"line_end":344,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57744,"byte_end":57768,"line_start":345,"line_end":345,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57773,"byte_end":57776,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57781,"byte_end":57821,"line_start":347,"line_end":347,"column_start":5,"column_end":45}},{"value":"/     assert!(x.round() == y);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57826,"byte_end":57858,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57863,"byte_end":57868,"line_start":349,"line_end":349,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57873,"byte_end":57876,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57881,"byte_end":57921,"line_start":351,"line_end":351,"column_start":5,"column_end":45}},{"value":"/ check(0.4f32, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57926,"byte_end":57949,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/ check(0.5f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57954,"byte_end":57977,"line_start":353,"line_end":353,"column_start":5,"column_end":28}},{"value":"/ check(0.6f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":57982,"byte_end":58005,"line_start":354,"line_end":354,"column_start":5,"column_end":28}},{"value":"/ check(-0.4f64, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58010,"byte_end":58034,"line_start":355,"line_end":355,"column_start":5,"column_end":29}},{"value":"/ check(-0.5f64, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58039,"byte_end":58064,"line_start":356,"line_end":356,"column_start":5,"column_end":30}},{"value":"/ check(-0.6f64, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58069,"byte_end":58094,"line_start":357,"line_end":357,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58099,"byte_end":58129,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58134,"byte_end":58141,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58146,"byte_end":58155,"line_start":360,"line_end":360,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59259,"byte_end":59264,"line_start":405,"line_end":405,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::FloatCore::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58676,"byte_end":58716,"line_start":382,"line_end":382,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58721,"byte_end":58724,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58729,"byte_end":58743,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58748,"byte_end":58751,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58756,"byte_end":58763,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58768,"byte_end":58805,"line_start":387,"line_end":387,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58810,"byte_end":58834,"line_start":388,"line_end":388,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58839,"byte_end":58842,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58847,"byte_end":58887,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/     assert!(x.trunc() == y);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58892,"byte_end":58924,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58929,"byte_end":58934,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58939,"byte_end":58942,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58947,"byte_end":58987,"line_start":394,"line_end":394,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":58992,"byte_end":59015,"line_start":395,"line_end":395,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59020,"byte_end":59043,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59048,"byte_end":59071,"line_start":397,"line_end":397,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59076,"byte_end":59100,"line_start":398,"line_end":398,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59105,"byte_end":59130,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59135,"byte_end":59160,"line_start":400,"line_end":400,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59165,"byte_end":59190,"line_start":401,"line_end":401,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59195,"byte_end":59225,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59230,"byte_end":59237,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59242,"byte_end":59251,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59985,"byte_end":59990,"line_start":437,"line_end":437,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::FloatCore::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59411,"byte_end":59455,"line_start":414,"line_end":414,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59460,"byte_end":59463,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59468,"byte_end":59482,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59487,"byte_end":59490,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59495,"byte_end":59502,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59507,"byte_end":59544,"line_start":419,"line_end":419,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59549,"byte_end":59573,"line_start":420,"line_end":420,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59578,"byte_end":59581,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59586,"byte_end":59626,"line_start":422,"line_end":422,"column_start":5,"column_end":45}},{"value":"/     assert!(x.fract() == y);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59631,"byte_end":59663,"line_start":423,"line_end":423,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59668,"byte_end":59673,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59678,"byte_end":59681,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59686,"byte_end":59711,"line_start":426,"line_end":426,"column_start":5,"column_end":30}},{"value":"/ check(0.75f32, 0.75);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59716,"byte_end":59741,"line_start":427,"line_end":427,"column_start":5,"column_end":30}},{"value":"/ check(1.0f32, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59746,"byte_end":59769,"line_start":428,"line_end":428,"column_start":5,"column_end":28}},{"value":"/ check(1.25f32, 0.25);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59774,"byte_end":59799,"line_start":429,"line_end":429,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59804,"byte_end":59828,"line_start":430,"line_end":430,"column_start":5,"column_end":29}},{"value":"/ check(-0.75f64, -0.75);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59833,"byte_end":59860,"line_start":431,"line_end":431,"column_start":5,"column_end":32}},{"value":"/ check(-1.0f64, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59865,"byte_end":59889,"line_start":432,"line_end":432,"column_start":5,"column_end":29}},{"value":"/ check(-1.25f64, -0.25);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59894,"byte_end":59921,"line_start":433,"line_end":433,"column_start":5,"column_end":32}},{"value":"/ check(f64::MIN, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59926,"byte_end":59951,"line_start":434,"line_end":434,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59956,"byte_end":59963,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":59968,"byte_end":59977,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60695,"byte_end":60698,"line_start":466,"line_end":466,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::FloatCore::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `FloatCore::nan()` if the\n number is `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `FloatCore::nan()` if the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60129,"byte_end":60205,"line_start":445,"line_end":445,"column_start":5,"column_end":81}},{"value":"/ number is `FloatCore::nan()`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60210,"byte_end":60243,"line_start":446,"line_end":446,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60248,"byte_end":60251,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60256,"byte_end":60270,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60275,"byte_end":60278,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60283,"byte_end":60290,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60295,"byte_end":60332,"line_start":451,"line_end":451,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60337,"byte_end":60361,"line_start":452,"line_end":452,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60366,"byte_end":60369,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60374,"byte_end":60414,"line_start":454,"line_end":454,"column_start":5,"column_end":45}},{"value":"/     assert!(x.abs() == y);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60419,"byte_end":60449,"line_start":455,"line_end":455,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60454,"byte_end":60459,"line_start":456,"line_end":456,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60464,"byte_end":60467,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60472,"byte_end":60512,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60517,"byte_end":60540,"line_start":459,"line_end":459,"column_start":5,"column_end":28}},{"value":"/ check(0.0f64, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60545,"byte_end":60568,"line_start":460,"line_end":460,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60573,"byte_end":60597,"line_start":461,"line_end":461,"column_start":5,"column_end":29}},{"value":"/ check(-1.0f64, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60602,"byte_end":60626,"line_start":462,"line_end":462,"column_start":5,"column_end":29}},{"value":"/ check(f64::MIN, f64::MAX);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60631,"byte_end":60661,"line_start":463,"line_end":463,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60666,"byte_end":60673,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60678,"byte_end":60687,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61622,"byte_end":61628,"line_start":500,"line_end":500,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::FloatCore::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60891,"byte_end":60947,"line_start":476,"line_end":476,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60952,"byte_end":60955,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `FloatCore::infinity()`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":60960,"byte_end":61032,"line_start":478,"line_end":478,"column_start":5,"column_end":77}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `FloatCore::neg_infinity()`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61037,"byte_end":61114,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/ - `FloatCore::nan()` if the number is `FloatCore::nan()`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61119,"byte_end":61179,"line_start":480,"line_end":480,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61184,"byte_end":61187,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61192,"byte_end":61206,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61211,"byte_end":61214,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61219,"byte_end":61226,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61231,"byte_end":61268,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61273,"byte_end":61297,"line_start":486,"line_end":486,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61302,"byte_end":61305,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61310,"byte_end":61350,"line_start":488,"line_end":488,"column_start":5,"column_end":45}},{"value":"/     assert!(x.signum() == y);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61355,"byte_end":61388,"line_start":489,"line_end":489,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61393,"byte_end":61398,"line_start":490,"line_end":490,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61403,"byte_end":61406,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61411,"byte_end":61441,"line_start":492,"line_end":492,"column_start":5,"column_end":35}},{"value":"/ check(3.0f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61446,"byte_end":61469,"line_start":493,"line_end":493,"column_start":5,"column_end":28}},{"value":"/ check(0.0f32, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61474,"byte_end":61497,"line_start":494,"line_end":494,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61502,"byte_end":61527,"line_start":495,"line_end":495,"column_start":5,"column_end":30}},{"value":"/ check(-3.0f64, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61532,"byte_end":61557,"line_start":496,"line_end":496,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61562,"byte_end":61588,"line_start":497,"line_end":497,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61593,"byte_end":61600,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61605,"byte_end":61614,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62490,"byte_end":62506,"line_start":533,"line_end":533,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::FloatCore::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0` and\n `FloatCore::infinity()`, and since Rust 1.20 also\n `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0` and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61827,"byte_end":61889,"line_start":510,"line_end":510,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::infinity()`, and since Rust 1.20 also","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61894,"byte_end":61947,"line_start":511,"line_end":511,"column_start":5,"column_end":58}},{"value":"/ `FloatCore::nan()`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61952,"byte_end":61975,"line_start":512,"line_end":512,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61980,"byte_end":61983,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":61988,"byte_end":62002,"line_start":514,"line_end":514,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62007,"byte_end":62010,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62015,"byte_end":62022,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62027,"byte_end":62064,"line_start":517,"line_end":517,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62069,"byte_end":62093,"line_start":518,"line_end":518,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62098,"byte_end":62101,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62106,"byte_end":62149,"line_start":520,"line_end":520,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_positive() == p);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62154,"byte_end":62197,"line_start":521,"line_end":521,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62202,"byte_end":62207,"line_start":522,"line_end":522,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62212,"byte_end":62215,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62220,"byte_end":62251,"line_start":524,"line_end":524,"column_start":5,"column_end":36}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62256,"byte_end":62282,"line_start":525,"line_end":525,"column_start":5,"column_end":31}},{"value":"/ check(0.0f32, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62287,"byte_end":62311,"line_start":526,"line_end":526,"column_start":5,"column_end":29}},{"value":"/ check(-0.0f64, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62316,"byte_end":62342,"line_start":527,"line_end":527,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62347,"byte_end":62383,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62388,"byte_end":62423,"line_start":529,"line_end":529,"column_start":5,"column_end":40}},{"value":"/ check(-f64::NAN, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62428,"byte_end":62456,"line_start":530,"line_end":530,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62461,"byte_end":62468,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62473,"byte_end":62482,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63236,"byte_end":63252,"line_start":560,"line_end":560,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::FloatCore::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0` and\n `FloatCore::neg_infinity()`, and since Rust 1.20 also\n `-FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0` and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62567,"byte_end":62629,"line_start":537,"line_end":537,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::neg_infinity()`, and since Rust 1.20 also","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62634,"byte_end":62691,"line_start":538,"line_end":538,"column_start":5,"column_end":62}},{"value":"/ `-FloatCore::nan()`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62696,"byte_end":62720,"line_start":539,"line_end":539,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62725,"byte_end":62728,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62733,"byte_end":62747,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62752,"byte_end":62755,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62760,"byte_end":62767,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62772,"byte_end":62809,"line_start":544,"line_end":544,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62814,"byte_end":62838,"line_start":545,"line_end":545,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62843,"byte_end":62846,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62851,"byte_end":62894,"line_start":547,"line_end":547,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_negative() == p);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62899,"byte_end":62942,"line_start":548,"line_end":548,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62947,"byte_end":62952,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62957,"byte_end":62960,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":62965,"byte_end":62997,"line_start":551,"line_end":551,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63002,"byte_end":63029,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/ check(0.0f32, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63034,"byte_end":63059,"line_start":553,"line_end":553,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63064,"byte_end":63089,"line_start":554,"line_end":554,"column_start":5,"column_end":30}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63094,"byte_end":63129,"line_start":555,"line_end":555,"column_start":5,"column_end":40}},{"value":"/ check(f64::MIN_POSITIVE, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63134,"byte_end":63170,"line_start":556,"line_end":556,"column_start":5,"column_end":41}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63175,"byte_end":63202,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63207,"byte_end":63214,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63219,"byte_end":63228,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63885,"byte_end":63888,"line_start":585,"line_end":585,"column_start":8,"column_end":11},"name":"min","qualname":"::float::FloatCore::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63347,"byte_end":63390,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63395,"byte_end":63398,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63403,"byte_end":63475,"line_start":567,"line_end":567,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63480,"byte_end":63483,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63488,"byte_end":63502,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63507,"byte_end":63510,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63515,"byte_end":63522,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63527,"byte_end":63564,"line_start":572,"line_end":572,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63569,"byte_end":63593,"line_start":573,"line_end":573,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63598,"byte_end":63601,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63606,"byte_end":63654,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/     assert!(x.min(y) == min);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63659,"byte_end":63692,"line_start":576,"line_end":576,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63697,"byte_end":63702,"line_start":577,"line_end":577,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63707,"byte_end":63710,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63715,"byte_end":63743,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/ check(f32::NAN, 2.0, 2.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63748,"byte_end":63778,"line_start":580,"line_end":580,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, -2.0, -2.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63783,"byte_end":63813,"line_start":581,"line_end":581,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, f64::NAN, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63818,"byte_end":63851,"line_start":582,"line_end":582,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63856,"byte_end":63863,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":63868,"byte_end":63877,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64685,"byte_end":64688,"line_start":619,"line_end":619,"column_start":8,"column_end":11},"name":"max","qualname":"::float::FloatCore::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64143,"byte_end":64186,"line_start":599,"line_end":599,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64191,"byte_end":64194,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64199,"byte_end":64271,"line_start":601,"line_end":601,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64276,"byte_end":64279,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64284,"byte_end":64298,"line_start":603,"line_end":603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64303,"byte_end":64306,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64311,"byte_end":64318,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64323,"byte_end":64360,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64365,"byte_end":64389,"line_start":607,"line_end":607,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64394,"byte_end":64397,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, max: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64402,"byte_end":64450,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/     assert!(x.max(y) == max);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64455,"byte_end":64488,"line_start":610,"line_end":610,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64493,"byte_end":64498,"line_start":611,"line_end":611,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64503,"byte_end":64506,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 2.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64511,"byte_end":64539,"line_start":613,"line_end":613,"column_start":5,"column_end":33}},{"value":"/ check(1.0f32, f32::NAN, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64544,"byte_end":64577,"line_start":614,"line_end":614,"column_start":5,"column_end":38}},{"value":"/ check(-1.0f64, 2.0, 2.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64582,"byte_end":64611,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/ check(-1.0f64, f64::NAN, -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64616,"byte_end":64651,"line_start":616,"line_end":616,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64656,"byte_end":64663,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64668,"byte_end":64677,"line_start":618,"line_end":618,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65443,"byte_end":65448,"line_start":652,"line_end":652,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::FloatCore::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the reciprocal (multiplicative inverse) of the number.","sig":null,"attributes":[{"value":"/ Returns the reciprocal (multiplicative inverse) of the number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":64943,"byte_end":65009,"line_start":633,"line_end":633,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65014,"byte_end":65017,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65022,"byte_end":65036,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65041,"byte_end":65044,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65049,"byte_end":65056,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65061,"byte_end":65098,"line_start":638,"line_end":638,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65103,"byte_end":65127,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65132,"byte_end":65135,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65140,"byte_end":65180,"line_start":641,"line_end":641,"column_start":5,"column_end":45}},{"value":"/     assert!(x.recip() == y);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65185,"byte_end":65217,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/     assert!(y.recip() == x);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65222,"byte_end":65254,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65259,"byte_end":65264,"line_start":644,"line_end":644,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65269,"byte_end":65272,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65277,"byte_end":65307,"line_start":646,"line_end":646,"column_start":5,"column_end":35}},{"value":"/ check(2.0f32, 0.5);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65312,"byte_end":65335,"line_start":647,"line_end":647,"column_start":5,"column_end":28}},{"value":"/ check(-0.25f64, -4.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65340,"byte_end":65366,"line_start":648,"line_end":648,"column_start":5,"column_end":31}},{"value":"/ check(-0.0f64, f64::NEG_INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65371,"byte_end":65409,"line_start":649,"line_end":649,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65414,"byte_end":65421,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65426,"byte_end":65435,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66042,"byte_end":66046,"line_start":676,"line_end":676,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::FloatCore::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65503,"byte_end":65542,"line_start":656,"line_end":656,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65547,"byte_end":65550,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65555,"byte_end":65616,"line_start":658,"line_end":658,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65621,"byte_end":65624,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65629,"byte_end":65643,"line_start":660,"line_end":660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65648,"byte_end":65651,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65656,"byte_end":65663,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65668,"byte_end":65705,"line_start":663,"line_end":663,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65710,"byte_end":65713,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, exp: i32, powi: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65718,"byte_end":65771,"line_start":665,"line_end":665,"column_start":5,"column_end":58}},{"value":"/     assert!(x.powi(exp) == powi);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65776,"byte_end":65813,"line_start":666,"line_end":666,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65818,"byte_end":65823,"line_start":667,"line_end":667,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65828,"byte_end":65831,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ check(9.0f32, 2, 81.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65836,"byte_end":65863,"line_start":669,"line_end":669,"column_start":5,"column_end":32}},{"value":"/ check(1.0f32, -2, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65868,"byte_end":65895,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ check(10.0f64, 20, 1e20);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65900,"byte_end":65929,"line_start":671,"line_end":671,"column_start":5,"column_end":34}},{"value":"/ check(4.0f64, -2, 0.0625);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65934,"byte_end":65964,"line_start":672,"line_end":672,"column_start":5,"column_end":35}},{"value":"/ check(-1.0f64, std::i32::MIN, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":65969,"byte_end":66008,"line_start":673,"line_end":673,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66013,"byte_end":66020,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66025,"byte_end":66034,"line_start":675,"line_end":675,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66963,"byte_end":66973,"line_start":704,"line_end":704,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::FloatCore::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Converts to degrees, assuming the number is in radians.","sig":null,"attributes":[{"value":"/ Converts to degrees, assuming the number is in radians.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66488,"byte_end":66547,"line_start":687,"line_end":687,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66552,"byte_end":66555,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66560,"byte_end":66574,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66579,"byte_end":66582,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66587,"byte_end":66594,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66599,"byte_end":66636,"line_start":692,"line_end":692,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66641,"byte_end":66665,"line_start":693,"line_end":693,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66670,"byte_end":66673,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(rad: T, deg: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66678,"byte_end":66722,"line_start":695,"line_end":695,"column_start":5,"column_end":49}},{"value":"/     assert!(rad.to_degrees() == deg);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66727,"byte_end":66768,"line_start":696,"line_end":696,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66773,"byte_end":66778,"line_start":697,"line_end":697,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66783,"byte_end":66786,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66791,"byte_end":66814,"line_start":699,"line_end":699,"column_start":5,"column_end":28}},{"value":"/ check(f32::consts::PI, 180.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66819,"byte_end":66853,"line_start":700,"line_end":700,"column_start":5,"column_end":39}},{"value":"/ check(f64::consts::FRAC_PI_4, 45.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66858,"byte_end":66898,"line_start":701,"line_end":701,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66903,"byte_end":66943,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66948,"byte_end":66955,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67469,"byte_end":67479,"line_start":723,"line_end":723,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::FloatCore::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Converts to radians, assuming the number is in degrees.","sig":null,"attributes":[{"value":"/ Converts to radians, assuming the number is in degrees.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":66994,"byte_end":67053,"line_start":706,"line_end":706,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67058,"byte_end":67061,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67066,"byte_end":67080,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67085,"byte_end":67088,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67093,"byte_end":67100,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67105,"byte_end":67142,"line_start":711,"line_end":711,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67147,"byte_end":67171,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67176,"byte_end":67179,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(deg: T, rad: T) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67184,"byte_end":67228,"line_start":714,"line_end":714,"column_start":5,"column_end":49}},{"value":"/     assert!(deg.to_radians() == rad);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67233,"byte_end":67274,"line_start":715,"line_end":715,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67279,"byte_end":67284,"line_start":716,"line_end":716,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67289,"byte_end":67292,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67297,"byte_end":67320,"line_start":718,"line_end":718,"column_start":5,"column_end":28}},{"value":"/ check(180.0, f32::consts::PI);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67325,"byte_end":67359,"line_start":719,"line_end":719,"column_start":5,"column_end":39}},{"value":"/ check(45.0, f64::consts::FRAC_PI_4);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67364,"byte_end":67404,"line_start":720,"line_end":720,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67409,"byte_end":67449,"line_start":721,"line_end":721,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67454,"byte_end":67461,"line_start":722,"line_end":722,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":68238,"byte_end":68252,"line_start":746,"line_end":746,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::FloatCore::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67500,"byte_end":67578,"line_start":725,"line_end":725,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67583,"byte_end":67660,"line_start":726,"line_end":726,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67665,"byte_end":67668,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67673,"byte_end":67687,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67692,"byte_end":67695,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67700,"byte_end":67707,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67712,"byte_end":67749,"line_start":731,"line_end":731,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67754,"byte_end":67778,"line_start":732,"line_end":732,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67783,"byte_end":67786,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, m: u64, e: i16, s:i8) {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67791,"byte_end":67847,"line_start":734,"line_end":734,"column_start":5,"column_end":61}},{"value":"/     let (mantissa, exponent, sign) = x.integer_decode();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67852,"byte_end":67912,"line_start":735,"line_end":735,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(mantissa, m);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67917,"byte_end":67949,"line_start":736,"line_end":736,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(exponent, e);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67954,"byte_end":67986,"line_start":737,"line_end":737,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(sign, s);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":67991,"byte_end":68019,"line_start":738,"line_end":738,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":68024,"byte_end":68029,"line_start":739,"line_end":739,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":68034,"byte_end":68037,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ check(2.0f32, 1 << 23, -22, 1);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":68042,"byte_end":68077,"line_start":741,"line_end":741,"column_start":5,"column_end":40}},{"value":"/ check(-2.0f32, 1 << 23, -22, -1);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":68082,"byte_end":68119,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/ check(f32::INFINITY, 1 << 23, 105, 1);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":68124,"byte_end":68166,"line_start":743,"line_end":743,"column_start":5,"column_end":47}},{"value":"/ check(f64::NEG_INFINITY, 1 << 52, 972, -1);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":68171,"byte_end":68218,"line_start":744,"line_end":744,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":68223,"byte_end":68230,"line_start":745,"line_end":745,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":427},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73315,"byte_end":73320,"line_start":905,"line_end":905,"column_start":11,"column_end":16},"name":"Float","qualname":"::float::Float","value":"Float: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73114,"byte_end":73158,"line_start":901,"line_end":901,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73159,"byte_end":73162,"line_start":902,"line_end":902,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature, or with the `libm` feature otherwise.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73163,"byte_end":73257,"line_start":903,"line_end":903,"column_start":1,"column_end":95}},{"value":"cfg(any(feature = \"std\", feature = \"libm\"))","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73258,"byte_end":73304,"line_start":904,"line_end":904,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73566,"byte_end":73569,"line_start":915,"line_end":915,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::Float::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the `NaN` value.","sig":null,"attributes":[{"value":"/ Returns the `NaN` value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73383,"byte_end":73411,"line_start":906,"line_end":906,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73416,"byte_end":73419,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73424,"byte_end":73431,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73436,"byte_end":73462,"line_start":909,"line_end":909,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73467,"byte_end":73470,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ let nan: f32 = Float::nan();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73475,"byte_end":73507,"line_start":911,"line_end":911,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73512,"byte_end":73515,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73520,"byte_end":73546,"line_start":913,"line_end":913,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73551,"byte_end":73558,"line_start":914,"line_end":914,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73891,"byte_end":73899,"line_start":928,"line_end":928,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::Float::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the infinite value.","sig":null,"attributes":[{"value":"/ Returns the infinite value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73585,"byte_end":73616,"line_start":916,"line_end":916,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73621,"byte_end":73624,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73629,"byte_end":73636,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73641,"byte_end":73667,"line_start":919,"line_end":919,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73672,"byte_end":73689,"line_start":920,"line_end":920,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73694,"byte_end":73697,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ let infinity: f32 = Float::infinity();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73702,"byte_end":73744,"line_start":922,"line_end":922,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73749,"byte_end":73752,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ assert!(infinity.is_infinite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73757,"byte_end":73793,"line_start":924,"line_end":924,"column_start":5,"column_end":41}},{"value":"/ assert!(!infinity.is_finite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73798,"byte_end":73833,"line_start":925,"line_end":925,"column_start":5,"column_end":40}},{"value":"/ assert!(infinity > f32::MAX);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73838,"byte_end":73871,"line_start":926,"line_end":926,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73876,"byte_end":73883,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74250,"byte_end":74262,"line_start":941,"line_end":941,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::Float::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the negative infinite value.","sig":null,"attributes":[{"value":"/ Returns the negative infinite value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73915,"byte_end":73955,"line_start":929,"line_end":929,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73960,"byte_end":73963,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73968,"byte_end":73975,"line_start":931,"line_end":931,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73980,"byte_end":74006,"line_start":932,"line_end":932,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74011,"byte_end":74028,"line_start":933,"line_end":933,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74033,"byte_end":74036,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ let neg_infinity: f32 = Float::neg_infinity();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74041,"byte_end":74091,"line_start":935,"line_end":935,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74096,"byte_end":74099,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ assert!(neg_infinity.is_infinite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74104,"byte_end":74144,"line_start":937,"line_end":937,"column_start":5,"column_end":45}},{"value":"/ assert!(!neg_infinity.is_finite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74149,"byte_end":74188,"line_start":938,"line_end":938,"column_start":5,"column_end":44}},{"value":"/ assert!(neg_infinity < f32::MIN);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74193,"byte_end":74230,"line_start":939,"line_end":939,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74235,"byte_end":74242,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74632,"byte_end":74640,"line_start":955,"line_end":955,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::Float::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74278,"byte_end":74297,"line_start":942,"line_end":942,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74302,"byte_end":74305,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74310,"byte_end":74317,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ use num_traits::{Zero, Float};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74322,"byte_end":74356,"line_start":945,"line_end":945,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74361,"byte_end":74364,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74369,"byte_end":74406,"line_start":947,"line_end":947,"column_start":5,"column_end":42}},{"value":"/ let zero: f32 = Zero::zero();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74411,"byte_end":74444,"line_start":948,"line_end":948,"column_start":5,"column_end":38}},{"value":"/ let neg_zero: f32 = Float::neg_zero();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74449,"byte_end":74491,"line_start":949,"line_end":949,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74496,"byte_end":74499,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(zero, neg_zero);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74504,"byte_end":74535,"line_start":951,"line_end":951,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(7.0f32/inf, zero);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74540,"byte_end":74573,"line_start":952,"line_end":952,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(zero * 10.0, zero);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74578,"byte_end":74612,"line_start":953,"line_end":953,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74617,"byte_end":74624,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74907,"byte_end":74916,"line_start":967,"line_end":967,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::Float::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74657,"byte_end":74724,"line_start":957,"line_end":957,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74729,"byte_end":74732,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74737,"byte_end":74744,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74749,"byte_end":74775,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74780,"byte_end":74797,"line_start":961,"line_end":961,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74802,"byte_end":74805,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_value();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74810,"byte_end":74846,"line_start":963,"line_end":963,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74851,"byte_end":74854,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74859,"byte_end":74887,"line_start":965,"line_end":965,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74892,"byte_end":74899,"line_start":966,"line_end":966,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75215,"byte_end":75233,"line_start":979,"line_end":979,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::Float::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":74933,"byte_end":75014,"line_start":969,"line_end":969,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75019,"byte_end":75022,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75027,"byte_end":75034,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75039,"byte_end":75065,"line_start":972,"line_end":972,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75070,"byte_end":75087,"line_start":973,"line_end":973,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75092,"byte_end":75095,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_positive_value();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75100,"byte_end":75145,"line_start":975,"line_end":975,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75150,"byte_end":75153,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75158,"byte_end":75195,"line_start":977,"line_end":977,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75200,"byte_end":75207,"line_start":978,"line_end":978,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75610,"byte_end":75617,"line_start":996,"line_end":996,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::Float::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75250,"byte_end":75294,"line_start":981,"line_end":981,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75299,"byte_end":75302,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75307,"byte_end":75314,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75319,"byte_end":75345,"line_start":984,"line_end":984,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75350,"byte_end":75367,"line_start":985,"line_end":985,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75372,"byte_end":75375,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::epsilon();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75380,"byte_end":75414,"line_start":987,"line_end":987,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75419,"byte_end":75422,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75427,"byte_end":75459,"line_start":989,"line_end":989,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75464,"byte_end":75471,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75476,"byte_end":75479,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75484,"byte_end":75496,"line_start":992,"line_end":992,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75501,"byte_end":75504,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75509,"byte_end":75575,"line_start":994,"line_end":994,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75580,"byte_end":75602,"line_start":995,"line_end":995,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75958,"byte_end":75967,"line_start":1009,"line_end":1009,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::Float::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75717,"byte_end":75783,"line_start":1000,"line_end":1000,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75788,"byte_end":75791,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75796,"byte_end":75803,"line_start":1002,"line_end":1002,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75808,"byte_end":75834,"line_start":1003,"line_end":1003,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75839,"byte_end":75856,"line_start":1004,"line_end":1004,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75861,"byte_end":75864,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::max_value();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75869,"byte_end":75905,"line_start":1006,"line_end":1006,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75910,"byte_end":75938,"line_start":1007,"line_end":1007,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75943,"byte_end":75950,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76265,"byte_end":76271,"line_start":1023,"line_end":1023,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::Float::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `true` if this value is `NaN` and false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is `NaN` and false otherwise.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":75984,"byte_end":76046,"line_start":1011,"line_end":1011,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76051,"byte_end":76054,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76059,"byte_end":76066,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76071,"byte_end":76097,"line_start":1014,"line_end":1014,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76102,"byte_end":76119,"line_start":1015,"line_end":1015,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76124,"byte_end":76127,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ let nan = f64::NAN;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76132,"byte_end":76155,"line_start":1017,"line_end":1017,"column_start":5,"column_end":28}},{"value":"/ let f = 7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76160,"byte_end":76176,"line_start":1018,"line_end":1018,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76181,"byte_end":76184,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76189,"byte_end":76215,"line_start":1020,"line_end":1020,"column_start":5,"column_end":31}},{"value":"/ assert!(!f.is_nan());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76220,"byte_end":76245,"line_start":1021,"line_end":1021,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76250,"byte_end":76257,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76809,"byte_end":76820,"line_start":1043,"line_end":1043,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::Float::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `true` if this value is positive infinity or negative infinity and\n false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is positive infinity or negative infinity and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76292,"byte_end":76370,"line_start":1025,"line_end":1025,"column_start":5,"column_end":83}},{"value":"/ false otherwise.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76375,"byte_end":76395,"line_start":1026,"line_end":1026,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76400,"byte_end":76403,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76408,"byte_end":76415,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76420,"byte_end":76446,"line_start":1029,"line_end":1029,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76451,"byte_end":76468,"line_start":1030,"line_end":1030,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76473,"byte_end":76476,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76481,"byte_end":76500,"line_start":1032,"line_end":1032,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76505,"byte_end":76542,"line_start":1033,"line_end":1033,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76547,"byte_end":76592,"line_start":1034,"line_end":1034,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76597,"byte_end":76625,"line_start":1035,"line_end":1035,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76630,"byte_end":76633,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_infinite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76638,"byte_end":76668,"line_start":1037,"line_end":1037,"column_start":5,"column_end":35}},{"value":"/ assert!(!nan.is_infinite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76673,"byte_end":76705,"line_start":1038,"line_end":1038,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76710,"byte_end":76713,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ assert!(inf.is_infinite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76718,"byte_end":76749,"line_start":1040,"line_end":1040,"column_start":5,"column_end":36}},{"value":"/ assert!(neg_inf.is_infinite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76754,"byte_end":76789,"line_start":1041,"line_end":1041,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76794,"byte_end":76801,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77312,"byte_end":77321,"line_start":1062,"line_end":1062,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::Float::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `true` if this number is neither infinite nor `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if this number is neither infinite nor `NaN`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76841,"byte_end":76905,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76910,"byte_end":76913,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76918,"byte_end":76925,"line_start":1047,"line_end":1047,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76930,"byte_end":76956,"line_start":1048,"line_end":1048,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76961,"byte_end":76978,"line_start":1049,"line_end":1049,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76983,"byte_end":76986,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":76991,"byte_end":77010,"line_start":1051,"line_end":1051,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77015,"byte_end":77052,"line_start":1052,"line_end":1052,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77057,"byte_end":77102,"line_start":1053,"line_end":1053,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77107,"byte_end":77135,"line_start":1054,"line_end":1054,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77140,"byte_end":77143,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_finite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77148,"byte_end":77175,"line_start":1056,"line_end":1056,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77180,"byte_end":77183,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ assert!(!nan.is_finite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77188,"byte_end":77218,"line_start":1058,"line_end":1058,"column_start":5,"column_end":35}},{"value":"/ assert!(!inf.is_finite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77223,"byte_end":77253,"line_start":1059,"line_end":1059,"column_start":5,"column_end":35}},{"value":"/ assert!(!neg_inf.is_finite());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77258,"byte_end":77292,"line_start":1060,"line_end":1060,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77297,"byte_end":77304,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78071,"byte_end":78080,"line_start":1086,"line_end":1086,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::Float::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite,\n [subnormal][subnormal], or `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77342,"byte_end":77401,"line_start":1064,"line_end":1064,"column_start":5,"column_end":64}},{"value":"/ [subnormal][subnormal], or `NaN`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77406,"byte_end":77443,"line_start":1065,"line_end":1065,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77448,"byte_end":77451,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77456,"byte_end":77463,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77468,"byte_end":77494,"line_start":1068,"line_end":1068,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77499,"byte_end":77516,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77521,"byte_end":77524,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ let min = f32::MIN_POSITIVE; // 1.17549435e-38f32","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77529,"byte_end":77582,"line_start":1071,"line_end":1071,"column_start":5,"column_end":58}},{"value":"/ let max = f32::MAX;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77587,"byte_end":77610,"line_start":1072,"line_end":1072,"column_start":5,"column_end":28}},{"value":"/ let lower_than_min = 1.0e-40_f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77615,"byte_end":77652,"line_start":1073,"line_end":1073,"column_start":5,"column_end":42}},{"value":"/ let zero = 0.0f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77657,"byte_end":77679,"line_start":1074,"line_end":1074,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77684,"byte_end":77687,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ assert!(min.is_normal());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77692,"byte_end":77721,"line_start":1076,"line_end":1076,"column_start":5,"column_end":34}},{"value":"/ assert!(max.is_normal());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77726,"byte_end":77755,"line_start":1077,"line_end":1077,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77760,"byte_end":77763,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ assert!(!zero.is_normal());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77768,"byte_end":77799,"line_start":1079,"line_end":1079,"column_start":5,"column_end":36}},{"value":"/ assert!(!f32::NAN.is_normal());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77804,"byte_end":77839,"line_start":1080,"line_end":1080,"column_start":5,"column_end":40}},{"value":"/ assert!(!f32::INFINITY.is_normal());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77844,"byte_end":77884,"line_start":1081,"line_end":1081,"column_start":5,"column_end":45}},{"value":"/ // Values between `0` and `min` are Subnormal.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77889,"byte_end":77939,"line_start":1082,"line_end":1082,"column_start":5,"column_end":55}},{"value":"/ assert!(!lower_than_min.is_normal());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77944,"byte_end":77985,"line_start":1083,"line_end":1083,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":77990,"byte_end":77997,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ [subnormal]: http://en.wikipedia.org/wiki/Denormal_number","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78002,"byte_end":78063,"line_start":1085,"line_end":1085,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78594,"byte_end":78602,"line_start":1103,"line_end":1103,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::Float::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78101,"byte_end":78176,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78181,"byte_end":78250,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78255,"byte_end":78277,"line_start":1090,"line_end":1090,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78282,"byte_end":78285,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78290,"byte_end":78297,"line_start":1092,"line_end":1092,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78302,"byte_end":78328,"line_start":1093,"line_end":1093,"column_start":5,"column_end":31}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78333,"byte_end":78362,"line_start":1094,"line_end":1094,"column_start":5,"column_end":34}},{"value":"/ use std::f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78367,"byte_end":78384,"line_start":1095,"line_end":1095,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78389,"byte_end":78392,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ let num = 12.4f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78397,"byte_end":78419,"line_start":1097,"line_end":1097,"column_start":5,"column_end":27}},{"value":"/ let inf = f32::INFINITY;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78424,"byte_end":78452,"line_start":1098,"line_end":1098,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78457,"byte_end":78460,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(num.classify(), FpCategory::Normal);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78465,"byte_end":78516,"line_start":1100,"line_end":1100,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(inf.classify(), FpCategory::Infinite);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78521,"byte_end":78574,"line_start":1101,"line_end":1101,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78579,"byte_end":78586,"line_start":1102,"line_end":1102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78894,"byte_end":78899,"line_start":1116,"line_end":1116,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::Float::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78629,"byte_end":78692,"line_start":1105,"line_end":1105,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78697,"byte_end":78700,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78705,"byte_end":78712,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78717,"byte_end":78743,"line_start":1108,"line_end":1108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78748,"byte_end":78751,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78756,"byte_end":78773,"line_start":1110,"line_end":1110,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78778,"byte_end":78794,"line_start":1111,"line_end":1111,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78799,"byte_end":78802,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78807,"byte_end":78838,"line_start":1113,"line_end":1113,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78843,"byte_end":78874,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78879,"byte_end":78886,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79187,"byte_end":79191,"line_start":1129,"line_end":1129,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::Float::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78920,"byte_end":78987,"line_start":1118,"line_end":1118,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":78992,"byte_end":78995,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79000,"byte_end":79007,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79012,"byte_end":79038,"line_start":1121,"line_end":1121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79043,"byte_end":79046,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79051,"byte_end":79068,"line_start":1123,"line_end":1123,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79073,"byte_end":79089,"line_start":1124,"line_end":1124,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79094,"byte_end":79097,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79102,"byte_end":79132,"line_start":1126,"line_end":1126,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79137,"byte_end":79167,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79172,"byte_end":79179,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79505,"byte_end":79510,"line_start":1143,"line_end":1143,"column_start":8,"column_end":13},"name":"round","qualname":"::float::Float::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79212,"byte_end":79287,"line_start":1131,"line_end":1131,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79292,"byte_end":79302,"line_start":1132,"line_end":1132,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79307,"byte_end":79310,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79315,"byte_end":79322,"line_start":1134,"line_end":1134,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79327,"byte_end":79353,"line_start":1135,"line_end":1135,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79358,"byte_end":79361,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79366,"byte_end":79382,"line_start":1137,"line_end":1137,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79387,"byte_end":79404,"line_start":1138,"line_end":1138,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79409,"byte_end":79412,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79417,"byte_end":79448,"line_start":1140,"line_end":1140,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79453,"byte_end":79485,"line_start":1141,"line_end":1141,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79490,"byte_end":79497,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79774,"byte_end":79779,"line_start":1156,"line_end":1156,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::Float::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79531,"byte_end":79571,"line_start":1145,"line_end":1145,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79576,"byte_end":79579,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79584,"byte_end":79591,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79596,"byte_end":79622,"line_start":1148,"line_end":1148,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79627,"byte_end":79630,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79635,"byte_end":79651,"line_start":1150,"line_end":1150,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79656,"byte_end":79673,"line_start":1151,"line_end":1151,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79678,"byte_end":79681,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79686,"byte_end":79717,"line_start":1153,"line_end":1153,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79722,"byte_end":79754,"line_start":1154,"line_end":1154,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79759,"byte_end":79766,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80175,"byte_end":80180,"line_start":1171,"line_end":1171,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::Float::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79800,"byte_end":79844,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79849,"byte_end":79852,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79857,"byte_end":79864,"line_start":1160,"line_end":1160,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79869,"byte_end":79895,"line_start":1161,"line_end":1161,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79900,"byte_end":79903,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79908,"byte_end":79924,"line_start":1163,"line_end":1163,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79929,"byte_end":79946,"line_start":1164,"line_end":1164,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":79951,"byte_end":80002,"line_start":1165,"line_end":1165,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80007,"byte_end":80061,"line_start":1166,"line_end":1166,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80066,"byte_end":80069,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80074,"byte_end":80112,"line_start":1168,"line_end":1168,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80117,"byte_end":80155,"line_start":1169,"line_end":1169,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80160,"byte_end":80167,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80710,"byte_end":80713,"line_start":1191,"line_end":1191,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::Float::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80201,"byte_end":80273,"line_start":1173,"line_end":1173,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80278,"byte_end":80307,"line_start":1174,"line_end":1174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80312,"byte_end":80315,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80320,"byte_end":80327,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80332,"byte_end":80358,"line_start":1177,"line_end":1177,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80363,"byte_end":80380,"line_start":1178,"line_end":1178,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80385,"byte_end":80388,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80393,"byte_end":80409,"line_start":1180,"line_end":1180,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80414,"byte_end":80431,"line_start":1181,"line_end":1181,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80436,"byte_end":80439,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80444,"byte_end":80491,"line_start":1183,"line_end":1183,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80496,"byte_end":80546,"line_start":1184,"line_end":1184,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80551,"byte_end":80554,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80559,"byte_end":80597,"line_start":1186,"line_end":1186,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80602,"byte_end":80640,"line_start":1187,"line_end":1187,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80645,"byte_end":80648,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.abs().is_nan());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80653,"byte_end":80690,"line_start":1189,"line_end":1189,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80695,"byte_end":80702,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81280,"byte_end":81286,"line_start":1210,"line_end":1210,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::Float::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80734,"byte_end":80790,"line_start":1193,"line_end":1193,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80795,"byte_end":80798,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80803,"byte_end":80871,"line_start":1195,"line_end":1195,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80876,"byte_end":80949,"line_start":1196,"line_end":1196,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":80954,"byte_end":81006,"line_start":1197,"line_end":1197,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81011,"byte_end":81014,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81019,"byte_end":81026,"line_start":1199,"line_end":1199,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81031,"byte_end":81057,"line_start":1200,"line_end":1200,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81062,"byte_end":81079,"line_start":1201,"line_end":1201,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81084,"byte_end":81087,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81092,"byte_end":81108,"line_start":1203,"line_end":1203,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81113,"byte_end":81116,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81121,"byte_end":81153,"line_start":1205,"line_end":1205,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81158,"byte_end":81207,"line_start":1206,"line_end":1206,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81212,"byte_end":81215,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81220,"byte_end":81260,"line_start":1208,"line_end":1208,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81265,"byte_end":81272,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81759,"byte_end":81775,"line_start":1228,"line_end":1228,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::Float::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81307,"byte_end":81366,"line_start":1212,"line_end":1212,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81371,"byte_end":81436,"line_start":1213,"line_end":1213,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81441,"byte_end":81444,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81449,"byte_end":81456,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81461,"byte_end":81487,"line_start":1216,"line_end":1216,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81492,"byte_end":81509,"line_start":1217,"line_end":1217,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81514,"byte_end":81517,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81522,"byte_end":81555,"line_start":1219,"line_end":1219,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81560,"byte_end":81563,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81568,"byte_end":81584,"line_start":1221,"line_end":1221,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81589,"byte_end":81606,"line_start":1222,"line_end":1222,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81611,"byte_end":81614,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81619,"byte_end":81653,"line_start":1224,"line_end":1224,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81658,"byte_end":81693,"line_start":1225,"line_end":1225,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81698,"byte_end":81739,"line_start":1226,"line_end":1226,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81744,"byte_end":81751,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82244,"byte_end":82260,"line_start":1246,"line_end":1246,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::Float::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81796,"byte_end":81855,"line_start":1230,"line_end":1230,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81860,"byte_end":81930,"line_start":1231,"line_end":1231,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81935,"byte_end":81938,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81943,"byte_end":81950,"line_start":1233,"line_end":1233,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81955,"byte_end":81981,"line_start":1234,"line_end":1234,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":81986,"byte_end":82003,"line_start":1235,"line_end":1235,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82008,"byte_end":82011,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82016,"byte_end":82044,"line_start":1237,"line_end":1237,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82049,"byte_end":82052,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82057,"byte_end":82073,"line_start":1239,"line_end":1239,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82078,"byte_end":82095,"line_start":1240,"line_end":1240,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82100,"byte_end":82103,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82108,"byte_end":82143,"line_start":1242,"line_end":1242,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82148,"byte_end":82182,"line_start":1243,"line_end":1243,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82187,"byte_end":82224,"line_start":1244,"line_end":1244,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82229,"byte_end":82236,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82872,"byte_end":82879,"line_start":1266,"line_end":1266,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::float::Float::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82281,"byte_end":82353,"line_start":1248,"line_end":1248,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82358,"byte_end":82430,"line_start":1249,"line_end":1249,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82435,"byte_end":82438,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82443,"byte_end":82517,"line_start":1251,"line_end":1251,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82522,"byte_end":82588,"line_start":1252,"line_end":1252,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82593,"byte_end":82596,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82601,"byte_end":82608,"line_start":1254,"line_end":1254,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82613,"byte_end":82639,"line_start":1255,"line_end":1255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82644,"byte_end":82647,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82652,"byte_end":82669,"line_start":1257,"line_end":1257,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82674,"byte_end":82690,"line_start":1258,"line_end":1258,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82695,"byte_end":82712,"line_start":1259,"line_end":1259,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82717,"byte_end":82720,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82725,"byte_end":82737,"line_start":1261,"line_end":1261,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82742,"byte_end":82803,"line_start":1262,"line_end":1262,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82808,"byte_end":82811,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82816,"byte_end":82852,"line_start":1264,"line_end":1264,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82857,"byte_end":82864,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83177,"byte_end":83182,"line_start":1277,"line_end":1277,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::Float::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82917,"byte_end":82970,"line_start":1267,"line_end":1267,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82975,"byte_end":82978,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82983,"byte_end":82990,"line_start":1269,"line_end":1269,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":82995,"byte_end":83021,"line_start":1270,"line_end":1270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83026,"byte_end":83029,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83034,"byte_end":83050,"line_start":1272,"line_end":1272,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83055,"byte_end":83108,"line_start":1273,"line_end":1273,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83113,"byte_end":83116,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83121,"byte_end":83157,"line_start":1275,"line_end":1275,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83162,"byte_end":83169,"line_start":1276,"line_end":1276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83519,"byte_end":83523,"line_start":1291,"line_end":1291,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::Float::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83203,"byte_end":83242,"line_start":1279,"line_end":1279,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83247,"byte_end":83250,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83255,"byte_end":83316,"line_start":1281,"line_end":1281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83321,"byte_end":83324,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83329,"byte_end":83336,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83341,"byte_end":83367,"line_start":1284,"line_end":1284,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83372,"byte_end":83375,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83380,"byte_end":83396,"line_start":1286,"line_end":1286,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83401,"byte_end":83450,"line_start":1287,"line_end":1287,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83455,"byte_end":83458,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83463,"byte_end":83499,"line_start":1289,"line_end":1289,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83504,"byte_end":83511,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83802,"byte_end":83806,"line_start":1303,"line_end":1303,"column_start":8,"column_end":12},"name":"powf","qualname":"::float::Float::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Raise a number to a floating point power.","sig":null,"attributes":[{"value":"/ Raise a number to a floating point power.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83552,"byte_end":83597,"line_start":1293,"line_end":1293,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83602,"byte_end":83605,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83610,"byte_end":83617,"line_start":1295,"line_end":1295,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83622,"byte_end":83648,"line_start":1296,"line_end":1296,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83653,"byte_end":83656,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83661,"byte_end":83677,"line_start":1298,"line_end":1298,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83682,"byte_end":83733,"line_start":1299,"line_end":1299,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83738,"byte_end":83741,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83746,"byte_end":83782,"line_start":1301,"line_end":1301,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83787,"byte_end":83794,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84229,"byte_end":84233,"line_start":1320,"line_end":1320,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::float::Float::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83836,"byte_end":83873,"line_start":1305,"line_end":1305,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83878,"byte_end":83881,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83886,"byte_end":83933,"line_start":1307,"line_end":1307,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83938,"byte_end":83941,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83946,"byte_end":83953,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83958,"byte_end":83984,"line_start":1310,"line_end":1310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83989,"byte_end":83992,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":83997,"byte_end":84020,"line_start":1312,"line_end":1312,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84025,"byte_end":84049,"line_start":1313,"line_end":1313,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84054,"byte_end":84057,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84062,"byte_end":84117,"line_start":1315,"line_end":1315,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84122,"byte_end":84125,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84130,"byte_end":84166,"line_start":1317,"line_end":1317,"column_start":5,"column_end":41}},{"value":"/ assert!(negative.sqrt().is_nan());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84171,"byte_end":84209,"line_start":1318,"line_end":1318,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84214,"byte_end":84221,"line_start":1319,"line_end":1319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84583,"byte_end":84586,"line_start":1336,"line_end":1336,"column_start":8,"column_end":11},"name":"exp","qualname":"::float::Float::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84254,"byte_end":84305,"line_start":1322,"line_end":1322,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84310,"byte_end":84313,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84318,"byte_end":84325,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84330,"byte_end":84356,"line_start":1325,"line_end":1325,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84361,"byte_end":84364,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84369,"byte_end":84387,"line_start":1327,"line_end":1327,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84392,"byte_end":84402,"line_start":1328,"line_end":1328,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84407,"byte_end":84429,"line_start":1329,"line_end":1329,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84434,"byte_end":84437,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84442,"byte_end":84463,"line_start":1331,"line_end":1331,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84468,"byte_end":84514,"line_start":1332,"line_end":1332,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84519,"byte_end":84522,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84527,"byte_end":84563,"line_start":1334,"line_end":1334,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84568,"byte_end":84575,"line_start":1335,"line_end":1335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84864,"byte_end":84868,"line_start":1350,"line_end":1350,"column_start":8,"column_end":12},"name":"exp2","qualname":"::float::Float::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84607,"byte_end":84630,"line_start":1338,"line_end":1338,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84635,"byte_end":84638,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84643,"byte_end":84650,"line_start":1340,"line_end":1340,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84655,"byte_end":84681,"line_start":1341,"line_end":1341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84686,"byte_end":84689,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84694,"byte_end":84710,"line_start":1343,"line_end":1343,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84715,"byte_end":84718,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84723,"byte_end":84742,"line_start":1345,"line_end":1345,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84747,"byte_end":84795,"line_start":1346,"line_end":1346,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84800,"byte_end":84803,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84808,"byte_end":84844,"line_start":1348,"line_end":1348,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84849,"byte_end":84856,"line_start":1349,"line_end":1349,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85215,"byte_end":85217,"line_start":1366,"line_end":1366,"column_start":8,"column_end":10},"name":"ln","qualname":"::float::Float::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84889,"byte_end":84937,"line_start":1352,"line_end":1352,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84942,"byte_end":84945,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84950,"byte_end":84957,"line_start":1354,"line_end":1354,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84962,"byte_end":84988,"line_start":1355,"line_end":1355,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":84993,"byte_end":84996,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85001,"byte_end":85019,"line_start":1357,"line_end":1357,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85024,"byte_end":85034,"line_start":1358,"line_end":1358,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85039,"byte_end":85061,"line_start":1359,"line_end":1359,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85066,"byte_end":85069,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85074,"byte_end":85095,"line_start":1361,"line_end":1361,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85100,"byte_end":85146,"line_start":1362,"line_end":1362,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85151,"byte_end":85154,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85159,"byte_end":85195,"line_start":1364,"line_end":1364,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85200,"byte_end":85207,"line_start":1365,"line_end":1365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85727,"byte_end":85730,"line_start":1385,"line_end":1385,"column_start":8,"column_end":11},"name":"log","qualname":"::float::Float::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85238,"byte_end":85312,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85317,"byte_end":85320,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85325,"byte_end":85332,"line_start":1370,"line_end":1370,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85337,"byte_end":85363,"line_start":1371,"line_end":1371,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85368,"byte_end":85371,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85376,"byte_end":85395,"line_start":1373,"line_end":1373,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85400,"byte_end":85418,"line_start":1374,"line_end":1374,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85423,"byte_end":85426,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85431,"byte_end":85456,"line_start":1376,"line_end":1376,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85461,"byte_end":85517,"line_start":1377,"line_end":1377,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85522,"byte_end":85525,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85530,"byte_end":85553,"line_start":1379,"line_end":1379,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85558,"byte_end":85612,"line_start":1380,"line_end":1380,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85617,"byte_end":85620,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85625,"byte_end":85664,"line_start":1382,"line_end":1382,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85669,"byte_end":85707,"line_start":1383,"line_end":1383,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85712,"byte_end":85719,"line_start":1384,"line_end":1384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86052,"byte_end":86056,"line_start":1399,"line_end":1399,"column_start":8,"column_end":12},"name":"log2","qualname":"::float::Float::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85763,"byte_end":85810,"line_start":1387,"line_end":1387,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85815,"byte_end":85818,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85823,"byte_end":85830,"line_start":1389,"line_end":1389,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85835,"byte_end":85861,"line_start":1390,"line_end":1390,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85866,"byte_end":85869,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85874,"byte_end":85892,"line_start":1392,"line_end":1392,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85897,"byte_end":85900,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85905,"byte_end":85928,"line_start":1394,"line_end":1394,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85933,"byte_end":85983,"line_start":1395,"line_end":1395,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85988,"byte_end":85991,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":85996,"byte_end":86032,"line_start":1397,"line_end":1397,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86037,"byte_end":86044,"line_start":1398,"line_end":1398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86371,"byte_end":86376,"line_start":1413,"line_end":1413,"column_start":8,"column_end":13},"name":"log10","qualname":"::float::Float::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86077,"byte_end":86125,"line_start":1401,"line_end":1401,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86130,"byte_end":86133,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86138,"byte_end":86145,"line_start":1403,"line_end":1403,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86150,"byte_end":86176,"line_start":1404,"line_end":1404,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86181,"byte_end":86184,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86189,"byte_end":86208,"line_start":1406,"line_end":1406,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86213,"byte_end":86216,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86221,"byte_end":86246,"line_start":1408,"line_end":1408,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86251,"byte_end":86302,"line_start":1409,"line_end":1409,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86307,"byte_end":86310,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86315,"byte_end":86351,"line_start":1411,"line_end":1411,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86356,"byte_end":86363,"line_start":1412,"line_end":1412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86675,"byte_end":86685,"line_start":1427,"line_end":1427,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::Float::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86397,"byte_end":86429,"line_start":1415,"line_end":1415,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86434,"byte_end":86437,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86442,"byte_end":86449,"line_start":1417,"line_end":1417,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86454,"byte_end":86479,"line_start":1418,"line_end":1418,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86484,"byte_end":86487,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86492,"byte_end":86519,"line_start":1420,"line_end":1420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86524,"byte_end":86527,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86532,"byte_end":86592,"line_start":1422,"line_end":1422,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86597,"byte_end":86600,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86605,"byte_end":86641,"line_start":1424,"line_end":1424,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86646,"byte_end":86653,"line_start":1425,"line_end":1425,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86658,"byte_end":86667,"line_start":1426,"line_end":1426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87116,"byte_end":87126,"line_start":1445,"line_end":1445,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::Float::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86834,"byte_end":86866,"line_start":1433,"line_end":1433,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86871,"byte_end":86874,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86879,"byte_end":86886,"line_start":1435,"line_end":1435,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86891,"byte_end":86916,"line_start":1436,"line_end":1436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86921,"byte_end":86924,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86929,"byte_end":86955,"line_start":1438,"line_end":1438,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86960,"byte_end":86963,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":86968,"byte_end":87033,"line_start":1440,"line_end":1440,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87038,"byte_end":87041,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87046,"byte_end":87082,"line_start":1442,"line_end":1442,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87087,"byte_end":87094,"line_start":1443,"line_end":1443,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87099,"byte_end":87108,"line_start":1444,"line_end":1444,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87480,"byte_end":87483,"line_start":1461,"line_end":1461,"column_start":8,"column_end":11},"name":"max","qualname":"::float::Float::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87275,"byte_end":87318,"line_start":1451,"line_end":1451,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87323,"byte_end":87326,"line_start":1452,"line_end":1452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87331,"byte_end":87338,"line_start":1453,"line_end":1453,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87343,"byte_end":87369,"line_start":1454,"line_end":1454,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87374,"byte_end":87377,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87382,"byte_end":87398,"line_start":1456,"line_end":1456,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87403,"byte_end":87419,"line_start":1457,"line_end":1457,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87424,"byte_end":87427,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87432,"byte_end":87460,"line_start":1459,"line_end":1459,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87465,"byte_end":87472,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87722,"byte_end":87725,"line_start":1473,"line_end":1473,"column_start":8,"column_end":11},"name":"min","qualname":"::float::Float::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87517,"byte_end":87560,"line_start":1463,"line_end":1463,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87565,"byte_end":87568,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87573,"byte_end":87580,"line_start":1465,"line_end":1465,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87585,"byte_end":87611,"line_start":1466,"line_end":1466,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87616,"byte_end":87619,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87624,"byte_end":87640,"line_start":1468,"line_end":1468,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87645,"byte_end":87661,"line_start":1469,"line_end":1469,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87666,"byte_end":87669,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87674,"byte_end":87702,"line_start":1471,"line_end":1471,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87707,"byte_end":87714,"line_start":1472,"line_end":1472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88223,"byte_end":88230,"line_start":1492,"line_end":1492,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::float::Float::abs_sub","value":"pub fn abs_sub(Self, Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87759,"byte_end":87802,"line_start":1475,"line_end":1475,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87807,"byte_end":87810,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87815,"byte_end":87846,"line_start":1477,"line_end":1477,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87851,"byte_end":87877,"line_start":1478,"line_end":1478,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87882,"byte_end":87885,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87890,"byte_end":87897,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87902,"byte_end":87928,"line_start":1481,"line_end":1481,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87933,"byte_end":87936,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87941,"byte_end":87957,"line_start":1483,"line_end":1483,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87962,"byte_end":87979,"line_start":1484,"line_end":1484,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87984,"byte_end":87987,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":87992,"byte_end":88048,"line_start":1486,"line_end":1486,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88053,"byte_end":88109,"line_start":1487,"line_end":1487,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88114,"byte_end":88117,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88122,"byte_end":88160,"line_start":1489,"line_end":1489,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88165,"byte_end":88203,"line_start":1490,"line_end":1490,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88208,"byte_end":88215,"line_start":1491,"line_end":1491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88538,"byte_end":88542,"line_start":1506,"line_end":1506,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::float::Float::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Take the cubic root of a number.","sig":null,"attributes":[{"value":"/ Take the cubic root of a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88264,"byte_end":88300,"line_start":1494,"line_end":1494,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88305,"byte_end":88308,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88313,"byte_end":88320,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88325,"byte_end":88351,"line_start":1497,"line_end":1497,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88356,"byte_end":88359,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88364,"byte_end":88380,"line_start":1499,"line_end":1499,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88385,"byte_end":88388,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88393,"byte_end":88416,"line_start":1501,"line_end":1501,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88421,"byte_end":88469,"line_start":1502,"line_end":1502,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88474,"byte_end":88477,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88482,"byte_end":88518,"line_start":1504,"line_end":1504,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88523,"byte_end":88530,"line_start":1505,"line_end":1505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88960,"byte_end":88965,"line_start":1522,"line_end":1522,"column_start":8,"column_end":13},"name":"hypot","qualname":"::float::Float::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88563,"byte_end":88637,"line_start":1508,"line_end":1508,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88642,"byte_end":88673,"line_start":1509,"line_end":1509,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88678,"byte_end":88681,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88686,"byte_end":88693,"line_start":1511,"line_end":1511,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88698,"byte_end":88724,"line_start":1512,"line_end":1512,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88729,"byte_end":88732,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88737,"byte_end":88753,"line_start":1514,"line_end":1514,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88758,"byte_end":88774,"line_start":1515,"line_end":1515,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88779,"byte_end":88782,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88787,"byte_end":88809,"line_start":1517,"line_end":1517,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88814,"byte_end":88891,"line_start":1518,"line_end":1518,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88896,"byte_end":88899,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88904,"byte_end":88940,"line_start":1520,"line_end":1520,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88945,"byte_end":88952,"line_start":1521,"line_end":1521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89293,"byte_end":89296,"line_start":1536,"line_end":1536,"column_start":8,"column_end":11},"name":"sin","qualname":"::float::Float::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":88999,"byte_end":89046,"line_start":1524,"line_end":1524,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89051,"byte_end":89054,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89059,"byte_end":89066,"line_start":1526,"line_end":1526,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89071,"byte_end":89097,"line_start":1527,"line_end":1527,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89102,"byte_end":89119,"line_start":1528,"line_end":1528,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89124,"byte_end":89127,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89132,"byte_end":89164,"line_start":1530,"line_end":1530,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89169,"byte_end":89172,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89177,"byte_end":89224,"line_start":1532,"line_end":1532,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89229,"byte_end":89232,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89237,"byte_end":89273,"line_start":1534,"line_end":1534,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89278,"byte_end":89285,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89613,"byte_end":89616,"line_start":1550,"line_end":1550,"column_start":8,"column_end":11},"name":"cos","qualname":"::float::Float::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89317,"byte_end":89366,"line_start":1538,"line_end":1538,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89371,"byte_end":89374,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89379,"byte_end":89386,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89391,"byte_end":89417,"line_start":1541,"line_end":1541,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89422,"byte_end":89439,"line_start":1542,"line_end":1542,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89444,"byte_end":89447,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89452,"byte_end":89484,"line_start":1544,"line_end":1544,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89489,"byte_end":89492,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89497,"byte_end":89544,"line_start":1546,"line_end":1546,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89549,"byte_end":89552,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89557,"byte_end":89593,"line_start":1548,"line_end":1548,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89598,"byte_end":89605,"line_start":1549,"line_end":1549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89926,"byte_end":89929,"line_start":1563,"line_end":1563,"column_start":8,"column_end":11},"name":"tan","qualname":"::float::Float::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89637,"byte_end":89687,"line_start":1552,"line_end":1552,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89692,"byte_end":89695,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89700,"byte_end":89707,"line_start":1554,"line_end":1554,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89712,"byte_end":89738,"line_start":1555,"line_end":1555,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89743,"byte_end":89760,"line_start":1556,"line_end":1556,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89765,"byte_end":89768,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89773,"byte_end":89805,"line_start":1558,"line_end":1558,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89810,"byte_end":89857,"line_start":1559,"line_end":1559,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89862,"byte_end":89865,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89870,"byte_end":89906,"line_start":1561,"line_end":1561,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89911,"byte_end":89918,"line_start":1562,"line_end":1562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90409,"byte_end":90413,"line_start":1580,"line_end":1580,"column_start":8,"column_end":12},"name":"asin","qualname":"::float::Float::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":89950,"byte_end":90017,"line_start":1565,"line_end":1565,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90022,"byte_end":90091,"line_start":1566,"line_end":1566,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90096,"byte_end":90108,"line_start":1567,"line_end":1567,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90113,"byte_end":90116,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90121,"byte_end":90128,"line_start":1569,"line_end":1569,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90133,"byte_end":90159,"line_start":1570,"line_end":1570,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90164,"byte_end":90181,"line_start":1571,"line_end":1571,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90186,"byte_end":90189,"line_start":1572,"line_end":1572,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90194,"byte_end":90228,"line_start":1573,"line_end":1573,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90233,"byte_end":90236,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90241,"byte_end":90263,"line_start":1575,"line_end":1575,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90268,"byte_end":90340,"line_start":1576,"line_end":1576,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90345,"byte_end":90348,"line_start":1577,"line_end":1577,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90353,"byte_end":90389,"line_start":1578,"line_end":1578,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90394,"byte_end":90401,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90889,"byte_end":90893,"line_start":1597,"line_end":1597,"column_start":8,"column_end":12},"name":"acos","qualname":"::float::Float::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90434,"byte_end":90503,"line_start":1582,"line_end":1582,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90508,"byte_end":90571,"line_start":1583,"line_end":1583,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90576,"byte_end":90588,"line_start":1584,"line_end":1584,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90593,"byte_end":90596,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90601,"byte_end":90608,"line_start":1586,"line_end":1586,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90613,"byte_end":90639,"line_start":1587,"line_end":1587,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90644,"byte_end":90661,"line_start":1588,"line_end":1588,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90666,"byte_end":90669,"line_start":1589,"line_end":1589,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90674,"byte_end":90708,"line_start":1590,"line_end":1590,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90713,"byte_end":90716,"line_start":1591,"line_end":1591,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90721,"byte_end":90743,"line_start":1592,"line_end":1592,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90748,"byte_end":90820,"line_start":1593,"line_end":1593,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90825,"byte_end":90828,"line_start":1594,"line_end":1594,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90833,"byte_end":90869,"line_start":1595,"line_end":1595,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90874,"byte_end":90881,"line_start":1596,"line_end":1596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91257,"byte_end":91261,"line_start":1612,"line_end":1612,"column_start":8,"column_end":12},"name":"atan","qualname":"::float::Float::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90914,"byte_end":90988,"line_start":1599,"line_end":1599,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":90993,"byte_end":91017,"line_start":1600,"line_end":1600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91022,"byte_end":91025,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91030,"byte_end":91037,"line_start":1602,"line_end":1602,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91042,"byte_end":91068,"line_start":1603,"line_end":1603,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91073,"byte_end":91076,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91081,"byte_end":91097,"line_start":1605,"line_end":1605,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91102,"byte_end":91105,"line_start":1606,"line_end":1606,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91110,"byte_end":91129,"line_start":1607,"line_end":1607,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91134,"byte_end":91188,"line_start":1608,"line_end":1608,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91193,"byte_end":91196,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91201,"byte_end":91237,"line_start":1610,"line_end":1610,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91242,"byte_end":91249,"line_start":1611,"line_end":1611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92142,"byte_end":92147,"line_start":1641,"line_end":1641,"column_start":8,"column_end":13},"name":"atan2","qualname":"::float::Float::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91282,"byte_end":91358,"line_start":1614,"line_end":1614,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91363,"byte_end":91366,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91371,"byte_end":91398,"line_start":1616,"line_end":1616,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91403,"byte_end":91451,"line_start":1617,"line_end":1617,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91456,"byte_end":91506,"line_start":1618,"line_end":1618,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91511,"byte_end":91562,"line_start":1619,"line_end":1619,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91567,"byte_end":91570,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91575,"byte_end":91582,"line_start":1621,"line_end":1621,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91587,"byte_end":91613,"line_start":1622,"line_end":1622,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91618,"byte_end":91635,"line_start":1623,"line_end":1623,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91640,"byte_end":91643,"line_start":1624,"line_end":1624,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91648,"byte_end":91677,"line_start":1625,"line_end":1625,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91682,"byte_end":91726,"line_start":1626,"line_end":1626,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91731,"byte_end":91762,"line_start":1627,"line_end":1627,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91767,"byte_end":91784,"line_start":1628,"line_end":1628,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91789,"byte_end":91807,"line_start":1629,"line_end":1629,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91812,"byte_end":91815,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91820,"byte_end":91844,"line_start":1631,"line_end":1631,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91849,"byte_end":91867,"line_start":1632,"line_end":1632,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91872,"byte_end":91889,"line_start":1633,"line_end":1633,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91894,"byte_end":91897,"line_start":1634,"line_end":1634,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91902,"byte_end":91962,"line_start":1635,"line_end":1635,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":91967,"byte_end":92028,"line_start":1636,"line_end":1636,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92033,"byte_end":92036,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92041,"byte_end":92079,"line_start":1638,"line_end":1638,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92084,"byte_end":92122,"line_start":1639,"line_end":1639,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92127,"byte_end":92134,"line_start":1640,"line_end":1640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92661,"byte_end":92668,"line_start":1659,"line_end":1659,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::float::Float::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92181,"byte_end":92256,"line_start":1643,"line_end":1643,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92261,"byte_end":92284,"line_start":1644,"line_end":1644,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92289,"byte_end":92292,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92297,"byte_end":92304,"line_start":1646,"line_end":1646,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92309,"byte_end":92335,"line_start":1647,"line_end":1647,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92340,"byte_end":92357,"line_start":1648,"line_end":1648,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92362,"byte_end":92365,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92370,"byte_end":92402,"line_start":1650,"line_end":1650,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92407,"byte_end":92431,"line_start":1651,"line_end":1651,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92436,"byte_end":92439,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92444,"byte_end":92493,"line_start":1653,"line_end":1653,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92498,"byte_end":92547,"line_start":1654,"line_end":1654,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92552,"byte_end":92555,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92560,"byte_end":92598,"line_start":1656,"line_end":1656,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92603,"byte_end":92641,"line_start":1657,"line_end":1657,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92646,"byte_end":92653,"line_start":1658,"line_end":1658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93036,"byte_end":93042,"line_start":1674,"line_end":1674,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::float::Float::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92697,"byte_end":92761,"line_start":1661,"line_end":1661,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92766,"byte_end":92794,"line_start":1662,"line_end":1662,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92799,"byte_end":92802,"line_start":1663,"line_end":1663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92807,"byte_end":92814,"line_start":1664,"line_end":1664,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92819,"byte_end":92845,"line_start":1665,"line_end":1665,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92850,"byte_end":92853,"line_start":1666,"line_end":1666,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92858,"byte_end":92874,"line_start":1667,"line_end":1667,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92879,"byte_end":92882,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92887,"byte_end":92907,"line_start":1669,"line_end":1669,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92912,"byte_end":92967,"line_start":1670,"line_end":1670,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92972,"byte_end":92975,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":92980,"byte_end":93016,"line_start":1672,"line_end":1672,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93021,"byte_end":93028,"line_start":1673,"line_end":1673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93469,"byte_end":93474,"line_start":1690,"line_end":1690,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::float::Float::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93063,"byte_end":93128,"line_start":1676,"line_end":1676,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93133,"byte_end":93178,"line_start":1677,"line_end":1677,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93183,"byte_end":93186,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93191,"byte_end":93198,"line_start":1679,"line_end":1679,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93203,"byte_end":93229,"line_start":1680,"line_end":1680,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93234,"byte_end":93251,"line_start":1681,"line_end":1681,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93256,"byte_end":93259,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93264,"byte_end":93297,"line_start":1683,"line_end":1683,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93302,"byte_end":93305,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93310,"byte_end":93346,"line_start":1685,"line_end":1685,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93351,"byte_end":93400,"line_start":1686,"line_end":1686,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93405,"byte_end":93408,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93413,"byte_end":93449,"line_start":1688,"line_end":1688,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93454,"byte_end":93461,"line_start":1689,"line_end":1689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93894,"byte_end":93898,"line_start":1708,"line_end":1708,"column_start":8,"column_end":12},"name":"sinh","qualname":"::float::Float::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93495,"byte_end":93524,"line_start":1692,"line_end":1692,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93529,"byte_end":93532,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93537,"byte_end":93544,"line_start":1694,"line_end":1694,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93549,"byte_end":93575,"line_start":1695,"line_end":1695,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93580,"byte_end":93597,"line_start":1696,"line_end":1696,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93602,"byte_end":93605,"line_start":1697,"line_end":1697,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93610,"byte_end":93637,"line_start":1698,"line_end":1698,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93642,"byte_end":93658,"line_start":1699,"line_end":1699,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93663,"byte_end":93666,"line_start":1700,"line_end":1700,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93671,"byte_end":93692,"line_start":1701,"line_end":1701,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93697,"byte_end":93744,"line_start":1702,"line_end":1702,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93749,"byte_end":93781,"line_start":1703,"line_end":1703,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93786,"byte_end":93825,"line_start":1704,"line_end":1704,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93830,"byte_end":93833,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93838,"byte_end":93874,"line_start":1706,"line_end":1706,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93879,"byte_end":93886,"line_start":1707,"line_end":1707,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94334,"byte_end":94338,"line_start":1726,"line_end":1726,"column_start":8,"column_end":12},"name":"cosh","qualname":"::float::Float::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93919,"byte_end":93950,"line_start":1710,"line_end":1710,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93955,"byte_end":93958,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93963,"byte_end":93970,"line_start":1712,"line_end":1712,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":93975,"byte_end":94001,"line_start":1713,"line_end":1713,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94006,"byte_end":94023,"line_start":1714,"line_end":1714,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94028,"byte_end":94031,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94036,"byte_end":94063,"line_start":1716,"line_end":1716,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94068,"byte_end":94084,"line_start":1717,"line_end":1717,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94089,"byte_end":94110,"line_start":1718,"line_end":1718,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94115,"byte_end":94159,"line_start":1719,"line_end":1719,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94164,"byte_end":94196,"line_start":1720,"line_end":1720,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94201,"byte_end":94240,"line_start":1721,"line_end":1721,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94245,"byte_end":94248,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94253,"byte_end":94271,"line_start":1723,"line_end":1723,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94276,"byte_end":94314,"line_start":1724,"line_end":1724,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94319,"byte_end":94326,"line_start":1725,"line_end":1725,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94794,"byte_end":94798,"line_start":1744,"line_end":1744,"column_start":8,"column_end":12},"name":"tanh","qualname":"::float::Float::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94359,"byte_end":94391,"line_start":1728,"line_end":1728,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94396,"byte_end":94399,"line_start":1729,"line_end":1729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94404,"byte_end":94411,"line_start":1730,"line_end":1730,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94416,"byte_end":94442,"line_start":1731,"line_end":1731,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94447,"byte_end":94464,"line_start":1732,"line_end":1732,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94469,"byte_end":94472,"line_start":1733,"line_end":1733,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94477,"byte_end":94504,"line_start":1734,"line_end":1734,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94509,"byte_end":94525,"line_start":1735,"line_end":1735,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94530,"byte_end":94533,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94538,"byte_end":94559,"line_start":1737,"line_end":1737,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94564,"byte_end":94624,"line_start":1738,"line_end":1738,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94629,"byte_end":94679,"line_start":1739,"line_end":1739,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94684,"byte_end":94723,"line_start":1740,"line_end":1740,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94728,"byte_end":94731,"line_start":1741,"line_end":1741,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94736,"byte_end":94774,"line_start":1742,"line_end":1742,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94779,"byte_end":94786,"line_start":1743,"line_end":1743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95093,"byte_end":95098,"line_start":1758,"line_end":1758,"column_start":8,"column_end":13},"name":"asinh","qualname":"::float::Float::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94819,"byte_end":94856,"line_start":1746,"line_end":1746,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94861,"byte_end":94864,"line_start":1747,"line_end":1747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94869,"byte_end":94876,"line_start":1748,"line_end":1748,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94881,"byte_end":94907,"line_start":1749,"line_end":1749,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94912,"byte_end":94915,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94920,"byte_end":94936,"line_start":1751,"line_end":1751,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94941,"byte_end":94970,"line_start":1752,"line_end":1752,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94975,"byte_end":94978,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":94983,"byte_end":95022,"line_start":1754,"line_end":1754,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95027,"byte_end":95030,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95035,"byte_end":95073,"line_start":1756,"line_end":1756,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95078,"byte_end":95085,"line_start":1757,"line_end":1757,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95395,"byte_end":95400,"line_start":1772,"line_end":1772,"column_start":8,"column_end":13},"name":"acosh","qualname":"::float::Float::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95119,"byte_end":95158,"line_start":1760,"line_end":1760,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95163,"byte_end":95166,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95171,"byte_end":95178,"line_start":1762,"line_end":1762,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95183,"byte_end":95209,"line_start":1763,"line_end":1763,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95214,"byte_end":95217,"line_start":1764,"line_end":1764,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95222,"byte_end":95238,"line_start":1765,"line_end":1765,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95243,"byte_end":95272,"line_start":1766,"line_end":1766,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95277,"byte_end":95280,"line_start":1767,"line_end":1767,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95285,"byte_end":95324,"line_start":1768,"line_end":1768,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95329,"byte_end":95332,"line_start":1769,"line_end":1769,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95337,"byte_end":95375,"line_start":1770,"line_end":1770,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95380,"byte_end":95387,"line_start":1771,"line_end":1771,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95731,"byte_end":95736,"line_start":1787,"line_end":1787,"column_start":8,"column_end":13},"name":"atanh","qualname":"::float::Float::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95421,"byte_end":95461,"line_start":1774,"line_end":1774,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95466,"byte_end":95469,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95474,"byte_end":95481,"line_start":1776,"line_end":1776,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95486,"byte_end":95512,"line_start":1777,"line_end":1777,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95517,"byte_end":95534,"line_start":1778,"line_end":1778,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95539,"byte_end":95542,"line_start":1779,"line_end":1779,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95547,"byte_end":95574,"line_start":1780,"line_end":1780,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95579,"byte_end":95608,"line_start":1781,"line_end":1781,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95613,"byte_end":95616,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95621,"byte_end":95660,"line_start":1783,"line_end":1783,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95665,"byte_end":95668,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95673,"byte_end":95711,"line_start":1785,"line_end":1785,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95716,"byte_end":95723,"line_start":1786,"line_end":1786,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96428,"byte_end":96442,"line_start":1808,"line_end":1808,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::Float::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":427},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95757,"byte_end":95835,"line_start":1789,"line_end":1789,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95840,"byte_end":95917,"line_start":1790,"line_end":1790,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95922,"byte_end":95925,"line_start":1791,"line_end":1791,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95930,"byte_end":95937,"line_start":1792,"line_end":1792,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95942,"byte_end":95968,"line_start":1793,"line_end":1793,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95973,"byte_end":95976,"line_start":1794,"line_end":1794,"column_start":5,"column_end":8}},{"value":"/ let num = 2.0f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":95981,"byte_end":96002,"line_start":1795,"line_end":1795,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96007,"byte_end":96010,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ // (8388608, -22, 1)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96015,"byte_end":96039,"line_start":1797,"line_end":1797,"column_start":5,"column_end":29}},{"value":"/ let (mantissa, exponent, sign) = Float::integer_decode(num);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96044,"byte_end":96108,"line_start":1798,"line_end":1798,"column_start":5,"column_end":69}},{"value":"/ let sign_f = sign as f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96113,"byte_end":96142,"line_start":1799,"line_end":1799,"column_start":5,"column_end":34}},{"value":"/ let mantissa_f = mantissa as f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96147,"byte_end":96184,"line_start":1800,"line_end":1800,"column_start":5,"column_end":42}},{"value":"/ let exponent_f = num.powf(exponent as f32);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96189,"byte_end":96236,"line_start":1801,"line_end":1801,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96241,"byte_end":96244,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ // 1 * 8388608 * 2^(-22) == 2","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96249,"byte_end":96282,"line_start":1803,"line_end":1803,"column_start":5,"column_end":38}},{"value":"/ let abs_difference = (sign_f * mantissa_f * exponent_f - num).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96287,"byte_end":96359,"line_start":1804,"line_end":1804,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96364,"byte_end":96367,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96372,"byte_end":96408,"line_start":1806,"line_end":1806,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":96413,"byte_end":96420,"line_start":1807,"line_end":1807,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":108939,"byte_end":108940,"line_start":2283,"line_end":2283,"column_start":5,"column_end":6},"name":"E","qualname":"::float::FloatConst::E","value":"pub fn E() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return Euler’s number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":108980,"byte_end":108989,"line_start":2285,"line_end":2285,"column_start":5,"column_end":14},"name":"FRAC_1_PI","qualname":"::float::FloatConst::FRAC_1_PI","value":"pub fn FRAC_1_PI() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `1.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109036,"byte_end":109049,"line_start":2287,"line_end":2287,"column_start":5,"column_end":18},"name":"FRAC_1_SQRT_2","qualname":"::float::FloatConst::FRAC_1_SQRT_2","value":"pub fn FRAC_1_SQRT_2() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `1.0 / sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109089,"byte_end":109098,"line_start":2289,"line_end":2289,"column_start":5,"column_end":14},"name":"FRAC_2_PI","qualname":"::float::FloatConst::FRAC_2_PI","value":"pub fn FRAC_2_PI() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `2.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109144,"byte_end":109158,"line_start":2291,"line_end":2291,"column_start":5,"column_end":19},"name":"FRAC_2_SQRT_PI","qualname":"::float::FloatConst::FRAC_2_SQRT_PI","value":"pub fn FRAC_2_SQRT_PI() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `2.0 / sqrt(π)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109198,"byte_end":109207,"line_start":2293,"line_end":2293,"column_start":5,"column_end":14},"name":"FRAC_PI_2","qualname":"::float::FloatConst::FRAC_PI_2","value":"pub fn FRAC_PI_2() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `π / 2.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109247,"byte_end":109256,"line_start":2295,"line_end":2295,"column_start":5,"column_end":14},"name":"FRAC_PI_3","qualname":"::float::FloatConst::FRAC_PI_3","value":"pub fn FRAC_PI_3() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `π / 3.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109296,"byte_end":109305,"line_start":2297,"line_end":2297,"column_start":5,"column_end":14},"name":"FRAC_PI_4","qualname":"::float::FloatConst::FRAC_PI_4","value":"pub fn FRAC_PI_4() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `π / 4.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109345,"byte_end":109354,"line_start":2299,"line_end":2299,"column_start":5,"column_end":14},"name":"FRAC_PI_6","qualname":"::float::FloatConst::FRAC_PI_6","value":"pub fn FRAC_PI_6() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `π / 6.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109394,"byte_end":109403,"line_start":2301,"line_end":2301,"column_start":5,"column_end":14},"name":"FRAC_PI_8","qualname":"::float::FloatConst::FRAC_PI_8","value":"pub fn FRAC_PI_8() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `π / 8.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109443,"byte_end":109448,"line_start":2303,"line_end":2303,"column_start":5,"column_end":10},"name":"LN_10","qualname":"::float::FloatConst::LN_10","value":"pub fn LN_10() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `ln(10.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109487,"byte_end":109491,"line_start":2305,"line_end":2305,"column_start":5,"column_end":9},"name":"LN_2","qualname":"::float::FloatConst::LN_2","value":"pub fn LN_2() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `ln(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109531,"byte_end":109538,"line_start":2307,"line_end":2307,"column_start":5,"column_end":12},"name":"LOG10_E","qualname":"::float::FloatConst::LOG10_E","value":"pub fn LOG10_E() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `log10(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109577,"byte_end":109583,"line_start":2309,"line_end":2309,"column_start":5,"column_end":11},"name":"LOG2_E","qualname":"::float::FloatConst::LOG2_E","value":"pub fn LOG2_E() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `log2(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109640,"byte_end":109642,"line_start":2311,"line_end":2311,"column_start":5,"column_end":7},"name":"PI","qualname":"::float::FloatConst::PI","value":"pub fn PI() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return Archimedes’ constant `π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":109683,"byte_end":109689,"line_start":2313,"line_end":2313,"column_start":5,"column_end":11},"name":"SQRT_2","qualname":"::float::FloatConst::SQRT_2","value":"pub fn SQRT_2() -> Self","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":"Return `sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":489},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"identities","qualname":"::identities","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":504},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2477},{"krate":0,"index":2480},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2495},{"krate":0,"index":2498},{"krate":0,"index":2501},{"krate":0,"index":2504},{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":505},{"krate":0,"index":510},{"krate":0,"index":514},{"krate":0,"index":2513},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":2549},{"krate":0,"index":2552},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":521}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":500},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112219,"byte_end":112223,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"Zero","qualname":"::identities::Zero","value":"Zero: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"decl_id":null,"docs":" Defines an additive identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines an additive identity element for `Self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112044,"byte_end":112096,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112097,"byte_end":112100,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112101,"byte_end":112111,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112112,"byte_end":112115,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112116,"byte_end":112130,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ a + 0 = a       ∀ a ∈ Self","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112131,"byte_end":112165,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ 0 + a = a       ∀ a ∈ Self","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112166,"byte_end":112200,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112201,"byte_end":112208,"line_start":11,"line_end":11,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112593,"byte_end":112597,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":500},"children":[],"decl_id":null,"docs":" Returns the additive identity element of `Self`, `0`.\n # Purity","sig":null,"attributes":[{"value":"/ Returns the additive identity element of `Self`, `0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112264,"byte_end":112321,"line_start":13,"line_end":13,"column_start":5,"column_end":62}},{"value":"/ # Purity","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112326,"byte_end":112338,"line_start":14,"line_end":14,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112343,"byte_end":112346,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112351,"byte_end":112425,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112430,"byte_end":112496,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112501,"byte_end":112519,"line_start":18,"line_end":18,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112686,"byte_end":112694,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"set_zero","qualname":"::identities::Zero::set_zero","value":"pub fn set_zero(&mut Self)","parent":{"krate":0,"index":500},"children":[],"decl_id":null,"docs":" Sets `self` to the additive identity element of `Self`, `0`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the additive identity element of `Self`, `0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112614,"byte_end":112678,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112820,"byte_end":112827,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::identities::Zero::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":500},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the additive identity.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112749,"byte_end":112812,"line_start":27,"line_end":27,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":510},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113914,"byte_end":113917,"line_start":90,"line_end":90,"column_start":11,"column_end":14},"name":"One","qualname":"::identities::One","value":"One: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines a multiplicative identity element for `Self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113734,"byte_end":113791,"line_start":82,"line_end":82,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113792,"byte_end":113795,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113796,"byte_end":113806,"line_start":84,"line_end":84,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113807,"byte_end":113810,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113811,"byte_end":113825,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/ a * 1 = a       ∀ a ∈ Self","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113826,"byte_end":113860,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/ 1 * a = a       ∀ a ∈ Self","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113861,"byte_end":113895,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113896,"byte_end":113903,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114301,"byte_end":114304,"line_start":99,"line_end":99,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::One::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":510},"children":[],"decl_id":null,"docs":" Returns the multiplicative identity element of `Self`, `1`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity element of `Self`, `1`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113958,"byte_end":114021,"line_start":91,"line_end":91,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114026,"byte_end":114029,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Purity","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114034,"byte_end":114046,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114051,"byte_end":114054,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114059,"byte_end":114133,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114138,"byte_end":114204,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114209,"byte_end":114227,"line_start":97,"line_end":97,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114399,"byte_end":114406,"line_start":102,"line_end":102,"column_start":8,"column_end":15},"name":"set_one","qualname":"::identities::One::set_one","value":"pub fn set_one(&mut Self)","parent":{"krate":0,"index":510},"children":[],"decl_id":null,"docs":" Sets `self` to the multiplicative identity element of `Self`, `1`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the multiplicative identity element of `Self`, `1`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114321,"byte_end":114391,"line_start":101,"line_end":101,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114751,"byte_end":114757,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"is_one","qualname":"::identities::One::is_one","value":"pub fn is_one(&Self) -> bool where Self: PartialEq","parent":{"krate":0,"index":510},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the multiplicative identity.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the multiplicative identity.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114459,"byte_end":114528,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114533,"byte_end":114536,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ For performance reasons, it's best to implement this manually.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114541,"byte_end":114607,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ After a semver bump, this method will be required, and the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114612,"byte_end":114674,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"/ `where Self: PartialEq` bound will be removed.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114679,"byte_end":114729,"line_start":110,"line_end":110,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":114734,"byte_end":114743,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":115780,"byte_end":115784,"line_start":171,"line_end":171,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::zero","value":"pub fn zero<T: Zero>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity, `0`.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity, `0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":115715,"byte_end":115754,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":115755,"byte_end":115772,"line_start":170,"line_end":170,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":521},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":115894,"byte_end":115897,"line_start":177,"line_end":177,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::one","value":"pub fn one<T: One>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity, `1`.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity, `1`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":115823,"byte_end":115868,"line_start":175,"line_end":175,"column_start":1,"column_end":46}},{"value":"inline(always)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":115869,"byte_end":115886,"line_start":176,"line_end":176,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":523},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"int","qualname":"::int","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":574},{"krate":0,"index":2555},{"krate":0,"index":2572},{"krate":0,"index":2589},{"krate":0,"index":2606},{"krate":0,"index":2623},{"krate":0,"index":2640},{"krate":0,"index":2657},{"krate":0,"index":2674},{"krate":0,"index":2691},{"krate":0,"index":2708},{"krate":0,"index":2725},{"krate":0,"index":2742}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":557},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118469,"byte_end":118476,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"PrimInt","qualname":"::int::PrimInt","value":"PrimInt: Sized + Copy + Num + NumCast + Bounded + PartialOrd + Ord + Eq + Not<Output =\nSelf> + BitAnd<Output = Self> + BitOr<Output = Self> + BitXor<Output = Self> +\nShl<usize, Output = Self> + Shr<usize, Output = Self> + CheckedAdd<Output =\nSelf> + CheckedSub<Output = Self> + CheckedMul<Output = Self> +\nCheckedDiv<Output = Self> + Saturating","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" Generic trait for primitive integers.","sig":null,"attributes":[{"value":"/ Generic trait for primitive integers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":116813,"byte_end":116854,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":116855,"byte_end":116858,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The `PrimInt` trait is an abstraction over the builtin primitive integer types (e.g., `u8`,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":116859,"byte_end":116954,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ `u32`, `isize`, `i128`, ...). It inherits the basic numeric traits and extends them with","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":116955,"byte_end":117047,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ bitwise operators and non-wrapping arithmetic.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117048,"byte_end":117098,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117099,"byte_end":117102,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The trait explicitly inherits `Copy`, `Eq`, `Ord`, and `Sized`. The intention is that all","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117103,"byte_end":117196,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ types implementing this trait behave like primitive types that are passed by value by default","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117197,"byte_end":117294,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ and behave like builtin integers. Furthermore, the types are expected to expose the integer","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117295,"byte_end":117390,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ value in binary representation and support bitwise operators. The standard bitwise operations","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117391,"byte_end":117488,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ (e.g., bitwise-and, bitwise-or, right-shift, left-shift) are inherited and the trait extends","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117489,"byte_end":117585,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ these with introspective queries (e.g., `PrimInt::count_ones()`, `PrimInt::leading_zeros()`),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117586,"byte_end":117683,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ bitwise combinators (e.g., `PrimInt::rotate_left()`), and endianness converters (e.g.,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117684,"byte_end":117774,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ `PrimInt::to_be()`).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117775,"byte_end":117799,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117800,"byte_end":117803,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All `PrimInt` types are expected to be fixed-width binary integers. The width can be queried","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117804,"byte_end":117900,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ via `T::zero().count_zeros()`. The trait currently lacks a way to query the width at","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117901,"byte_end":117989,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ compile-time.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":117990,"byte_end":118007,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118008,"byte_end":118011,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ While a default implementation for all builtin primitive integers is provided, the trait is in","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118012,"byte_end":118110,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ no way restricted to these. Other integer types that fulfil the requirements are free to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118111,"byte_end":118203,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ implement the trait was well.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118204,"byte_end":118237,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118238,"byte_end":118241,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This trait and many of the method names originate in the unstable `core::num::Int` trait from","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118242,"byte_end":118339,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ the rust standard library. The original trait was never stabilized and thus removed from the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118340,"byte_end":118436,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ standard library.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118437,"byte_end":118458,"line_start":33,"line_end":33,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119151,"byte_end":119161,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::int::PrimInt::count_ones","value":"pub fn count_ones(Self) -> u32","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Returns the number of ones in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of ones in the binary representation of `self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118896,"byte_end":118966,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118971,"byte_end":118974,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118979,"byte_end":118993,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118998,"byte_end":119001,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119006,"byte_end":119013,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119018,"byte_end":119046,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119051,"byte_end":119054,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119059,"byte_end":119084,"line_start":62,"line_end":62,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119089,"byte_end":119092,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_ones(), 3);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119097,"byte_end":119131,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119136,"byte_end":119143,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119438,"byte_end":119449,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::int::PrimInt::count_zeros","value":"pub fn count_zeros(Self) -> u32","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Returns the number of zeros in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of zeros in the binary representation of `self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119181,"byte_end":119252,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119257,"byte_end":119260,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119265,"byte_end":119279,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119284,"byte_end":119287,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119292,"byte_end":119299,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119304,"byte_end":119332,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119337,"byte_end":119340,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119345,"byte_end":119370,"line_start":75,"line_end":75,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119375,"byte_end":119378,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_zeros(), 5);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119383,"byte_end":119418,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119423,"byte_end":119430,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119745,"byte_end":119758,"line_start":93,"line_end":93,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::int::PrimInt::leading_zeros","value":"pub fn leading_zeros(Self) -> u32","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Returns the number of leading zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of leading zeros in the binary representation","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119469,"byte_end":119537,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ of `self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119542,"byte_end":119556,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119561,"byte_end":119564,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119569,"byte_end":119583,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119588,"byte_end":119591,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119596,"byte_end":119603,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119608,"byte_end":119636,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119641,"byte_end":119644,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119649,"byte_end":119674,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119679,"byte_end":119682,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.leading_zeros(), 10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119687,"byte_end":119725,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119730,"byte_end":119737,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120055,"byte_end":120069,"line_start":107,"line_end":107,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::int::PrimInt::trailing_zeros","value":"pub fn trailing_zeros(Self) -> u32","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Returns the number of trailing zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of trailing zeros in the binary representation","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119778,"byte_end":119847,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ of `self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119852,"byte_end":119866,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119871,"byte_end":119874,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119879,"byte_end":119893,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119898,"byte_end":119901,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119906,"byte_end":119913,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119918,"byte_end":119946,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119951,"byte_end":119954,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119959,"byte_end":119984,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119989,"byte_end":119992,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.trailing_zeros(), 3);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":119997,"byte_end":120035,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120040,"byte_end":120047,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120457,"byte_end":120468,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"rotate_left","qualname":"::int::PrimInt::rotate_left","value":"pub fn rotate_left(Self, u32) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount, `n`, wrapping\n the truncated bits to the end of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount, `n`, wrapping","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120089,"byte_end":120157,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ the truncated bits to the end of the resulting integer.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120162,"byte_end":120221,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120226,"byte_end":120229,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120234,"byte_end":120248,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120253,"byte_end":120256,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120261,"byte_end":120268,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120273,"byte_end":120301,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120306,"byte_end":120309,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120314,"byte_end":120348,"line_start":117,"line_end":117,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF012u64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120353,"byte_end":120387,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120392,"byte_end":120395,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_left(12), m);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120400,"byte_end":120437,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120442,"byte_end":120449,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120873,"byte_end":120885,"line_start":137,"line_end":137,"column_start":8,"column_end":20},"name":"rotate_right","qualname":"::int::PrimInt::rotate_right","value":"pub fn rotate_right(Self, u32) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount, `n`, wrapping\n the truncated bits to the beginning of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount, `n`, wrapping","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120497,"byte_end":120566,"line_start":124,"line_end":124,"column_start":5,"column_end":74}},{"value":"/ the truncated bits to the beginning of the resulting integer.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120571,"byte_end":120636,"line_start":125,"line_end":125,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120641,"byte_end":120644,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120649,"byte_end":120663,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120668,"byte_end":120671,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120676,"byte_end":120683,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120688,"byte_end":120716,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120721,"byte_end":120724,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120729,"byte_end":120763,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/ let m = 0xDEF0123456789ABCu64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120768,"byte_end":120802,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120807,"byte_end":120810,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_right(12), m);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120815,"byte_end":120853,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120858,"byte_end":120865,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121321,"byte_end":121331,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"signed_shl","qualname":"::int::PrimInt::signed_shl","value":"pub fn signed_shl(Self, u32) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount, `n`, filling","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120914,"byte_end":120981,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":120986,"byte_end":121026,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121031,"byte_end":121034,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shl`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121039,"byte_end":121086,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121091,"byte_end":121094,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121099,"byte_end":121113,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121118,"byte_end":121121,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121126,"byte_end":121133,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121138,"byte_end":121166,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121171,"byte_end":121174,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121179,"byte_end":121213,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000u64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121218,"byte_end":121252,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121257,"byte_end":121260,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shl(12), m);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121265,"byte_end":121301,"line_start":152,"line_end":152,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121306,"byte_end":121313,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121800,"byte_end":121810,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"signed_shr","qualname":"::int::PrimInt::signed_shr","value":"pub fn signed_shr(Self, u32) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount, `n`, copying\n the \"sign bit\" in the most significant bits even for unsigned types.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount, `n`, copying","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121360,"byte_end":121428,"line_start":156,"line_end":156,"column_start":5,"column_end":73}},{"value":"/ the \"sign bit\" in the most significant bits even for unsigned types.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121433,"byte_end":121505,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121510,"byte_end":121513,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shr`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121518,"byte_end":121565,"line_start":159,"line_end":159,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121570,"byte_end":121573,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121578,"byte_end":121592,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121597,"byte_end":121600,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121605,"byte_end":121612,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121617,"byte_end":121645,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121650,"byte_end":121653,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = 0xFEDCBA9876543210u64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121658,"byte_end":121692,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ let m = 0xFFFFEDCBA9876543u64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121697,"byte_end":121731,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121736,"byte_end":121739,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shr(12), m);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121744,"byte_end":121780,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121785,"byte_end":121792,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122250,"byte_end":122262,"line_start":188,"line_end":188,"column_start":8,"column_end":20},"name":"unsigned_shl","qualname":"::int::PrimInt::unsigned_shl","value":"pub fn unsigned_shl(Self, u32) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount, `n`, filling","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121839,"byte_end":121906,"line_start":173,"line_end":173,"column_start":5,"column_end":72}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121911,"byte_end":121951,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121956,"byte_end":121959,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shl`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":121964,"byte_end":122013,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122018,"byte_end":122021,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122026,"byte_end":122040,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122045,"byte_end":122048,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122053,"byte_end":122060,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122065,"byte_end":122093,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122098,"byte_end":122101,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFi64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122106,"byte_end":122140,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000i64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122145,"byte_end":122179,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122184,"byte_end":122187,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shl(12), m);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122192,"byte_end":122230,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122235,"byte_end":122242,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122695,"byte_end":122707,"line_start":205,"line_end":205,"column_start":8,"column_end":20},"name":"unsigned_shr","qualname":"::int::PrimInt::unsigned_shr","value":"pub fn unsigned_shr(Self, u32) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount, `n`, filling\n zeros in the most significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount, `n`, filling","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122291,"byte_end":122359,"line_start":190,"line_end":190,"column_start":5,"column_end":73}},{"value":"/ zeros in the most significant bits.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122364,"byte_end":122403,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122408,"byte_end":122411,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shr`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122416,"byte_end":122465,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122470,"byte_end":122473,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122478,"byte_end":122492,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122497,"byte_end":122500,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122505,"byte_end":122512,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122517,"byte_end":122545,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122550,"byte_end":122553,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let n = -8i8; // 0b11111000","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122558,"byte_end":122589,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ let m = 62i8; // 0b00111110","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122594,"byte_end":122625,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122630,"byte_end":122633,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shr(2), m);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122638,"byte_end":122675,"line_start":203,"line_end":203,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122680,"byte_end":122687,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123012,"byte_end":123022,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"swap_bytes","qualname":"::int::PrimInt::swap_bytes","value":"pub fn swap_bytes(Self) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Reverses the byte order of the integer.","sig":null,"attributes":[{"value":"/ Reverses the byte order of the integer.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122736,"byte_end":122779,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122784,"byte_end":122787,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122792,"byte_end":122806,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122811,"byte_end":122814,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122819,"byte_end":122826,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122831,"byte_end":122859,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122864,"byte_end":122867,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122872,"byte_end":122906,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ let m = 0xEFCDAB8967452301u64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122911,"byte_end":122945,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122950,"byte_end":122953,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.swap_bytes(), m);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122958,"byte_end":122992,"line_start":217,"line_end":217,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":122997,"byte_end":123004,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123518,"byte_end":123525,"line_start":238,"line_end":238,"column_start":8,"column_end":15},"name":"from_be","qualname":"::int::PrimInt::from_be","value":"pub fn from_be(Self) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Convert an integer from big endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from big endian to the target's endianness.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123043,"byte_end":123109,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123114,"byte_end":123117,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123122,"byte_end":123196,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123201,"byte_end":123204,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123209,"byte_end":123223,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123228,"byte_end":123231,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123236,"byte_end":123243,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123248,"byte_end":123276,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123281,"byte_end":123284,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123289,"byte_end":123323,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123328,"byte_end":123331,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123336,"byte_end":123372,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(u64::from_be(n), n)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123377,"byte_end":123415,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123420,"byte_end":123432,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_be(n), n.swap_bytes())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123437,"byte_end":123488,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123493,"byte_end":123498,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123503,"byte_end":123510,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124030,"byte_end":124037,"line_start":257,"line_end":257,"column_start":8,"column_end":15},"name":"from_le","qualname":"::int::PrimInt::from_le","value":"pub fn from_le(Self) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Convert an integer from little endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from little endian to the target's endianness.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123549,"byte_end":123618,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123623,"byte_end":123626,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123631,"byte_end":123705,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123710,"byte_end":123713,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123718,"byte_end":123732,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123737,"byte_end":123740,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123745,"byte_end":123752,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123757,"byte_end":123785,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123790,"byte_end":123793,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123798,"byte_end":123832,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123837,"byte_end":123840,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123845,"byte_end":123884,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(u64::from_le(n), n)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123889,"byte_end":123927,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123932,"byte_end":123944,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_le(n), n.swap_bytes())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":123949,"byte_end":124000,"line_start":254,"line_end":254,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124005,"byte_end":124010,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124015,"byte_end":124022,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124520,"byte_end":124525,"line_start":276,"line_end":276,"column_start":8,"column_end":13},"name":"to_be","qualname":"::int::PrimInt::to_be","value":"pub fn to_be(Self) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Convert `self` to big endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to big endian from the target's endianness.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124061,"byte_end":124123,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124128,"byte_end":124131,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124136,"byte_end":124210,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124215,"byte_end":124218,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124223,"byte_end":124237,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124242,"byte_end":124245,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124250,"byte_end":124257,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124262,"byte_end":124290,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124295,"byte_end":124298,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124303,"byte_end":124337,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124342,"byte_end":124345,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124350,"byte_end":124386,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(n.to_be(), n)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124391,"byte_end":124423,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124428,"byte_end":124440,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_be(), n.swap_bytes())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124445,"byte_end":124490,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124495,"byte_end":124500,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124505,"byte_end":124512,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125011,"byte_end":125016,"line_start":295,"line_end":295,"column_start":8,"column_end":13},"name":"to_le","qualname":"::int::PrimInt::to_le","value":"pub fn to_le(Self) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Convert `self` to little endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to little endian from the target's endianness.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124546,"byte_end":124611,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124616,"byte_end":124619,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124624,"byte_end":124698,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124703,"byte_end":124706,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124711,"byte_end":124725,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124730,"byte_end":124733,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124738,"byte_end":124745,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124750,"byte_end":124778,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124783,"byte_end":124786,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124791,"byte_end":124825,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124830,"byte_end":124833,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124838,"byte_end":124877,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(n.to_le(), n)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124882,"byte_end":124914,"line_start":290,"line_end":290,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124919,"byte_end":124931,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_le(), n.swap_bytes())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124936,"byte_end":124981,"line_start":292,"line_end":292,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124986,"byte_end":124991,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":124996,"byte_end":125003,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125254,"byte_end":125257,"line_start":306,"line_end":306,"column_start":8,"column_end":11},"name":"pow","qualname":"::int::PrimInt::pow","value":"pub fn pow(Self, u32) -> Self","parent":{"krate":0,"index":557},"children":[],"decl_id":null,"docs":" Raises self to the power of `exp`, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises self to the power of `exp`, using exponentiation by squaring.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125037,"byte_end":125109,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125114,"byte_end":125117,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125122,"byte_end":125136,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125141,"byte_end":125144,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125149,"byte_end":125156,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125161,"byte_end":125189,"line_start":302,"line_end":302,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125194,"byte_end":125197,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2i32.pow(4), 16);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125202,"byte_end":125234,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":125239,"byte_end":125246,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":575},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mod.rs","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":618},{"krate":0,"index":636},{"krate":0,"index":658},{"krate":0,"index":680}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":576},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"checked","qualname":"::ops::checked","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2765},{"krate":0,"index":2767},{"krate":0,"index":2769},{"krate":0,"index":2771},{"krate":0,"index":2773},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":2779},{"krate":0,"index":2781},{"krate":0,"index":602},{"krate":0,"index":2783},{"krate":0,"index":2785},{"krate":0,"index":2787},{"krate":0,"index":2789},{"krate":0,"index":2791},{"krate":0,"index":2793},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":604},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":606},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":608},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2861},{"krate":0,"index":2863},{"krate":0,"index":2865},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2871},{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2877},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":2879},{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2899},{"krate":0,"index":2901},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2907},{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2917},{"krate":0,"index":2919},{"krate":0,"index":2921},{"krate":0,"index":2923},{"krate":0,"index":2925},{"krate":0,"index":616},{"krate":0,"index":2927},{"krate":0,"index":2929},{"krate":0,"index":2931},{"krate":0,"index":2933},{"krate":0,"index":2935},{"krate":0,"index":2937},{"krate":0,"index":2939},{"krate":0,"index":2941},{"krate":0,"index":2943},{"krate":0,"index":2945},{"krate":0,"index":2947},{"krate":0,"index":2949}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":599},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":128037,"byte_end":128047,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"CheckedAdd","qualname":"::ops::checked::CheckedAdd","value":"CheckedAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":600}],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that returns `None` instead of wrapping around on","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":127941,"byte_end":128012,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ overflow.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":128013,"byte_end":128026,"line_start":4,"line_end":4,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":128189,"byte_end":128200,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::ops::checked::CheckedAdd::checked_add","value":"pub fn checked_add(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":" Adds two numbers, checking for overflow. If overflow happens, `None` is\n returned.\n","sig":null,"attributes":[{"value":"/ Adds two numbers, checking for overflow. If overflow happens, `None` is","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":128088,"byte_end":128163,"line_start":6,"line_end":6,"column_start":5,"column_end":80}},{"value":"/ returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":128168,"byte_end":128181,"line_start":7,"line_end":7,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":602},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":129178,"byte_end":129188,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"CheckedSub","qualname":"::ops::checked::CheckedSub","value":"CheckedSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":603}],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that returns `None` instead of wrapping around on underflow.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":129082,"byte_end":129167,"line_start":38,"line_end":38,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":129337,"byte_end":129348,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::ops::checked::CheckedSub::checked_sub","value":"pub fn checked_sub(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" Subtracts two numbers, checking for underflow. If underflow happens,\n `None` is returned.\n","sig":null,"attributes":[{"value":"/ Subtracts two numbers, checking for underflow. If underflow happens,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":129229,"byte_end":129301,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":129306,"byte_end":129329,"line_start":41,"line_end":41,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":604},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":130081,"byte_end":130091,"line_start":63,"line_end":63,"column_start":11,"column_end":21},"name":"CheckedMul","qualname":"::ops::checked::CheckedMul","value":"CheckedMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":605}],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that returns `None` instead of wrapping around on underflow or","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":129966,"byte_end":130056,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ overflow.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":130057,"byte_end":130070,"line_start":62,"line_end":62,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":130265,"byte_end":130276,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::ops::checked::CheckedMul::checked_mul","value":"pub fn checked_mul(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" Multiplies two numbers, checking for underflow or overflow. If underflow\n or overflow happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Multiplies two numbers, checking for underflow or overflow. If underflow","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":130132,"byte_end":130208,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ or overflow happens, `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":130213,"byte_end":130257,"line_start":65,"line_end":65,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":606},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":131049,"byte_end":131059,"line_start":87,"line_end":87,"column_start":11,"column_end":21},"name":"CheckedDiv","qualname":"::ops::checked::CheckedDiv","value":"CheckedDiv: Sized + Div<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":607}],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs division that returns `None` instead of panicking on division by zero and instead of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":130894,"byte_end":130991,"line_start":85,"line_end":85,"column_start":1,"column_end":98}},{"value":"/ wrapping around on underflow and overflow.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":130992,"byte_end":131038,"line_start":86,"line_end":86,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":131239,"byte_end":131250,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::ops::checked::CheckedDiv::checked_div","value":"pub fn checked_div(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":606},"children":[],"decl_id":null,"docs":" Divides two numbers, checking for underflow, overflow and division by\n zero. If any of that happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Divides two numbers, checking for underflow, overflow and division by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":131100,"byte_end":131173,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ zero. If any of that happens, `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":131178,"byte_end":131231,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":608},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132036,"byte_end":132046,"line_start":111,"line_end":111,"column_start":11,"column_end":21},"name":"CheckedRem","qualname":"::ops::checked::CheckedRem","value":"CheckedRem: Sized + Rem<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":609}],"decl_id":null,"docs":" Performs an integral remainder that returns `None` instead of panicking on division by zero and\n instead of wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs an integral remainder that returns `None` instead of panicking on division by zero and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":131868,"byte_end":131967,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"/ instead of wrapping around on underflow and overflow.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":131968,"byte_end":132025,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132840,"byte_end":132851,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"checked_rem","qualname":"::ops::checked::CheckedRem::checked_rem","value":"pub fn checked_rem(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":" Finds the remainder of dividing two numbers, checking for underflow, overflow and division\n by zero. If any of that happens, `None` is returned.","sig":null,"attributes":[{"value":"/ Finds the remainder of dividing two numbers, checking for underflow, overflow and division","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132087,"byte_end":132181,"line_start":112,"line_end":112,"column_start":5,"column_end":99}},{"value":"/ by zero. If any of that happens, `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132186,"byte_end":132242,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132247,"byte_end":132250,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132255,"byte_end":132269,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132274,"byte_end":132277,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132282,"byte_end":132289,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedRem;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132294,"byte_end":132325,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132330,"byte_end":132352,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132357,"byte_end":132360,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &7), Some(3));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132365,"byte_end":132423,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &-7), Some(3));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132428,"byte_end":132487,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &7), Some(-3));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132492,"byte_end":132552,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &-7), Some(-3));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132557,"byte_end":132618,"line_start":124,"line_end":124,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132623,"byte_end":132626,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &0), None);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132631,"byte_end":132686,"line_start":126,"line_end":126,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132691,"byte_end":132694,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &1), Some(0));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132699,"byte_end":132758,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &-1), None);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132763,"byte_end":132820,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132825,"byte_end":132832,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":611},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":133815,"byte_end":133825,"line_start":162,"line_end":162,"column_start":11,"column_end":21},"name":"CheckedNeg","qualname":"::ops::checked::CheckedNeg","value":"CheckedNeg: Sized","parent":null,"children":[{"krate":0,"index":612}],"decl_id":null,"docs":" Performs negation that returns `None` if the result can't be represented.\n","sig":null,"attributes":[{"value":"/ Performs negation that returns `None` if the result can't be represented.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":133727,"byte_end":133804,"line_start":161,"line_end":161,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134475,"byte_end":134486,"line_start":179,"line_end":179,"column_start":8,"column_end":19},"name":"checked_neg","qualname":"::ops::checked::CheckedNeg::checked_neg","value":"pub fn checked_neg(&Self) -> Option<Self>","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Negates a number, returning `None` for results that can't be represented, like signed `MIN`\n values that can't be positive, or non-zero unsigned values that can't be negative.","sig":null,"attributes":[{"value":"/ Negates a number, returning `None` for results that can't be represented, like signed `MIN`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":133839,"byte_end":133934,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ values that can't be positive, or non-zero unsigned values that can't be negative.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":133939,"byte_end":134025,"line_start":164,"line_end":164,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134030,"byte_end":134033,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134038,"byte_end":134052,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134057,"byte_end":134060,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134065,"byte_end":134072,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedNeg;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134077,"byte_end":134108,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134113,"byte_end":134135,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134140,"byte_end":134143,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_i32), Some(-1));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134148,"byte_end":134206,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&-1_i32), Some(1));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134211,"byte_end":134269,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&MIN), None);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134274,"byte_end":134326,"line_start":174,"line_end":174,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134331,"byte_end":134334,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&0_u32), Some(0));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134339,"byte_end":134396,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_u32), None);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134401,"byte_end":134455,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":134460,"byte_end":134467,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":613},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135264,"byte_end":135274,"line_start":200,"line_end":200,"column_start":11,"column_end":21},"name":"CheckedShl","qualname":"::ops::checked::CheckedShl","value":"CheckedShl: Sized + Shl<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":614}],"decl_id":null,"docs":" Performs a left shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that returns `None` on shifts larger than","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135166,"byte_end":135233,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ the type width.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135234,"byte_end":135253,"line_start":199,"line_end":199,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135833,"byte_end":135844,"line_start":214,"line_end":214,"column_start":8,"column_end":19},"name":"checked_shl","qualname":"::ops::checked::CheckedShl::checked_shl","value":"pub fn checked_shl(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Checked shift left. Computes `self << rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift left. Computes `self << rhs`, returning `None`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135314,"byte_end":135378,"line_start":201,"line_end":201,"column_start":5,"column_end":69}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135383,"byte_end":135452,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135457,"byte_end":135460,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135465,"byte_end":135472,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShl;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135477,"byte_end":135508,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135513,"byte_end":135516,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135521,"byte_end":135545,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135550,"byte_end":135553,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 0),  Some(0x0001));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135558,"byte_end":135620,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 1),  Some(0x0002));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135625,"byte_end":135687,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 15), Some(0x8000));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135692,"byte_end":135754,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 16), None);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135759,"byte_end":135813,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135818,"byte_end":135825,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":616},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":136906,"byte_end":136916,"line_start":246,"line_end":246,"column_start":11,"column_end":21},"name":"CheckedShr","qualname":"::ops::checked::CheckedShr","value":"CheckedShr: Sized + Shr<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":617}],"decl_id":null,"docs":" Performs a right shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that returns `None` on shifts larger than","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":136807,"byte_end":136875,"line_start":244,"line_end":244,"column_start":1,"column_end":69}},{"value":"/ the type width.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":136876,"byte_end":136895,"line_start":245,"line_end":245,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137476,"byte_end":137487,"line_start":260,"line_end":260,"column_start":8,"column_end":19},"name":"checked_shr","qualname":"::ops::checked::CheckedShr::checked_shr","value":"pub fn checked_shr(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" Checked shift right. Computes `self >> rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift right. Computes `self >> rhs`, returning `None`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":136956,"byte_end":137021,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137026,"byte_end":137095,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137100,"byte_end":137103,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137108,"byte_end":137115,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShr;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137120,"byte_end":137151,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137156,"byte_end":137159,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137164,"byte_end":137188,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137193,"byte_end":137196,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 0),  Some(0x8000));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137201,"byte_end":137263,"line_start":255,"line_end":255,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 1),  Some(0x4000));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137268,"byte_end":137330,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 15), Some(0x0001));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137335,"byte_end":137397,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 16), None);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137402,"byte_end":137456,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":137461,"byte_end":137468,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":618},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inv","qualname":"::ops::inv","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":632}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":619},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138276,"byte_end":138279,"line_start":2,"line_end":2,"column_start":11,"column_end":14},"name":"Inv","qualname":"::ops::inv::Inv","value":"Inv","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"decl_id":null,"docs":" Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.\n","sig":null,"attributes":[{"value":"/ Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138177,"byte_end":138265,"line_start":1,"line_end":1,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":620},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138339,"byte_end":138345,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::inv::Inv::Output","value":"type Output;","parent":{"krate":0,"index":619},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138286,"byte_end":138329,"line_start":3,"line_end":3,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138624,"byte_end":138627,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"inv","qualname":"::ops::inv::Inv::inv","value":"pub fn inv(Self) -> Self::Output","parent":{"krate":0,"index":619},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse of `self`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse of `self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138352,"byte_end":138401,"line_start":6,"line_end":6,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138406,"byte_end":138409,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138414,"byte_end":138428,"line_start":8,"line_end":8,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138433,"byte_end":138436,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138441,"byte_end":138448,"line_start":10,"line_end":10,"column_start":5,"column_end":12}},{"value":"/ use std::f64::INFINITY;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138453,"byte_end":138480,"line_start":11,"line_end":11,"column_start":5,"column_end":32}},{"value":"/ use num_traits::Inv;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138485,"byte_end":138509,"line_start":12,"line_end":12,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138514,"byte_end":138517,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(7.0.inv() * 7.0, 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138522,"byte_end":138559,"line_start":14,"line_end":14,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((-0.0).inv(), -INFINITY);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138564,"byte_end":138604,"line_start":15,"line_end":15,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/inv.rs","byte_start":138609,"byte_end":138616,"line_start":16,"line_end":16,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":636},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mul_add","qualname":"::ops::mul_add","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":642},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":2951},{"krate":0,"index":2954},{"krate":0,"index":2957},{"krate":0,"index":2960},{"krate":0,"index":2963},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2972},{"krate":0,"index":2975},{"krate":0,"index":2978},{"krate":0,"index":2981},{"krate":0,"index":2984},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":2987},{"krate":0,"index":2989},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2995},{"krate":0,"index":2997},{"krate":0,"index":2999},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3007},{"krate":0,"index":3009}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":637},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139752,"byte_end":139758,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"MulAdd","qualname":"::ops::mul_add::MulAdd","value":"MulAdd<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641}],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139109,"byte_end":139181,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139182,"byte_end":139254,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139255,"byte_end":139258,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139259,"byte_end":139333,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139334,"byte_end":139400,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139401,"byte_end":139404,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that `A` and `B` are `Self` by default, but this is not mandatory.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139405,"byte_end":139480,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139481,"byte_end":139484,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139485,"byte_end":139498,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139499,"byte_end":139502,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139503,"byte_end":139510,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139511,"byte_end":139528,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139529,"byte_end":139532,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let m = 10.0_f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139533,"byte_end":139554,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ let x = 4.0_f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139555,"byte_end":139575,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ let b = 60.0_f32;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139576,"byte_end":139597,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139598,"byte_end":139601,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // 100.0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139602,"byte_end":139614,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139615,"byte_end":139676,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139677,"byte_end":139680,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(abs_difference <= 100.0 * f32::EPSILON);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139681,"byte_end":139733,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139734,"byte_end":139741,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":640},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139856,"byte_end":139862,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::mul_add::MulAdd::Output","value":"type Output;","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" The resulting type after applying the fused multiply-add.\n","sig":null,"attributes":[{"value":"/ The resulting type after applying the fused multiply-add.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139785,"byte_end":139846,"line_start":24,"line_end":24,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139923,"byte_end":139930,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::ops::mul_add::MulAdd::mul_add","value":"pub fn mul_add(Self, A, B) -> Self::Output","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139869,"byte_end":139915,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":642},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":140028,"byte_end":140040,"line_start":32,"line_end":32,"column_start":11,"column_end":23},"name":"MulAddAssign","qualname":"::ops::mul_add::MulAddAssign","value":"MulAddAssign<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":645}],"decl_id":null,"docs":" The fused multiply-add assignment operation.\n","sig":null,"attributes":[{"value":"/ The fused multiply-add assignment operation.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":139969,"byte_end":140017,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":140121,"byte_end":140135,"line_start":34,"line_end":34,"column_start":8,"column_end":22},"name":"mul_add_assign","qualname":"::ops::mul_add::MulAddAssign::mul_add_assign","value":"pub fn mul_add_assign(&mut Self, A, B)","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mul_add.rs","byte_start":140067,"byte_end":140113,"line_start":33,"line_end":33,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":658},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"saturating","qualname":"::ops::saturating","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3035},{"krate":0,"index":3038},{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":3047},{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":676},{"krate":0,"index":3071},{"krate":0,"index":3073},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3085},{"krate":0,"index":3087},{"krate":0,"index":3089},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":678},{"krate":0,"index":3095},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3103},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3111},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3117}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":669},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":143187,"byte_end":143197,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::ops::saturating::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"decl_id":null,"docs":" Saturating math operations. Deprecated, use `SaturatingAdd`, `SaturatingSub` and\n `SaturatingMul` instead.\n","sig":null,"attributes":[{"value":"/ Saturating math operations. Deprecated, use `SaturatingAdd`, `SaturatingSub` and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":143063,"byte_end":143147,"line_start":3,"line_end":3,"column_start":1,"column_end":85}},{"value":"/ `SaturatingMul` instead.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":143148,"byte_end":143176,"line_start":4,"line_end":4,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":143323,"byte_end":143337,"line_start":8,"line_end":8,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::Saturating::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":669},"children":[],"decl_id":null,"docs":" Saturating addition operator.\n Returns a+b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating addition operator.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":143204,"byte_end":143237,"line_start":6,"line_end":6,"column_start":5,"column_end":38}},{"value":"/ Returns a+b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":143242,"byte_end":143315,"line_start":7,"line_end":7,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":143489,"byte_end":143503,"line_start":12,"line_end":12,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::Saturating::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":669},"children":[],"decl_id":null,"docs":" Saturating subtraction operator.\n Returns a-b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction operator.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":143367,"byte_end":143403,"line_start":10,"line_end":10,"column_start":5,"column_end":41}},{"value":"/ Returns a-b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":143408,"byte_end":143481,"line_start":11,"line_end":11,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":674},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":144464,"byte_end":144477,"line_start":47,"line_end":47,"column_start":11,"column_end":24},"name":"SaturatingAdd","qualname":"::ops::saturating::SaturatingAdd","value":"SaturatingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":675}],"decl_id":null,"docs":" Performs addition that saturates at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Performs addition that saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":144371,"byte_end":144453,"line_start":46,"line_end":46,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":144644,"byte_end":144658,"line_start":50,"line_end":50,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::SaturatingAdd::saturating_add","value":"pub fn saturating_add(&Self, &Self) -> Self","parent":{"krate":0,"index":674},"children":[],"decl_id":null,"docs":" Saturating addition. Computes `self + other`, saturating at the relevant high or low boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Saturating addition. Computes `self + other`, saturating at the relevant high or low boundary of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":144518,"byte_end":144618,"line_start":48,"line_end":48,"column_start":5,"column_end":105}},{"value":"/ the type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":144623,"byte_end":144636,"line_start":49,"line_end":49,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":676},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":145472,"byte_end":145485,"line_start":70,"line_end":70,"column_start":11,"column_end":24},"name":"SaturatingSub","qualname":"::ops::saturating::SaturatingSub","value":"SaturatingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":677}],"decl_id":null,"docs":" Performs subtraction that saturates at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":145376,"byte_end":145461,"line_start":69,"line_end":69,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":145655,"byte_end":145669,"line_start":73,"line_end":73,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::SaturatingSub::saturating_sub","value":"pub fn saturating_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":676},"children":[],"decl_id":null,"docs":" Saturating subtraction. Computes `self - other`, saturating at the relevant high or low boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction. Computes `self - other`, saturating at the relevant high or low boundary of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":145526,"byte_end":145629,"line_start":71,"line_end":71,"column_start":5,"column_end":108}},{"value":"/ the type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":145634,"byte_end":145647,"line_start":72,"line_end":72,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":678},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":146486,"byte_end":146499,"line_start":93,"line_end":93,"column_start":11,"column_end":24},"name":"SaturatingMul","qualname":"::ops::saturating::SaturatingMul","value":"SaturatingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":679}],"decl_id":null,"docs":" Performs multiplication that saturates at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":146387,"byte_end":146475,"line_start":92,"line_end":92,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":146672,"byte_end":146686,"line_start":96,"line_end":96,"column_start":8,"column_end":22},"name":"saturating_mul","qualname":"::ops::saturating::SaturatingMul::saturating_mul","value":"pub fn saturating_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Saturating multiplication. Computes `self * other`, saturating at the relevant high or low boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Saturating multiplication. Computes `self * other`, saturating at the relevant high or low boundary of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":146540,"byte_end":146646,"line_start":94,"line_end":94,"column_start":5,"column_end":111}},{"value":"/ the type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":146651,"byte_end":146664,"line_start":95,"line_end":95,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":680},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapping","qualname":"::ops::wrapping","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3135},{"krate":0,"index":3137},{"krate":0,"index":3139},{"krate":0,"index":3141},{"krate":0,"index":706},{"krate":0,"index":3143},{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3149},{"krate":0,"index":3151},{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3165},{"krate":0,"index":708},{"krate":0,"index":3167},{"krate":0,"index":3169},{"krate":0,"index":3171},{"krate":0,"index":3173},{"krate":0,"index":3175},{"krate":0,"index":3177},{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3183},{"krate":0,"index":3185},{"krate":0,"index":3187},{"krate":0,"index":3189},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3195},{"krate":0,"index":3197},{"krate":0,"index":3199},{"krate":0,"index":3201},{"krate":0,"index":3203},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3219},{"krate":0,"index":3221},{"krate":0,"index":3223},{"krate":0,"index":3225},{"krate":0,"index":3227},{"krate":0,"index":3229},{"krate":0,"index":3231},{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3237},{"krate":0,"index":716},{"krate":0,"index":3239},{"krate":0,"index":3241},{"krate":0,"index":3243},{"krate":0,"index":3245},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3253},{"krate":0,"index":3255},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3261},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":704},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":148894,"byte_end":148905,"line_start":24,"line_end":24,"column_start":11,"column_end":22},"name":"WrappingAdd","qualname":"::ops::wrapping::WrappingAdd","value":"WrappingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":705}],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that wraps around on overflow.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":148831,"byte_end":148883,"line_start":23,"line_end":23,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":149064,"byte_end":149076,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::ops::wrapping::WrappingAdd::wrapping_add","value":"pub fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":148946,"byte_end":149038,"line_start":25,"line_end":25,"column_start":5,"column_end":97}},{"value":"/ the type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":149043,"byte_end":149056,"line_start":26,"line_end":26,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":706},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":149788,"byte_end":149799,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"WrappingSub","qualname":"::ops::wrapping::WrappingSub","value":"WrappingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":707}],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that wraps around on overflow.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":149722,"byte_end":149777,"line_start":46,"line_end":46,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":149961,"byte_end":149973,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::ops::wrapping::WrappingSub::wrapping_sub","value":"pub fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":149840,"byte_end":149932,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ of the type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":149937,"byte_end":149953,"line_start":49,"line_end":49,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":708},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":150688,"byte_end":150699,"line_start":70,"line_end":70,"column_start":11,"column_end":22},"name":"WrappingMul","qualname":"::ops::wrapping::WrappingMul","value":"WrappingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":709}],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that wraps around on overflow.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":150619,"byte_end":150677,"line_start":69,"line_end":69,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":150864,"byte_end":150876,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::ops::wrapping::WrappingMul::wrapping_mul","value":"pub fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":" Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":150740,"byte_end":150835,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ of the type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":150840,"byte_end":150856,"line_start":72,"line_end":72,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":711},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":151828,"byte_end":151839,"line_start":104,"line_end":104,"column_start":11,"column_end":22},"name":"WrappingNeg","qualname":"::ops::wrapping::WrappingNeg","value":"WrappingNeg: Sized","parent":null,"children":[{"krate":0,"index":712}],"decl_id":null,"docs":" Performs a negation that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a negation that does not panic.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":151773,"byte_end":151817,"line_start":103,"line_end":103,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152625,"byte_end":152637,"line_start":122,"line_end":122,"column_start":8,"column_end":20},"name":"wrapping_neg","qualname":"::ops::wrapping::WrappingNeg::wrapping_neg","value":"pub fn wrapping_neg(&Self) -> Self","parent":{"krate":0,"index":711},"children":[],"decl_id":null,"docs":" Wrapping (modular) negation. Computes `-self`,\n wrapping around at the boundary of the type.","sig":null,"attributes":[{"value":"/ Wrapping (modular) negation. Computes `-self`,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":151853,"byte_end":151903,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ wrapping around at the boundary of the type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":151908,"byte_end":151956,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":151961,"byte_end":151964,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Since unsigned types do not have negative equivalents","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":151969,"byte_end":152026,"line_start":108,"line_end":108,"column_start":5,"column_end":62}},{"value":"/ all applications of this function will wrap (except for `-0`).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152031,"byte_end":152097,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ For values smaller than the corresponding signed type's maximum","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152102,"byte_end":152169,"line_start":110,"line_end":110,"column_start":5,"column_end":72}},{"value":"/ the result is the same as casting the corresponding signed value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152174,"byte_end":152243,"line_start":111,"line_end":111,"column_start":5,"column_end":74}},{"value":"/ Any larger values are equivalent to `MAX + 1 - (val - MAX - 1)` where","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152248,"byte_end":152321,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ `MAX` is the corresponding signed type's maximum.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152326,"byte_end":152379,"line_start":113,"line_end":113,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152384,"byte_end":152387,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152392,"byte_end":152399,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingNeg;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152404,"byte_end":152436,"line_start":116,"line_end":116,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152441,"byte_end":152444,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(100i8.wrapping_neg(), -100);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152449,"byte_end":152492,"line_start":118,"line_end":118,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-100i8).wrapping_neg(), 100);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152497,"byte_end":152542,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/ assert_eq!((-128i8).wrapping_neg(), -128); // wrapped!","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152547,"byte_end":152605,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":152610,"byte_end":152617,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":714},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153667,"byte_end":153678,"line_start":152,"line_end":152,"column_start":11,"column_end":22},"name":"WrappingShl","qualname":"::ops::wrapping::WrappingShl","value":"WrappingShl: Sized + Shl<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":715}],"decl_id":null,"docs":" Performs a left shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that does not panic.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153610,"byte_end":153656,"line_start":151,"line_end":151,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":154285,"byte_end":154297,"line_start":167,"line_end":167,"column_start":8,"column_end":20},"name":"wrapping_shl","qualname":"::ops::wrapping::WrappingShl::wrapping_shl","value":"pub fn wrapping_shl(&Self, u32) -> Self","parent":{"krate":0,"index":714},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-left; yields `self << mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-left; yields `self << mask(rhs)`,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153720,"byte_end":153782,"line_start":153,"line_end":153,"column_start":5,"column_end":67}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153787,"byte_end":153851,"line_start":154,"line_end":154,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153856,"byte_end":153911,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153916,"byte_end":153919,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153924,"byte_end":153931,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShl;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153936,"byte_end":153968,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153973,"byte_end":153976,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153981,"byte_end":154005,"line_start":160,"line_end":160,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":154010,"byte_end":154013,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 0),  0x0001);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":154018,"byte_end":154076,"line_start":162,"line_end":162,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 1),  0x0002);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":154081,"byte_end":154139,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 15), 0x8000);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":154144,"byte_end":154202,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 16), 0x0001);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":154207,"byte_end":154265,"line_start":165,"line_end":165,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":154270,"byte_end":154277,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":716},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155073,"byte_end":155084,"line_start":187,"line_end":187,"column_start":11,"column_end":22},"name":"WrappingShr","qualname":"::ops::wrapping::WrappingShr","value":"WrappingShr: Sized + Shr<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":717}],"decl_id":null,"docs":" Performs a right shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that does not panic.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155015,"byte_end":155062,"line_start":186,"line_end":186,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155692,"byte_end":155704,"line_start":202,"line_end":202,"column_start":8,"column_end":20},"name":"wrapping_shr","qualname":"::ops::wrapping::WrappingShr::wrapping_shr","value":"pub fn wrapping_shr(&Self, u32) -> Self","parent":{"krate":0,"index":716},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-right; yields `self >> mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-right; yields `self >> mask(rhs)`,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155126,"byte_end":155189,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155194,"byte_end":155258,"line_start":189,"line_end":189,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155263,"byte_end":155318,"line_start":190,"line_end":190,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155323,"byte_end":155326,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155331,"byte_end":155338,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShr;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155343,"byte_end":155375,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155380,"byte_end":155383,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155388,"byte_end":155412,"line_start":195,"line_end":195,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155417,"byte_end":155420,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 0),  0x8000);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155425,"byte_end":155483,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 1),  0x4000);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155488,"byte_end":155546,"line_start":198,"line_end":198,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 15), 0x0001);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155551,"byte_end":155609,"line_start":199,"line_end":199,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 16), 0x8000);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155614,"byte_end":155672,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155677,"byte_end":155684,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":736},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pow","qualname":"::pow","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":754},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3270},{"krate":0,"index":3274},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3286},{"krate":0,"index":3290},{"krate":0,"index":3295},{"krate":0,"index":3298},{"krate":0,"index":3302},{"krate":0,"index":3306},{"krate":0,"index":3311},{"krate":0,"index":3314},{"krate":0,"index":3318},{"krate":0,"index":3322},{"krate":0,"index":3327},{"krate":0,"index":3330},{"krate":0,"index":3334},{"krate":0,"index":3338},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3350},{"krate":0,"index":3354},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3366},{"krate":0,"index":3370},{"krate":0,"index":3375},{"krate":0,"index":3378},{"krate":0,"index":3382},{"krate":0,"index":3386},{"krate":0,"index":3391},{"krate":0,"index":3394},{"krate":0,"index":3398},{"krate":0,"index":3402},{"krate":0,"index":3407},{"krate":0,"index":3410},{"krate":0,"index":3414},{"krate":0,"index":3418},{"krate":0,"index":3423},{"krate":0,"index":3426},{"krate":0,"index":3430},{"krate":0,"index":3434},{"krate":0,"index":3439},{"krate":0,"index":3442},{"krate":0,"index":3446},{"krate":0,"index":3450},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":3462},{"krate":0,"index":3466},{"krate":0,"index":3471},{"krate":0,"index":3474},{"krate":0,"index":3478},{"krate":0,"index":3482},{"krate":0,"index":3487},{"krate":0,"index":3490},{"krate":0,"index":3494},{"krate":0,"index":3498},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":3510},{"krate":0,"index":3514},{"krate":0,"index":3519},{"krate":0,"index":3522},{"krate":0,"index":3526},{"krate":0,"index":3530},{"krate":0,"index":3535},{"krate":0,"index":3538},{"krate":0,"index":3542},{"krate":0,"index":3546},{"krate":0,"index":3551},{"krate":0,"index":3554},{"krate":0,"index":3558},{"krate":0,"index":3562},{"krate":0,"index":3567},{"krate":0,"index":3570},{"krate":0,"index":3574},{"krate":0,"index":3578},{"krate":0,"index":3583},{"krate":0,"index":3586},{"krate":0,"index":3590},{"krate":0,"index":3594},{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":3606},{"krate":0,"index":3610},{"krate":0,"index":3615},{"krate":0,"index":3618},{"krate":0,"index":3622},{"krate":0,"index":3626},{"krate":0,"index":3631},{"krate":0,"index":3634},{"krate":0,"index":3638},{"krate":0,"index":3642},{"krate":0,"index":3647},{"krate":0,"index":3650},{"krate":0,"index":3654},{"krate":0,"index":3658},{"krate":0,"index":3663},{"krate":0,"index":3666},{"krate":0,"index":3670},{"krate":0,"index":3674},{"krate":0,"index":3679},{"krate":0,"index":3682},{"krate":0,"index":3686},{"krate":0,"index":3690},{"krate":0,"index":3695},{"krate":0,"index":3698},{"krate":0,"index":3702},{"krate":0,"index":3706},{"krate":0,"index":3711},{"krate":0,"index":3714},{"krate":0,"index":3718},{"krate":0,"index":3722},{"krate":0,"index":3727},{"krate":0,"index":3730},{"krate":0,"index":3734},{"krate":0,"index":3738},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3750},{"krate":0,"index":3754},{"krate":0,"index":3759},{"krate":0,"index":3762},{"krate":0,"index":3766},{"krate":0,"index":3770},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3782},{"krate":0,"index":3786},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3798},{"krate":0,"index":3802},{"krate":0,"index":3807},{"krate":0,"index":3810},{"krate":0,"index":3814},{"krate":0,"index":3818},{"krate":0,"index":3823},{"krate":0,"index":3826},{"krate":0,"index":3830},{"krate":0,"index":3834},{"krate":0,"index":3839},{"krate":0,"index":3842},{"krate":0,"index":3846},{"krate":0,"index":3850},{"krate":0,"index":3855},{"krate":0,"index":3858},{"krate":0,"index":3862},{"krate":0,"index":3866},{"krate":0,"index":3871},{"krate":0,"index":3874},{"krate":0,"index":3878},{"krate":0,"index":3882},{"krate":0,"index":3887},{"krate":0,"index":3890},{"krate":0,"index":3894},{"krate":0,"index":3898},{"krate":0,"index":3903},{"krate":0,"index":3906},{"krate":0,"index":3910},{"krate":0,"index":3914},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3926},{"krate":0,"index":3930},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3942},{"krate":0,"index":3946},{"krate":0,"index":3951},{"krate":0,"index":3954},{"krate":0,"index":3958},{"krate":0,"index":3962},{"krate":0,"index":3967},{"krate":0,"index":3970},{"krate":0,"index":3974},{"krate":0,"index":3978},{"krate":0,"index":3983},{"krate":0,"index":3986},{"krate":0,"index":3990},{"krate":0,"index":3994},{"krate":0,"index":3999},{"krate":0,"index":4002},{"krate":0,"index":4006},{"krate":0,"index":4010},{"krate":0,"index":4015},{"krate":0,"index":4018},{"krate":0,"index":4022},{"krate":0,"index":4026},{"krate":0,"index":4031},{"krate":0,"index":4034},{"krate":0,"index":4038},{"krate":0,"index":4042},{"krate":0,"index":4047},{"krate":0,"index":4050},{"krate":0,"index":4054},{"krate":0,"index":4058},{"krate":0,"index":4063},{"krate":0,"index":4066},{"krate":0,"index":4070},{"krate":0,"index":4074},{"krate":0,"index":4079},{"krate":0,"index":4082},{"krate":0,"index":4086},{"krate":0,"index":4090},{"krate":0,"index":4095},{"krate":0,"index":4098},{"krate":0,"index":4102},{"krate":0,"index":4106},{"krate":0,"index":4111},{"krate":0,"index":4114},{"krate":0,"index":4118},{"krate":0,"index":4122},{"krate":0,"index":4127},{"krate":0,"index":4130},{"krate":0,"index":4134},{"krate":0,"index":4138},{"krate":0,"index":4143},{"krate":0,"index":4146},{"krate":0,"index":4150},{"krate":0,"index":4154},{"krate":0,"index":4159},{"krate":0,"index":4162},{"krate":0,"index":4166},{"krate":0,"index":4170},{"krate":0,"index":4175},{"krate":0,"index":4178},{"krate":0,"index":4182},{"krate":0,"index":4186},{"krate":0,"index":4191},{"krate":0,"index":4194},{"krate":0,"index":4198},{"krate":0,"index":4202},{"krate":0,"index":4207},{"krate":0,"index":4210},{"krate":0,"index":4214},{"krate":0,"index":4218},{"krate":0,"index":4223},{"krate":0,"index":4226},{"krate":0,"index":4230},{"krate":0,"index":4234},{"krate":0,"index":4239},{"krate":0,"index":4242},{"krate":0,"index":4246},{"krate":0,"index":4250},{"krate":0,"index":4255},{"krate":0,"index":4258},{"krate":0,"index":4262},{"krate":0,"index":4266},{"krate":0,"index":4271},{"krate":0,"index":4274},{"krate":0,"index":4278},{"krate":0,"index":4282},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4294},{"krate":0,"index":4298},{"krate":0,"index":4303},{"krate":0,"index":4306},{"krate":0,"index":4310},{"krate":0,"index":4314},{"krate":0,"index":4319},{"krate":0,"index":4322},{"krate":0,"index":4326},{"krate":0,"index":4330},{"krate":0,"index":4335},{"krate":0,"index":4338},{"krate":0,"index":4342},{"krate":0,"index":4346},{"krate":0,"index":4351},{"krate":0,"index":4354},{"krate":0,"index":4358},{"krate":0,"index":4362},{"krate":0,"index":4367},{"krate":0,"index":4370},{"krate":0,"index":4374},{"krate":0,"index":4378},{"krate":0,"index":4383},{"krate":0,"index":4386},{"krate":0,"index":4390},{"krate":0,"index":4394},{"krate":0,"index":4399},{"krate":0,"index":4402},{"krate":0,"index":4406},{"krate":0,"index":4410},{"krate":0,"index":755},{"krate":0,"index":762},{"krate":0,"index":764}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":750},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":159924,"byte_end":159927,"line_start":6,"line_end":6,"column_start":11,"column_end":14},"name":"Pow","qualname":"::pow::Pow","value":"Pow<RHS>","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"decl_id":null,"docs":" Binary operator for raising a value to a power.\n","sig":null,"attributes":[{"value":"/ Binary operator for raising a value to a power.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":159862,"byte_end":159913,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":752},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":159992,"byte_end":159998,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Output","qualname":"::pow::Pow::Output","value":"type Output;","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":159939,"byte_end":159982,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":160187,"byte_end":160190,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::Pow::pow","value":"pub fn pow(Self, RHS) -> Self::Output","parent":{"krate":0,"index":750},"children":[],"decl_id":null,"docs":" Returns `self` to the power `rhs`.","sig":null,"attributes":[{"value":"/ Returns `self` to the power `rhs`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":160005,"byte_end":160043,"line_start":10,"line_end":10,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":160048,"byte_end":160051,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":160056,"byte_end":160070,"line_start":12,"line_end":12,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":160075,"byte_end":160078,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":160083,"byte_end":160090,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Pow;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":160095,"byte_end":160119,"line_start":15,"line_end":15,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Pow::pow(10u32, 2u32), 100);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":160124,"byte_end":160167,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":160172,"byte_end":160179,"line_start":17,"line_end":17,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":762},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165017,"byte_end":165020,"line_start":189,"line_end":189,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::pow","value":"pub fn pow<T: Clone + One + Mul<T, Output = T>>(T, usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, using exponentiation by squaring.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164633,"byte_end":164706,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164707,"byte_end":164710,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`pow(0, 0)`) returns `1`. Mathematically this is undefined.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164711,"byte_end":164792,"line_start":177,"line_end":177,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164793,"byte_end":164796,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164797,"byte_end":164810,"line_start":179,"line_end":179,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164811,"byte_end":164814,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164815,"byte_end":164826,"line_start":181,"line_end":181,"column_start":1,"column_end":12}},{"value":"/ use num_traits::pow;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164827,"byte_end":164851,"line_start":182,"line_end":182,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164852,"byte_end":164855,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pow(2i8, 4), 16);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164856,"byte_end":164888,"line_start":184,"line_end":184,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(pow(6u8, 3), 216);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164889,"byte_end":164922,"line_start":185,"line_end":185,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(pow(0u8, 0), 1); // Be aware if this case affects you","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164923,"byte_end":164991,"line_start":186,"line_end":186,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":164992,"byte_end":164999,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165000,"byte_end":165009,"line_start":188,"line_end":188,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":764},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":166026,"byte_end":166037,"line_start":230,"line_end":230,"column_start":8,"column_end":19},"name":"checked_pow","qualname":"::pow::checked_pow","value":"pub fn checked_pow<T: Clone + One + CheckedMul>(T, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, returning `None` if an overflow occurred.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165474,"byte_end":165555,"line_start":213,"line_end":213,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165556,"byte_end":165559,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`checked_pow(0, 0)`) returns `Some(1)`. Mathematically this is undefined.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165560,"byte_end":165655,"line_start":215,"line_end":215,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165656,"byte_end":165659,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ Otherwise same as the `pow` function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165660,"byte_end":165701,"line_start":217,"line_end":217,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165702,"byte_end":165705,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165706,"byte_end":165719,"line_start":219,"line_end":219,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165720,"byte_end":165723,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165724,"byte_end":165735,"line_start":221,"line_end":221,"column_start":1,"column_end":12}},{"value":"/ use num_traits::checked_pow;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165736,"byte_end":165768,"line_start":222,"line_end":222,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165769,"byte_end":165772,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(checked_pow(2i8, 4), Some(16));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165773,"byte_end":165819,"line_start":224,"line_end":224,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(checked_pow(7i8, 8), None);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165820,"byte_end":165862,"line_start":225,"line_end":225,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(checked_pow(7u32, 8), Some(5_764_801));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165863,"byte_end":165917,"line_start":226,"line_end":226,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(checked_pow(0u32, 0), Some(1)); // Be aware if this case affect you","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":165918,"byte_end":166000,"line_start":227,"line_end":227,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":166001,"byte_end":166008,"line_start":228,"line_end":228,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/pow.rs","byte_start":166009,"byte_end":166018,"line_start":229,"line_end":229,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":767},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"real","qualname":"::real","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":829}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"std\", feature = \"libm\"))","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":166737,"byte_end":166784,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":781},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167381,"byte_end":167385,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"name":"Real","qualname":"::real::Real","value":"Real: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828}],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[{"value":"/ A trait for real number types that do not necessarily have","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":166981,"byte_end":167043,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ floating-point-specific characteristics such as NaN and infinity.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167044,"byte_end":167113,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167114,"byte_end":167117,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [this Wikipedia article](https://en.wikipedia.org/wiki/Real_data_type)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167118,"byte_end":167196,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ for a list of data types that could meaningfully implement this trait.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167197,"byte_end":167271,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167272,"byte_end":167275,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature, or with the `libm` feature otherwise.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167276,"byte_end":167370,"line_start":16,"line_end":16,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167702,"byte_end":167711,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"min_value","qualname":"::real::Real::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167448,"byte_end":167515,"line_start":18,"line_end":18,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167520,"byte_end":167523,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167528,"byte_end":167535,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167540,"byte_end":167571,"line_start":21,"line_end":21,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167576,"byte_end":167593,"line_start":22,"line_end":22,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167598,"byte_end":167601,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_value();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167606,"byte_end":167641,"line_start":24,"line_end":24,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167646,"byte_end":167649,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167654,"byte_end":167682,"line_start":26,"line_end":26,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167687,"byte_end":167694,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168014,"byte_end":168032,"line_start":40,"line_end":40,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::real::Real::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167728,"byte_end":167809,"line_start":30,"line_end":30,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167814,"byte_end":167817,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167822,"byte_end":167829,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167834,"byte_end":167865,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167870,"byte_end":167887,"line_start":34,"line_end":34,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167892,"byte_end":167895,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_positive_value();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167900,"byte_end":167944,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167949,"byte_end":167952,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167957,"byte_end":167994,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167999,"byte_end":168006,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168413,"byte_end":168420,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::real::Real::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168049,"byte_end":168093,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168098,"byte_end":168101,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168106,"byte_end":168113,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168118,"byte_end":168149,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168154,"byte_end":168171,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168176,"byte_end":168179,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::epsilon();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168184,"byte_end":168217,"line_start":48,"line_end":48,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168222,"byte_end":168225,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168230,"byte_end":168262,"line_start":50,"line_end":50,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168267,"byte_end":168274,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168279,"byte_end":168282,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168287,"byte_end":168299,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168304,"byte_end":168307,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168312,"byte_end":168378,"line_start":55,"line_end":55,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168383,"byte_end":168405,"line_start":56,"line_end":56,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168682,"byte_end":168691,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"max_value","qualname":"::real::Real::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168437,"byte_end":168503,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168508,"byte_end":168511,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168516,"byte_end":168523,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168528,"byte_end":168559,"line_start":62,"line_end":62,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168564,"byte_end":168581,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168586,"byte_end":168589,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::max_value();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168594,"byte_end":168629,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168634,"byte_end":168662,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168667,"byte_end":168674,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168978,"byte_end":168983,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"floor","qualname":"::real::Real::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168708,"byte_end":168771,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168776,"byte_end":168779,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168784,"byte_end":168791,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168796,"byte_end":168827,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168832,"byte_end":168835,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168840,"byte_end":168857,"line_start":75,"line_end":75,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168862,"byte_end":168878,"line_start":76,"line_end":76,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168883,"byte_end":168886,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168891,"byte_end":168922,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168927,"byte_end":168958,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":168963,"byte_end":168970,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169276,"byte_end":169280,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"ceil","qualname":"::real::Real::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169004,"byte_end":169071,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169076,"byte_end":169079,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169084,"byte_end":169091,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169096,"byte_end":169127,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169132,"byte_end":169135,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169140,"byte_end":169157,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169162,"byte_end":169178,"line_start":89,"line_end":89,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169183,"byte_end":169186,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169191,"byte_end":169221,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169226,"byte_end":169256,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169261,"byte_end":169268,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169599,"byte_end":169604,"line_start":108,"line_end":108,"column_start":8,"column_end":13},"name":"round","qualname":"::real::Real::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169301,"byte_end":169376,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169381,"byte_end":169391,"line_start":97,"line_end":97,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169396,"byte_end":169399,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169404,"byte_end":169411,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169416,"byte_end":169447,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169452,"byte_end":169455,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169460,"byte_end":169476,"line_start":102,"line_end":102,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169481,"byte_end":169498,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169503,"byte_end":169506,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169511,"byte_end":169542,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169547,"byte_end":169579,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169584,"byte_end":169591,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169873,"byte_end":169878,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"trunc","qualname":"::real::Real::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169625,"byte_end":169665,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169670,"byte_end":169673,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169678,"byte_end":169685,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169690,"byte_end":169721,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169726,"byte_end":169729,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169734,"byte_end":169750,"line_start":115,"line_end":115,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169755,"byte_end":169772,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169777,"byte_end":169780,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169785,"byte_end":169816,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169821,"byte_end":169853,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169858,"byte_end":169865,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170279,"byte_end":170284,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"fract","qualname":"::real::Real::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169899,"byte_end":169943,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169948,"byte_end":169951,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169956,"byte_end":169963,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":169968,"byte_end":169999,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170004,"byte_end":170007,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170012,"byte_end":170028,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170033,"byte_end":170050,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170055,"byte_end":170106,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170111,"byte_end":170165,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170170,"byte_end":170173,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170178,"byte_end":170216,"line_start":133,"line_end":133,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170221,"byte_end":170259,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170264,"byte_end":170271,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170839,"byte_end":170842,"line_start":156,"line_end":156,"column_start":8,"column_end":11},"name":"abs","qualname":"::real::Real::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170305,"byte_end":170377,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170382,"byte_end":170411,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170416,"byte_end":170419,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170424,"byte_end":170431,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170436,"byte_end":170467,"line_start":142,"line_end":142,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170472,"byte_end":170489,"line_start":143,"line_end":143,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170494,"byte_end":170497,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170502,"byte_end":170518,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170523,"byte_end":170540,"line_start":146,"line_end":146,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170545,"byte_end":170548,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170553,"byte_end":170600,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170605,"byte_end":170655,"line_start":149,"line_end":149,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170660,"byte_end":170663,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170668,"byte_end":170706,"line_start":151,"line_end":151,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170711,"byte_end":170749,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170754,"byte_end":170757,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ assert!(::num_traits::Float::is_nan(f64::NAN.abs()));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170762,"byte_end":170819,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170824,"byte_end":170831,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171414,"byte_end":171420,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"signum","qualname":"::real::Real::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170863,"byte_end":170919,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170924,"byte_end":170927,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":170932,"byte_end":171000,"line_start":160,"line_end":160,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171005,"byte_end":171078,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171083,"byte_end":171135,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171140,"byte_end":171143,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171148,"byte_end":171155,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171160,"byte_end":171191,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171196,"byte_end":171213,"line_start":166,"line_end":166,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171218,"byte_end":171221,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171226,"byte_end":171242,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171247,"byte_end":171250,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171255,"byte_end":171287,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171292,"byte_end":171341,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171346,"byte_end":171349,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171354,"byte_end":171394,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171399,"byte_end":171406,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171901,"byte_end":171917,"line_start":193,"line_end":193,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::real::Real::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171441,"byte_end":171500,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171505,"byte_end":171573,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171578,"byte_end":171581,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171586,"byte_end":171593,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171598,"byte_end":171629,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171634,"byte_end":171651,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171656,"byte_end":171659,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171664,"byte_end":171697,"line_start":184,"line_end":184,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171702,"byte_end":171705,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171710,"byte_end":171726,"line_start":186,"line_end":186,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171731,"byte_end":171748,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171753,"byte_end":171756,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171761,"byte_end":171795,"line_start":189,"line_end":189,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171800,"byte_end":171835,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171840,"byte_end":171881,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171886,"byte_end":171893,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172394,"byte_end":172410,"line_start":211,"line_end":211,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::real::Real::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":171938,"byte_end":171997,"line_start":195,"line_end":195,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172002,"byte_end":172075,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172080,"byte_end":172083,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172088,"byte_end":172095,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172100,"byte_end":172131,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172136,"byte_end":172153,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172158,"byte_end":172161,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172166,"byte_end":172194,"line_start":202,"line_end":202,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172199,"byte_end":172202,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172207,"byte_end":172223,"line_start":204,"line_end":204,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172228,"byte_end":172245,"line_start":205,"line_end":205,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172250,"byte_end":172253,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172258,"byte_end":172293,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172298,"byte_end":172332,"line_start":208,"line_end":208,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172337,"byte_end":172374,"line_start":209,"line_end":209,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172379,"byte_end":172386,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173027,"byte_end":173034,"line_start":231,"line_end":231,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::real::Real::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172431,"byte_end":172503,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172508,"byte_end":172580,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172585,"byte_end":172588,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172593,"byte_end":172667,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172672,"byte_end":172738,"line_start":217,"line_end":217,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172743,"byte_end":172746,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172751,"byte_end":172758,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172763,"byte_end":172794,"line_start":220,"line_end":220,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172799,"byte_end":172802,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172807,"byte_end":172824,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172829,"byte_end":172845,"line_start":223,"line_end":223,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172850,"byte_end":172867,"line_start":224,"line_end":224,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172872,"byte_end":172875,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172880,"byte_end":172892,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172897,"byte_end":172958,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172963,"byte_end":172966,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":172971,"byte_end":173007,"line_start":229,"line_end":229,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173012,"byte_end":173019,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173338,"byte_end":173343,"line_start":243,"line_end":243,"column_start":8,"column_end":13},"name":"recip","qualname":"::real::Real::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173073,"byte_end":173126,"line_start":233,"line_end":233,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173131,"byte_end":173134,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173139,"byte_end":173146,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173151,"byte_end":173182,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173187,"byte_end":173190,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173195,"byte_end":173211,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173216,"byte_end":173269,"line_start":239,"line_end":239,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173274,"byte_end":173277,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173282,"byte_end":173318,"line_start":241,"line_end":241,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173323,"byte_end":173330,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173685,"byte_end":173689,"line_start":257,"line_end":257,"column_start":8,"column_end":12},"name":"powi","qualname":"::real::Real::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173364,"byte_end":173403,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173408,"byte_end":173411,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173416,"byte_end":173477,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173482,"byte_end":173485,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173490,"byte_end":173497,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173502,"byte_end":173533,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173538,"byte_end":173541,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173546,"byte_end":173562,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173567,"byte_end":173616,"line_start":253,"line_end":253,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173621,"byte_end":173624,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173629,"byte_end":173665,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173670,"byte_end":173677,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173970,"byte_end":173974,"line_start":269,"line_end":269,"column_start":8,"column_end":12},"name":"powf","qualname":"::real::Real::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Raise a number to a real number power.","sig":null,"attributes":[{"value":"/ Raise a number to a real number power.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173718,"byte_end":173760,"line_start":259,"line_end":259,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173765,"byte_end":173768,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173773,"byte_end":173780,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173785,"byte_end":173816,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173821,"byte_end":173824,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173829,"byte_end":173845,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173850,"byte_end":173901,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173906,"byte_end":173909,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173914,"byte_end":173950,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":173955,"byte_end":173962,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174566,"byte_end":174570,"line_start":290,"line_end":290,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::real::Real::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174004,"byte_end":174041,"line_start":271,"line_end":271,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174046,"byte_end":174049,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative floating-point number.  ","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174054,"byte_end":174118,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174123,"byte_end":174126,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174131,"byte_end":174143,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174148,"byte_end":174151,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the implementing type doesn't support NaN, this method should panic if `self < 0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174156,"byte_end":174245,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174250,"byte_end":174253,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174258,"byte_end":174265,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174270,"byte_end":174301,"line_start":280,"line_end":280,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174306,"byte_end":174309,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174314,"byte_end":174337,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174342,"byte_end":174366,"line_start":283,"line_end":283,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174371,"byte_end":174374,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174379,"byte_end":174434,"line_start":285,"line_end":285,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174439,"byte_end":174442,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174447,"byte_end":174483,"line_start":287,"line_end":287,"column_start":5,"column_end":41}},{"value":"/ assert!(::num_traits::Float::is_nan(negative.sqrt()));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174488,"byte_end":174546,"line_start":288,"line_end":288,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174551,"byte_end":174558,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174925,"byte_end":174928,"line_start":306,"line_end":306,"column_start":8,"column_end":11},"name":"exp","qualname":"::real::Real::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174591,"byte_end":174642,"line_start":292,"line_end":292,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174647,"byte_end":174650,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174655,"byte_end":174662,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174667,"byte_end":174698,"line_start":295,"line_end":295,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174703,"byte_end":174706,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174711,"byte_end":174729,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174734,"byte_end":174744,"line_start":298,"line_end":298,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174749,"byte_end":174771,"line_start":299,"line_end":299,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174776,"byte_end":174779,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174784,"byte_end":174805,"line_start":301,"line_end":301,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174810,"byte_end":174856,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174861,"byte_end":174864,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174869,"byte_end":174905,"line_start":304,"line_end":304,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174910,"byte_end":174917,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175211,"byte_end":175215,"line_start":320,"line_end":320,"column_start":8,"column_end":12},"name":"exp2","qualname":"::real::Real::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174949,"byte_end":174972,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174977,"byte_end":174980,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174985,"byte_end":174992,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":174997,"byte_end":175028,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175033,"byte_end":175036,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175041,"byte_end":175057,"line_start":313,"line_end":313,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175062,"byte_end":175065,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175070,"byte_end":175089,"line_start":315,"line_end":315,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175094,"byte_end":175142,"line_start":316,"line_end":316,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175147,"byte_end":175150,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175155,"byte_end":175191,"line_start":318,"line_end":318,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175196,"byte_end":175203,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175704,"byte_end":175706,"line_start":340,"line_end":340,"column_start":8,"column_end":10},"name":"ln","qualname":"::real::Real::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175236,"byte_end":175284,"line_start":322,"line_end":322,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175289,"byte_end":175292,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175297,"byte_end":175309,"line_start":324,"line_end":324,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175314,"byte_end":175317,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175322,"byte_end":175421,"line_start":326,"line_end":326,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175426,"byte_end":175429,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175434,"byte_end":175441,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175446,"byte_end":175477,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175482,"byte_end":175485,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175490,"byte_end":175508,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175513,"byte_end":175523,"line_start":332,"line_end":332,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175528,"byte_end":175550,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175555,"byte_end":175558,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175563,"byte_end":175584,"line_start":335,"line_end":335,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175589,"byte_end":175635,"line_start":336,"line_end":336,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175640,"byte_end":175643,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175648,"byte_end":175684,"line_start":338,"line_end":338,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175689,"byte_end":175696,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176358,"byte_end":176361,"line_start":363,"line_end":363,"column_start":8,"column_end":11},"name":"log","qualname":"::real::Real::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175727,"byte_end":175801,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175806,"byte_end":175809,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175814,"byte_end":175826,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175831,"byte_end":175834,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175839,"byte_end":175938,"line_start":346,"line_end":346,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175943,"byte_end":175946,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175951,"byte_end":175958,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175963,"byte_end":175994,"line_start":349,"line_end":349,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":175999,"byte_end":176002,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176007,"byte_end":176026,"line_start":351,"line_end":351,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176031,"byte_end":176049,"line_start":352,"line_end":352,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176054,"byte_end":176057,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176062,"byte_end":176087,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176092,"byte_end":176148,"line_start":355,"line_end":355,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176153,"byte_end":176156,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176161,"byte_end":176184,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176189,"byte_end":176243,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176248,"byte_end":176251,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176256,"byte_end":176295,"line_start":360,"line_end":360,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176300,"byte_end":176338,"line_start":361,"line_end":361,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176343,"byte_end":176350,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176825,"byte_end":176829,"line_start":381,"line_end":381,"column_start":8,"column_end":12},"name":"log2","qualname":"::real::Real::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176394,"byte_end":176441,"line_start":365,"line_end":365,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176446,"byte_end":176449,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176454,"byte_end":176466,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176471,"byte_end":176474,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176479,"byte_end":176578,"line_start":369,"line_end":369,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176583,"byte_end":176586,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176591,"byte_end":176598,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176603,"byte_end":176634,"line_start":372,"line_end":372,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176639,"byte_end":176642,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176647,"byte_end":176665,"line_start":374,"line_end":374,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176670,"byte_end":176673,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176678,"byte_end":176701,"line_start":376,"line_end":376,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176706,"byte_end":176756,"line_start":377,"line_end":377,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176761,"byte_end":176764,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176769,"byte_end":176805,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176810,"byte_end":176817,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177294,"byte_end":177299,"line_start":400,"line_end":400,"column_start":8,"column_end":13},"name":"log10","qualname":"::real::Real::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176850,"byte_end":176898,"line_start":383,"line_end":383,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176903,"byte_end":176906,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176911,"byte_end":176923,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176928,"byte_end":176931,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":176936,"byte_end":177035,"line_start":387,"line_end":387,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177040,"byte_end":177043,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177048,"byte_end":177051,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177056,"byte_end":177063,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177068,"byte_end":177099,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177104,"byte_end":177107,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177112,"byte_end":177131,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177136,"byte_end":177139,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177144,"byte_end":177169,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177174,"byte_end":177225,"line_start":396,"line_end":396,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177230,"byte_end":177233,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177238,"byte_end":177274,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177279,"byte_end":177286,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177584,"byte_end":177594,"line_start":413,"line_end":413,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::real::Real::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177320,"byte_end":177352,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177357,"byte_end":177360,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177365,"byte_end":177372,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177377,"byte_end":177402,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177407,"byte_end":177410,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177415,"byte_end":177442,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177447,"byte_end":177450,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177455,"byte_end":177515,"line_start":409,"line_end":409,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177520,"byte_end":177523,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177528,"byte_end":177564,"line_start":411,"line_end":411,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177569,"byte_end":177576,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177883,"byte_end":177893,"line_start":426,"line_end":426,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::real::Real::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177615,"byte_end":177647,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177652,"byte_end":177655,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177660,"byte_end":177667,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177672,"byte_end":177697,"line_start":418,"line_end":418,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177702,"byte_end":177705,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177710,"byte_end":177736,"line_start":420,"line_end":420,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177741,"byte_end":177744,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177749,"byte_end":177814,"line_start":422,"line_end":422,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177819,"byte_end":177822,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177827,"byte_end":177863,"line_start":424,"line_end":424,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177868,"byte_end":177875,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178124,"byte_end":178127,"line_start":438,"line_end":438,"column_start":8,"column_end":11},"name":"max","qualname":"::real::Real::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177914,"byte_end":177957,"line_start":428,"line_end":428,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177962,"byte_end":177965,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177970,"byte_end":177977,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":177982,"byte_end":178013,"line_start":431,"line_end":431,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178018,"byte_end":178021,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178026,"byte_end":178042,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178047,"byte_end":178063,"line_start":434,"line_end":434,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178068,"byte_end":178071,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178076,"byte_end":178104,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178109,"byte_end":178116,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178371,"byte_end":178374,"line_start":450,"line_end":450,"column_start":8,"column_end":11},"name":"min","qualname":"::real::Real::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178161,"byte_end":178204,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178209,"byte_end":178212,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178217,"byte_end":178224,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178229,"byte_end":178260,"line_start":443,"line_end":443,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178265,"byte_end":178268,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178273,"byte_end":178289,"line_start":445,"line_end":445,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178294,"byte_end":178310,"line_start":446,"line_end":446,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178315,"byte_end":178318,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178323,"byte_end":178351,"line_start":448,"line_end":448,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178356,"byte_end":178363,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178877,"byte_end":178884,"line_start":469,"line_end":469,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::real::Real::abs_sub","value":"pub fn abs_sub(Self, Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178408,"byte_end":178451,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178456,"byte_end":178459,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178464,"byte_end":178495,"line_start":454,"line_end":454,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178500,"byte_end":178526,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178531,"byte_end":178534,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178539,"byte_end":178546,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178551,"byte_end":178582,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178587,"byte_end":178590,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178595,"byte_end":178611,"line_start":460,"line_end":460,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178616,"byte_end":178633,"line_start":461,"line_end":461,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178638,"byte_end":178641,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178646,"byte_end":178702,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178707,"byte_end":178763,"line_start":464,"line_end":464,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178768,"byte_end":178771,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178776,"byte_end":178814,"line_start":466,"line_end":466,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178819,"byte_end":178857,"line_start":467,"line_end":467,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178862,"byte_end":178869,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179197,"byte_end":179201,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::real::Real::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Take the cubic root of a number.","sig":null,"attributes":[{"value":"/ Take the cubic root of a number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178918,"byte_end":178954,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178959,"byte_end":178962,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178967,"byte_end":178974,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":178979,"byte_end":179010,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179015,"byte_end":179018,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179023,"byte_end":179039,"line_start":476,"line_end":476,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179044,"byte_end":179047,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179052,"byte_end":179075,"line_start":478,"line_end":478,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179080,"byte_end":179128,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179133,"byte_end":179136,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179141,"byte_end":179177,"line_start":481,"line_end":481,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179182,"byte_end":179189,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179624,"byte_end":179629,"line_start":499,"line_end":499,"column_start":8,"column_end":13},"name":"hypot","qualname":"::real::Real::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179222,"byte_end":179296,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179301,"byte_end":179332,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179337,"byte_end":179340,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179345,"byte_end":179352,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179357,"byte_end":179388,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179393,"byte_end":179396,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179401,"byte_end":179417,"line_start":491,"line_end":491,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179422,"byte_end":179438,"line_start":492,"line_end":492,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179443,"byte_end":179446,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179451,"byte_end":179473,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179478,"byte_end":179555,"line_start":495,"line_end":495,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179560,"byte_end":179563,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179568,"byte_end":179604,"line_start":497,"line_end":497,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179609,"byte_end":179616,"line_start":498,"line_end":498,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179962,"byte_end":179965,"line_start":513,"line_end":513,"column_start":8,"column_end":11},"name":"sin","qualname":"::real::Real::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179663,"byte_end":179710,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179715,"byte_end":179718,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179723,"byte_end":179730,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179735,"byte_end":179766,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179771,"byte_end":179788,"line_start":505,"line_end":505,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179793,"byte_end":179796,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179801,"byte_end":179833,"line_start":507,"line_end":507,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179838,"byte_end":179841,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179846,"byte_end":179893,"line_start":509,"line_end":509,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179898,"byte_end":179901,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179906,"byte_end":179942,"line_start":511,"line_end":511,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179947,"byte_end":179954,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180287,"byte_end":180290,"line_start":527,"line_end":527,"column_start":8,"column_end":11},"name":"cos","qualname":"::real::Real::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":179986,"byte_end":180035,"line_start":515,"line_end":515,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180040,"byte_end":180043,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180048,"byte_end":180055,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180060,"byte_end":180091,"line_start":518,"line_end":518,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180096,"byte_end":180113,"line_start":519,"line_end":519,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180118,"byte_end":180121,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180126,"byte_end":180158,"line_start":521,"line_end":521,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180163,"byte_end":180166,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180171,"byte_end":180218,"line_start":523,"line_end":523,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180223,"byte_end":180226,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180231,"byte_end":180267,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180272,"byte_end":180279,"line_start":526,"line_end":526,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180605,"byte_end":180608,"line_start":540,"line_end":540,"column_start":8,"column_end":11},"name":"tan","qualname":"::real::Real::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180311,"byte_end":180361,"line_start":529,"line_end":529,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180366,"byte_end":180369,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180374,"byte_end":180381,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180386,"byte_end":180417,"line_start":532,"line_end":532,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180422,"byte_end":180439,"line_start":533,"line_end":533,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180444,"byte_end":180447,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180452,"byte_end":180484,"line_start":535,"line_end":535,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180489,"byte_end":180536,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180541,"byte_end":180544,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180549,"byte_end":180585,"line_start":538,"line_end":538,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180590,"byte_end":180597,"line_start":539,"line_end":539,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181265,"byte_end":181269,"line_start":562,"line_end":562,"column_start":8,"column_end":12},"name":"asin","qualname":"::real::Real::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180629,"byte_end":180696,"line_start":542,"line_end":542,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180701,"byte_end":180770,"line_start":543,"line_end":543,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180775,"byte_end":180787,"line_start":544,"line_end":544,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180792,"byte_end":180795,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180800,"byte_end":180812,"line_start":546,"line_end":546,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180817,"byte_end":180820,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180825,"byte_end":180907,"line_start":548,"line_end":548,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180912,"byte_end":180959,"line_start":549,"line_end":549,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180964,"byte_end":180967,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180972,"byte_end":180979,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":180984,"byte_end":181015,"line_start":552,"line_end":552,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181020,"byte_end":181037,"line_start":553,"line_end":553,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181042,"byte_end":181045,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181050,"byte_end":181084,"line_start":555,"line_end":555,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181089,"byte_end":181092,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181097,"byte_end":181119,"line_start":557,"line_end":557,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181124,"byte_end":181196,"line_start":558,"line_end":558,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181201,"byte_end":181204,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181209,"byte_end":181245,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181250,"byte_end":181257,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181922,"byte_end":181926,"line_start":584,"line_end":584,"column_start":8,"column_end":12},"name":"acos","qualname":"::real::Real::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181290,"byte_end":181359,"line_start":564,"line_end":564,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181364,"byte_end":181427,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181432,"byte_end":181444,"line_start":566,"line_end":566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181449,"byte_end":181452,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181457,"byte_end":181469,"line_start":568,"line_end":568,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181474,"byte_end":181477,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181482,"byte_end":181564,"line_start":570,"line_end":570,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181569,"byte_end":181616,"line_start":571,"line_end":571,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181621,"byte_end":181624,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181629,"byte_end":181636,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181641,"byte_end":181672,"line_start":574,"line_end":574,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181677,"byte_end":181694,"line_start":575,"line_end":575,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181699,"byte_end":181702,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181707,"byte_end":181741,"line_start":577,"line_end":577,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181746,"byte_end":181749,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181754,"byte_end":181776,"line_start":579,"line_end":579,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181781,"byte_end":181853,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181858,"byte_end":181861,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181866,"byte_end":181902,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181907,"byte_end":181914,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182295,"byte_end":182299,"line_start":599,"line_end":599,"column_start":8,"column_end":12},"name":"atan","qualname":"::real::Real::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":181947,"byte_end":182021,"line_start":586,"line_end":586,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182026,"byte_end":182050,"line_start":587,"line_end":587,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182055,"byte_end":182058,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182063,"byte_end":182070,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182075,"byte_end":182106,"line_start":590,"line_end":590,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182111,"byte_end":182114,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182119,"byte_end":182135,"line_start":592,"line_end":592,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182140,"byte_end":182143,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182148,"byte_end":182167,"line_start":594,"line_end":594,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182172,"byte_end":182226,"line_start":595,"line_end":595,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182231,"byte_end":182234,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182239,"byte_end":182275,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182280,"byte_end":182287,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183185,"byte_end":183190,"line_start":628,"line_end":628,"column_start":8,"column_end":13},"name":"atan2","qualname":"::real::Real::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182320,"byte_end":182396,"line_start":601,"line_end":601,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182401,"byte_end":182404,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182409,"byte_end":182436,"line_start":603,"line_end":603,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182441,"byte_end":182489,"line_start":604,"line_end":604,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182494,"byte_end":182544,"line_start":605,"line_end":605,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182549,"byte_end":182600,"line_start":606,"line_end":606,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182605,"byte_end":182608,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182613,"byte_end":182620,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182625,"byte_end":182656,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182661,"byte_end":182678,"line_start":610,"line_end":610,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182683,"byte_end":182686,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182691,"byte_end":182720,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182725,"byte_end":182769,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182774,"byte_end":182805,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182810,"byte_end":182827,"line_start":615,"line_end":615,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182832,"byte_end":182850,"line_start":616,"line_end":616,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182855,"byte_end":182858,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182863,"byte_end":182887,"line_start":618,"line_end":618,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182892,"byte_end":182910,"line_start":619,"line_end":619,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182915,"byte_end":182932,"line_start":620,"line_end":620,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182937,"byte_end":182940,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":182945,"byte_end":183005,"line_start":622,"line_end":622,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183010,"byte_end":183071,"line_start":623,"line_end":623,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183076,"byte_end":183079,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183084,"byte_end":183122,"line_start":625,"line_end":625,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183127,"byte_end":183165,"line_start":626,"line_end":626,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183170,"byte_end":183177,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183709,"byte_end":183716,"line_start":646,"line_end":646,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::real::Real::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183224,"byte_end":183299,"line_start":630,"line_end":630,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183304,"byte_end":183327,"line_start":631,"line_end":631,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183332,"byte_end":183335,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183340,"byte_end":183347,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183352,"byte_end":183383,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183388,"byte_end":183405,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183410,"byte_end":183413,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183418,"byte_end":183450,"line_start":637,"line_end":637,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183455,"byte_end":183479,"line_start":638,"line_end":638,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183484,"byte_end":183487,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183492,"byte_end":183541,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183546,"byte_end":183595,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183600,"byte_end":183603,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183608,"byte_end":183646,"line_start":643,"line_end":643,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183651,"byte_end":183689,"line_start":644,"line_end":644,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183694,"byte_end":183701,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184089,"byte_end":184095,"line_start":661,"line_end":661,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::real::Real::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183745,"byte_end":183809,"line_start":648,"line_end":648,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183814,"byte_end":183842,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183847,"byte_end":183850,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183855,"byte_end":183862,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183867,"byte_end":183898,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183903,"byte_end":183906,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183911,"byte_end":183927,"line_start":654,"line_end":654,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183932,"byte_end":183935,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183940,"byte_end":183960,"line_start":656,"line_end":656,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":183965,"byte_end":184020,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184025,"byte_end":184028,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184033,"byte_end":184069,"line_start":659,"line_end":659,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184074,"byte_end":184081,"line_start":660,"line_end":660,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184673,"byte_end":184678,"line_start":682,"line_end":682,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::real::Real::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184116,"byte_end":184181,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184186,"byte_end":184231,"line_start":664,"line_end":664,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184236,"byte_end":184239,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184244,"byte_end":184256,"line_start":666,"line_end":666,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184261,"byte_end":184264,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184269,"byte_end":184351,"line_start":668,"line_end":668,"column_start":5,"column_end":87}},{"value":"/ if `self-1 <= 0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184356,"byte_end":184377,"line_start":669,"line_end":669,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184382,"byte_end":184385,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184390,"byte_end":184397,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184402,"byte_end":184433,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184438,"byte_end":184455,"line_start":673,"line_end":673,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184460,"byte_end":184463,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184468,"byte_end":184501,"line_start":675,"line_end":675,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184506,"byte_end":184509,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184514,"byte_end":184550,"line_start":677,"line_end":677,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184555,"byte_end":184604,"line_start":678,"line_end":678,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184609,"byte_end":184612,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184617,"byte_end":184653,"line_start":680,"line_end":680,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184658,"byte_end":184665,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185103,"byte_end":185107,"line_start":700,"line_end":700,"column_start":8,"column_end":12},"name":"sinh","qualname":"::real::Real::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184699,"byte_end":184728,"line_start":684,"line_end":684,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184733,"byte_end":184736,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184741,"byte_end":184748,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184753,"byte_end":184784,"line_start":687,"line_end":687,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184789,"byte_end":184806,"line_start":688,"line_end":688,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184811,"byte_end":184814,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184819,"byte_end":184846,"line_start":690,"line_end":690,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184851,"byte_end":184867,"line_start":691,"line_end":691,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184872,"byte_end":184875,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184880,"byte_end":184901,"line_start":693,"line_end":693,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184906,"byte_end":184953,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184958,"byte_end":184990,"line_start":695,"line_end":695,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":184995,"byte_end":185034,"line_start":696,"line_end":696,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185039,"byte_end":185042,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185047,"byte_end":185083,"line_start":698,"line_end":698,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185088,"byte_end":185095,"line_start":699,"line_end":699,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185548,"byte_end":185552,"line_start":718,"line_end":718,"column_start":8,"column_end":12},"name":"cosh","qualname":"::real::Real::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185128,"byte_end":185159,"line_start":702,"line_end":702,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185164,"byte_end":185167,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185172,"byte_end":185179,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185184,"byte_end":185215,"line_start":705,"line_end":705,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185220,"byte_end":185237,"line_start":706,"line_end":706,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185242,"byte_end":185245,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185250,"byte_end":185277,"line_start":708,"line_end":708,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185282,"byte_end":185298,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185303,"byte_end":185324,"line_start":710,"line_end":710,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185329,"byte_end":185373,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185378,"byte_end":185410,"line_start":712,"line_end":712,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185415,"byte_end":185454,"line_start":713,"line_end":713,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185459,"byte_end":185462,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185467,"byte_end":185485,"line_start":715,"line_end":715,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185490,"byte_end":185528,"line_start":716,"line_end":716,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185533,"byte_end":185540,"line_start":717,"line_end":717,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186013,"byte_end":186017,"line_start":736,"line_end":736,"column_start":8,"column_end":12},"name":"tanh","qualname":"::real::Real::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185573,"byte_end":185605,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185610,"byte_end":185613,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185618,"byte_end":185625,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185630,"byte_end":185661,"line_start":723,"line_end":723,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185666,"byte_end":185683,"line_start":724,"line_end":724,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185688,"byte_end":185691,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185696,"byte_end":185723,"line_start":726,"line_end":726,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185728,"byte_end":185744,"line_start":727,"line_end":727,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185749,"byte_end":185752,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185757,"byte_end":185778,"line_start":729,"line_end":729,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185783,"byte_end":185843,"line_start":730,"line_end":730,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185848,"byte_end":185898,"line_start":731,"line_end":731,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185903,"byte_end":185942,"line_start":732,"line_end":732,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185947,"byte_end":185950,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185955,"byte_end":185993,"line_start":734,"line_end":734,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":185998,"byte_end":186005,"line_start":735,"line_end":735,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186317,"byte_end":186322,"line_start":750,"line_end":750,"column_start":8,"column_end":13},"name":"asinh","qualname":"::real::Real::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186038,"byte_end":186075,"line_start":738,"line_end":738,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186080,"byte_end":186083,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186088,"byte_end":186095,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186100,"byte_end":186131,"line_start":741,"line_end":741,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186136,"byte_end":186139,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186144,"byte_end":186160,"line_start":743,"line_end":743,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186165,"byte_end":186194,"line_start":744,"line_end":744,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186199,"byte_end":186202,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186207,"byte_end":186246,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186251,"byte_end":186254,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186259,"byte_end":186297,"line_start":748,"line_end":748,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186302,"byte_end":186309,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186624,"byte_end":186629,"line_start":764,"line_end":764,"column_start":8,"column_end":13},"name":"acosh","qualname":"::real::Real::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186343,"byte_end":186382,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186387,"byte_end":186390,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186395,"byte_end":186402,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186407,"byte_end":186438,"line_start":755,"line_end":755,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186443,"byte_end":186446,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186451,"byte_end":186467,"line_start":757,"line_end":757,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186472,"byte_end":186501,"line_start":758,"line_end":758,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186506,"byte_end":186509,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186514,"byte_end":186553,"line_start":760,"line_end":760,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186558,"byte_end":186561,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186566,"byte_end":186604,"line_start":762,"line_end":762,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186609,"byte_end":186616,"line_start":763,"line_end":763,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186965,"byte_end":186970,"line_start":779,"line_end":779,"column_start":8,"column_end":13},"name":"atanh","qualname":"::real::Real::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":781},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186650,"byte_end":186690,"line_start":766,"line_end":766,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186695,"byte_end":186698,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186703,"byte_end":186710,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186715,"byte_end":186746,"line_start":769,"line_end":769,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186751,"byte_end":186768,"line_start":770,"line_end":770,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186773,"byte_end":186776,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186781,"byte_end":186808,"line_start":772,"line_end":772,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186813,"byte_end":186842,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186847,"byte_end":186850,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186855,"byte_end":186894,"line_start":775,"line_end":775,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186899,"byte_end":186902,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186907,"byte_end":186945,"line_start":777,"line_end":777,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":186950,"byte_end":186957,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":831},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sign","qualname":"::sign","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":850},{"krate":0,"index":4670},{"krate":0,"index":4676},{"krate":0,"index":4682},{"krate":0,"index":4688},{"krate":0,"index":4694},{"krate":0,"index":4700},{"krate":0,"index":851},{"krate":0,"index":858},{"krate":0,"index":4706},{"krate":0,"index":4712},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":4718},{"krate":0,"index":4719},{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":867}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":844},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189054,"byte_end":189060,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Signed","qualname":"::sign::Signed","value":"Signed: Sized + Num + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[{"value":"/ Useful functions for signed numbers (i.e. numbers that can be negative).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":188967,"byte_end":189043,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189313,"byte_end":189316,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::Signed::abs","value":"pub fn abs(&Self) -> Self","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189101,"byte_end":189133,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189138,"byte_end":189141,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189146,"byte_end":189217,"line_start":11,"line_end":11,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189222,"byte_end":189225,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189230,"byte_end":189305,"line_start":13,"line_end":13,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189541,"byte_end":189548,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::Signed::abs_sub","value":"pub fn abs_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189338,"byte_end":189381,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189386,"byte_end":189389,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Returns `zero` if the number is less than or equal to `other`, otherwise the difference","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189394,"byte_end":189485,"line_start":18,"line_end":18,"column_start":5,"column_end":96}},{"value":"/ between `self` and `other` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189490,"byte_end":189533,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":190006,"byte_end":190012,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::Signed::signum","value":"pub fn signum(&Self) -> Self","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189584,"byte_end":189619,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189624,"byte_end":189627,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189632,"byte_end":189656,"line_start":24,"line_end":24,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189661,"byte_end":189664,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189669,"byte_end":189728,"line_start":26,"line_end":26,"column_start":5,"column_end":64}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189733,"byte_end":189797,"line_start":27,"line_end":27,"column_start":5,"column_end":69}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189802,"byte_end":189836,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189841,"byte_end":189844,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ For signed integers:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189849,"byte_end":189873,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189878,"byte_end":189881,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ * `0` if the number is zero","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189886,"byte_end":189917,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/ * `1` if the number is positive","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189922,"byte_end":189957,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189962,"byte_end":189998,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":190129,"byte_end":190140,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"is_positive","qualname":"::sign::Signed::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" Returns true if the number is positive and false if the number is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is positive and false if the number is zero or negative.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":190034,"byte_end":190121,"line_start":37,"line_end":37,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":190257,"byte_end":190268,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"is_negative","qualname":"::sign::Signed::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" Returns true if the number is negative and false if the number is zero or positive.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is negative and false if the number is zero or positive.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":190162,"byte_end":190249,"line_start":40,"line_end":40,"column_start":5,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":859},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193462,"byte_end":193465,"line_start":165,"line_end":165,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::abs","value":"pub fn abs<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193249,"byte_end":193281,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193282,"byte_end":193285,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193286,"byte_end":193356,"line_start":161,"line_end":161,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193357,"byte_end":193360,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193361,"byte_end":193436,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193437,"byte_end":193454,"line_start":164,"line_end":164,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":861},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193702,"byte_end":193709,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::abs_sub","value":"pub fn abs_sub<T: Signed>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193513,"byte_end":193556,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193557,"byte_end":193560,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Returns zero if `x` is less than or equal to `y`, otherwise the difference","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193561,"byte_end":193639,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ between `x` and `y` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193640,"byte_end":193676,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193677,"byte_end":193694,"line_start":173,"line_end":173,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":863},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194153,"byte_end":194159,"line_start":192,"line_end":192,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::signum","value":"pub fn signum<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193761,"byte_end":193796,"line_start":178,"line_end":178,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193797,"byte_end":193800,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193801,"byte_end":193825,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193826,"byte_end":193829,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193830,"byte_end":193889,"line_start":182,"line_end":182,"column_start":1,"column_end":60}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193890,"byte_end":193954,"line_start":183,"line_end":183,"column_start":1,"column_end":65}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193955,"byte_end":193989,"line_start":184,"line_end":184,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193990,"byte_end":193993,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ For signed integers:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":193994,"byte_end":194018,"line_start":186,"line_end":186,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194019,"byte_end":194022,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ * `0` if the number is zero","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194023,"byte_end":194054,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/ * `1` if the number is positive","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194055,"byte_end":194090,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194091,"byte_end":194127,"line_start":190,"line_end":190,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194128,"byte_end":194145,"line_start":191,"line_end":191,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":865},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194268,"byte_end":194276,"line_start":197,"line_end":197,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::sign::Unsigned","value":"Unsigned: Num","parent":null,"children":[],"decl_id":null,"docs":" A trait for values which cannot be negative\n","sig":null,"attributes":[{"value":"/ A trait for values which cannot be negative","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194210,"byte_end":194257,"line_start":196,"line_end":196,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":869},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2165,"byte_end":2168,"line_start":67,"line_end":67,"column_start":11,"column_end":14},"name":"Num","qualname":"::Num","value":"Num: PartialEq + Zero + One + NumOps","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871}],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[{"value":"/ The base trait for numeric types, covering `0` and `1` values,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2022,"byte_end":2088,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/ comparisons, basic numeric operations, and string conversion.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2089,"byte_end":2154,"line_start":66,"line_end":66,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":870},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2213,"byte_end":2228,"line_start":68,"line_end":68,"column_start":10,"column_end":25},"name":"FromStrRadixErr","qualname":"::Num::FromStrRadixErr","value":"type FromStrRadixErr;","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2586,"byte_end":2600,"line_start":83,"line_end":83,"column_start":8,"column_end":22},"name":"from_str_radix","qualname":"::Num::from_str_radix","value":"pub fn from_str_radix(&str, u32) -> Result<Self, Self::FromStrRadixErr>","parent":{"krate":0,"index":869},"children":[],"decl_id":null,"docs":" Convert from a string and radix <= 36.","sig":null,"attributes":[{"value":"/ Convert from a string and radix <= 36.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2235,"byte_end":2277,"line_start":70,"line_end":70,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2282,"byte_end":2285,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2290,"byte_end":2304,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2309,"byte_end":2312,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2317,"byte_end":2328,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ use num_traits::Num;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2333,"byte_end":2357,"line_start":75,"line_end":75,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2362,"byte_end":2365,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"27\", 10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2370,"byte_end":2426,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(result, Ok(27));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2431,"byte_end":2462,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2467,"byte_end":2470,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"foo\", 10);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2475,"byte_end":2532,"line_start":80,"line_end":80,"column_start":5,"column_end":62}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2537,"byte_end":2566,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2571,"byte_end":2578,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":872},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2822,"byte_end":2828,"line_start":89,"line_end":89,"column_start":11,"column_end":17},"name":"NumOps","qualname":"::NumOps","value":"NumOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + Mul<Rhs, Output =\nOutput> + Div<Rhs, Output = Output> + Rem<Rhs, Output = Output>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing basic numeric operations","sig":null,"attributes":[{"value":"/ The trait for types implementing basic numeric operations","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2667,"byte_end":2728,"line_start":86,"line_end":86,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2729,"byte_end":2732,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2733,"byte_end":2811,"line_start":88,"line_end":88,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":879},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3462,"byte_end":3468,"line_start":111,"line_end":111,"column_start":11,"column_end":17},"name":"NumRef","qualname":"::NumRef","value":"NumRef: Num + for<'r> NumOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement numeric operations taking\n the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement numeric operations taking","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3255,"byte_end":3331,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ the second operand by reference.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3332,"byte_end":3368,"line_start":108,"line_end":108,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3369,"byte_end":3372,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3373,"byte_end":3451,"line_start":110,"line_end":110,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":884},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3787,"byte_end":3793,"line_start":118,"line_end":118,"column_start":11,"column_end":17},"name":"RefNum","qualname":"::RefNum","value":"RefNum<Base>: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base>","parent":null,"children":[],"decl_id":null,"docs":" The trait for references which implement numeric operations, taking the\n second operand either by value or by reference.","sig":null,"attributes":[{"value":"/ The trait for references which implement numeric operations, taking the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3566,"byte_end":3641,"line_start":114,"line_end":114,"column_start":1,"column_end":76}},{"value":"/ second operand either by value or by reference.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3642,"byte_end":3693,"line_start":115,"line_end":115,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3694,"byte_end":3697,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3698,"byte_end":3776,"line_start":117,"line_end":117,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":891},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4126,"byte_end":4138,"line_start":124,"line_end":124,"column_start":11,"column_end":23},"name":"NumAssignOps","qualname":"::NumAssignOps","value":"NumAssignOps<Rhs = Self>: AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> +\nRemAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing numeric assignment operators (like `+=`).","sig":null,"attributes":[{"value":"/ The trait for types implementing numeric assignment operators (like `+=`).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3954,"byte_end":4032,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4033,"byte_end":4036,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4037,"byte_end":4115,"line_start":123,"line_end":123,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":896},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4548,"byte_end":4557,"line_start":137,"line_end":137,"column_start":11,"column_end":20},"name":"NumAssign","qualname":"::NumAssign","value":"NumAssign: Num + NumAssignOps","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement assignment operators.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement assignment operators.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4382,"byte_end":4454,"line_start":134,"line_end":134,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4455,"byte_end":4458,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4459,"byte_end":4537,"line_start":136,"line_end":136,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":899},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4853,"byte_end":4865,"line_start":144,"line_end":144,"column_start":11,"column_end":23},"name":"NumAssignRef","qualname":"::NumAssignRef","value":"NumAssignRef: NumAssign + for<'r> NumAssignOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `NumAssign` types which also implement assignment operations\n taking the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `NumAssign` types which also implement assignment operations","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4637,"byte_end":4715,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"/ taking the second operand by reference.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4716,"byte_end":4759,"line_start":141,"line_end":141,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4760,"byte_end":4763,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4764,"byte_end":4842,"line_start":143,"line_end":143,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4761},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":5987,"byte_end":5992,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Empty","qualname":"::FloatErrorKind::Empty","value":"FloatErrorKind::Empty","parent":{"krate":0,"index":4760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4763},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":5998,"byte_end":6005,"line_start":181,"line_end":181,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::FloatErrorKind::Invalid","value":"FloatErrorKind::Invalid","parent":{"krate":0,"index":4760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4760},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":5966,"byte_end":5980,"line_start":179,"line_end":179,"column_start":10,"column_end":24},"name":"FloatErrorKind","qualname":"::FloatErrorKind","value":"pub enum FloatErrorKind { Empty, Invalid, }","parent":null,"children":[{"krate":0,"index":4761},{"krate":0,"index":4763}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4767},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":6163,"byte_end":6178,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"ParseFloatError","qualname":"::ParseFloatError","value":"ParseFloatError { kind }","parent":null,"children":[{"krate":0,"index":4768}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4768},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":6189,"byte_end":6193,"line_start":187,"line_end":187,"column_start":9,"column_end":13},"name":"kind","qualname":"::ParseFloatError::kind","value":"FloatErrorKind","parent":{"krate":0,"index":4767},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":912},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14465,"byte_end":14470,"line_start":375,"line_end":375,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"pub fn clamp<T: PartialOrd>(T, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum and a maximum","sig":null,"attributes":[{"value":"/ A value bounded by a minimum and a maximum","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14198,"byte_end":14244,"line_start":367,"line_end":367,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14245,"byte_end":14248,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14249,"byte_end":14302,"line_start":369,"line_end":369,"column_start":1,"column_end":54}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14303,"byte_end":14359,"line_start":370,"line_end":370,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14360,"byte_end":14394,"line_start":371,"line_end":371,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14395,"byte_end":14398,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(min <= max)`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14399,"byte_end":14447,"line_start":373,"line_end":373,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14448,"byte_end":14457,"line_start":374,"line_end":374,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":914},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15035,"byte_end":15044,"line_start":394,"line_end":394,"column_start":8,"column_end":17},"name":"clamp_min","qualname":"::clamp_min","value":"pub fn clamp_min<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum value","sig":null,"attributes":[{"value":"/ A value bounded by a minimum value","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14700,"byte_end":14738,"line_start":386,"line_end":386,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14739,"byte_end":14742,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14743,"byte_end":14796,"line_start":388,"line_end":388,"column_start":1,"column_end":54}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14797,"byte_end":14831,"line_start":389,"line_end":389,"column_start":1,"column_end":35}},{"value":"/  `clamp_min(std::f32::NAN, 1.0)` preserves `NAN` different from `f32::min(std::f32::NAN, 1.0)`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14832,"byte_end":14931,"line_start":390,"line_end":390,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14932,"byte_end":14935,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(min == min)`. (This occurs if `min` is `NAN`.)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":14936,"byte_end":15017,"line_start":392,"line_end":392,"column_start":1,"column_end":82}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15018,"byte_end":15027,"line_start":393,"line_end":393,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":916},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15546,"byte_end":15555,"line_start":411,"line_end":411,"column_start":8,"column_end":17},"name":"clamp_max","qualname":"::clamp_max","value":"pub fn clamp_max<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a maximum value","sig":null,"attributes":[{"value":"/ A value bounded by a maximum value","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15208,"byte_end":15246,"line_start":403,"line_end":403,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15247,"byte_end":15250,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15251,"byte_end":15307,"line_start":405,"line_end":405,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15308,"byte_end":15342,"line_start":406,"line_end":406,"column_start":1,"column_end":35}},{"value":"/  `clamp_max(std::f32::NAN, 1.0)` preserves `NAN` different from `f32::max(std::f32::NAN, 1.0)`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15343,"byte_end":15442,"line_start":407,"line_end":407,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15443,"byte_end":15446,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ **Panics** in debug mode if `!(max == max)`. (This occurs if `max` is `NAN`.)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15447,"byte_end":15528,"line_start":409,"line_end":409,"column_start":1,"column_end":82}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":15529,"byte_end":15538,"line_start":410,"line_end":410,"column_start":1,"column_end":10}}]}],"impls":[{"id":12,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/bounds.rs","byte_start":21816,"byte_end":21824,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":43765,"byte_end":43773,"line_start":599,"line_end":599,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":44541,"byte_end":44549,"line_start":632,"line_end":632,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46552,"byte_end":46560,"line_start":709,"line_end":709,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113482,"byte_end":113490,"line_start":65,"line_end":65,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":115467,"byte_end":115475,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":156518,"byte_end":156526,"line_start":222,"line_end":222,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":156718,"byte_end":156726,"line_start":230,"line_end":230,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":156918,"byte_end":156926,"line_start":238,"line_end":238,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":157118,"byte_end":157126,"line_start":246,"line_end":246,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":157304,"byte_end":157312,"line_start":254,"line_end":254,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":157510,"byte_end":157518,"line_start":262,"line_end":262,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":187013,"byte_end":187014,"line_start":782,"line_end":782,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4623},{"krate":0,"index":4624},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4637},{"krate":0,"index":4638},{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651},{"krate":0,"index":4652},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4659},{"krate":0,"index":4660},{"krate":0,"index":4661},{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4668},{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":191150,"byte_end":191158,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194538,"byte_end":194546,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3065,"byte_end":3066,"line_start":98,"line_end":98,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3523,"byte_end":3524,"line_start":112,"line_end":112,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3887,"byte_end":3888,"line_start":119,"line_end":119,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4279,"byte_end":4280,"line_start":129,"line_end":129,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4603,"byte_end":4604,"line_start":138,"line_end":138,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4938,"byte_end":4939,"line_start":145,"line_end":145,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":5538,"byte_end":5546,"line_start":164,"line_end":164,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":6236,"byte_end":6251,"line_start":190,"line_end":190,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1897,"byte_end":1903,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":180}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1913,"byte_end":1917,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":241}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1927,"byte_end":1932,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":360}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1942,"byte_end":1952,"line_start":58,"line_end":58,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":489}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1962,"byte_end":1965,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":523}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1975,"byte_end":1978,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":575}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mod.rs","byte_start":127810,"byte_end":127817,"line_start":1,"line_end":1,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":576}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mod.rs","byte_start":127827,"byte_end":127830,"line_start":2,"line_end":2,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":618}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mod.rs","byte_start":127840,"byte_end":127847,"line_start":3,"line_end":3,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":636}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mod.rs","byte_start":127857,"byte_end":127867,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":658}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/mod.rs","byte_start":127877,"byte_end":127885,"line_start":5,"line_end":5,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":680}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":1988,"byte_end":1991,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":736}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2001,"byte_end":2005,"line_start":62,"line_end":62,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":767}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2015,"byte_end":2019,"line_start":63,"line_end":63,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":831}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/bounds.rs","byte_start":21816,"byte_end":21824,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":230}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":36945,"byte_end":36950,"line_start":395,"line_end":395,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":43765,"byte_end":43773,"line_start":599,"line_end":599,"column_start":38,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":44541,"byte_end":44549,"line_start":632,"line_end":632,"column_start":42,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45384,"byte_end":45389,"line_start":671,"line_end":671,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":45392,"byte_end":45403,"line_start":671,"line_end":671,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":297},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":46552,"byte_end":46560,"line_start":709,"line_end":709,"column_start":30,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":348}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/cast.rs","byte_start":47794,"byte_end":47798,"line_start":750,"line_end":750,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2999},"to":{"krate":0,"index":356}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49638,"byte_end":49641,"line_start":16,"line_end":16,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":869},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49644,"byte_end":49651,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":348},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49654,"byte_end":49657,"line_start":16,"line_end":16,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":3083},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49675,"byte_end":49685,"line_start":16,"line_end":16,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":2687},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":49688,"byte_end":49692,"line_start":16,"line_end":16,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":2999},"to":{"krate":0,"index":393}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73322,"byte_end":73325,"line_start":905,"line_end":905,"column_start":18,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":869},"to":{"krate":0,"index":427}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73328,"byte_end":73332,"line_start":905,"line_end":905,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2999},"to":{"krate":0,"index":427}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73335,"byte_end":73342,"line_start":905,"line_end":905,"column_start":31,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":348},"to":{"krate":0,"index":427}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73345,"byte_end":73355,"line_start":905,"line_end":905,"column_start":41,"column_end":51},"kind":"SuperTrait","from":{"krate":1,"index":2687},"to":{"krate":0,"index":427}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/float.rs","byte_start":73358,"byte_end":73361,"line_start":905,"line_end":905,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":1,"index":3083},"to":{"krate":0,"index":427}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112225,"byte_end":112230,"line_start":12,"line_end":12,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":500}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":112233,"byte_end":112236,"line_start":12,"line_end":12,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3056},"to":{"krate":0,"index":500}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113482,"byte_end":113490,"line_start":65,"line_end":65,"column_start":24,"column_end":32},"kind":{"Impl":{"id":284}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":500}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113919,"byte_end":113924,"line_start":90,"line_end":90,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":510}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":113927,"byte_end":113930,"line_start":90,"line_end":90,"column_start":24,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":3066},"to":{"krate":0,"index":510}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/identities.rs","byte_start":115467,"byte_end":115475,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":510}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118482,"byte_end":118487,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118494,"byte_end":118498,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2999},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118505,"byte_end":118508,"line_start":37,"line_end":37,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":869},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118515,"byte_end":118522,"line_start":38,"line_end":38,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":348},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118529,"byte_end":118536,"line_start":39,"line_end":39,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":230},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118543,"byte_end":118553,"line_start":40,"line_end":40,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":2687},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118560,"byte_end":118563,"line_start":41,"line_end":41,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2676},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118570,"byte_end":118572,"line_start":42,"line_end":42,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2645},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118579,"byte_end":118582,"line_start":43,"line_end":43,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3108},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118604,"byte_end":118610,"line_start":44,"line_end":44,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":3112},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118632,"byte_end":118637,"line_start":45,"line_end":45,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":3117},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118659,"byte_end":118665,"line_start":46,"line_end":46,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":3122},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118687,"byte_end":118690,"line_start":47,"line_end":47,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3127},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118719,"byte_end":118722,"line_start":48,"line_end":48,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3133},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118751,"byte_end":118761,"line_start":49,"line_end":49,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":599},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118783,"byte_end":118793,"line_start":50,"line_end":50,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":602},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118815,"byte_end":118825,"line_start":51,"line_end":51,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":604},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118847,"byte_end":118857,"line_start":52,"line_end":52,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":606},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/int.rs","byte_start":118879,"byte_end":118889,"line_start":53,"line_end":53,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":669},"to":{"krate":0,"index":557}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":128049,"byte_end":128054,"line_start":5,"line_end":5,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":599}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":128057,"byte_end":128060,"line_start":5,"line_end":5,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3056},"to":{"krate":0,"index":599}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":129190,"byte_end":129195,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":602}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":129198,"byte_end":129201,"line_start":39,"line_end":39,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3061},"to":{"krate":0,"index":602}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":130093,"byte_end":130098,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":130101,"byte_end":130104,"line_start":63,"line_end":63,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3066},"to":{"krate":0,"index":604}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":131061,"byte_end":131066,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":606}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":131069,"byte_end":131072,"line_start":87,"line_end":87,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":606}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132048,"byte_end":132053,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":608}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":132056,"byte_end":132059,"line_start":111,"line_end":111,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3077},"to":{"krate":0,"index":608}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":133827,"byte_end":133832,"line_start":162,"line_end":162,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":611}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135276,"byte_end":135281,"line_start":200,"line_end":200,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":135284,"byte_end":135287,"line_start":200,"line_end":200,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3127},"to":{"krate":0,"index":613}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":136918,"byte_end":136923,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":616}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/checked.rs","byte_start":136926,"byte_end":136929,"line_start":246,"line_end":246,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":3133},"to":{"krate":0,"index":616}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":144479,"byte_end":144484,"line_start":47,"line_end":47,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":144487,"byte_end":144490,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":3056},"to":{"krate":0,"index":674}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":145487,"byte_end":145492,"line_start":70,"line_end":70,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":676}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":145495,"byte_end":145498,"line_start":70,"line_end":70,"column_start":34,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":3061},"to":{"krate":0,"index":676}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":146501,"byte_end":146506,"line_start":93,"line_end":93,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":678}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/saturating.rs","byte_start":146509,"byte_end":146512,"line_start":93,"line_end":93,"column_start":34,"column_end":37},"kind":"SuperTrait","from":{"krate":1,"index":3066},"to":{"krate":0,"index":678}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":148907,"byte_end":148912,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":704}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":148915,"byte_end":148918,"line_start":24,"line_end":24,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3056},"to":{"krate":0,"index":704}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":149801,"byte_end":149806,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":706}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":149809,"byte_end":149812,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3061},"to":{"krate":0,"index":706}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":150701,"byte_end":150706,"line_start":70,"line_end":70,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":708}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":150709,"byte_end":150712,"line_start":70,"line_end":70,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3066},"to":{"krate":0,"index":708}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":151841,"byte_end":151846,"line_start":104,"line_end":104,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":711}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153680,"byte_end":153685,"line_start":152,"line_end":152,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":714}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":153688,"byte_end":153691,"line_start":152,"line_end":152,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3127},"to":{"krate":0,"index":714}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155086,"byte_end":155091,"line_start":187,"line_end":187,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":716}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":155094,"byte_end":155097,"line_start":187,"line_end":187,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3133},"to":{"krate":0,"index":716}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":156518,"byte_end":156526,"line_start":222,"line_end":222,"column_start":38,"column_end":46},"kind":{"Impl":{"id":558}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":704}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":156718,"byte_end":156726,"line_start":230,"line_end":230,"column_start":38,"column_end":46},"kind":{"Impl":{"id":559}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":706}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":156918,"byte_end":156926,"line_start":238,"line_end":238,"column_start":38,"column_end":46},"kind":{"Impl":{"id":560}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":708}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":157118,"byte_end":157126,"line_start":246,"line_end":246,"column_start":38,"column_end":46},"kind":{"Impl":{"id":561}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":711}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":157304,"byte_end":157312,"line_start":254,"line_end":254,"column_start":38,"column_end":46},"kind":{"Impl":{"id":562}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":714}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/ops/wrapping.rs","byte_start":157510,"byte_end":157518,"line_start":262,"line_end":262,"column_start":38,"column_end":46},"kind":{"Impl":{"id":563}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":716}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167387,"byte_end":167390,"line_start":17,"line_end":17,"column_start":17,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":869},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167393,"byte_end":167397,"line_start":17,"line_end":17,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2999},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167400,"byte_end":167407,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":348},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167410,"byte_end":167420,"line_start":17,"line_end":17,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":2687},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":167423,"byte_end":167426,"line_start":17,"line_end":17,"column_start":53,"column_end":56},"kind":"SuperTrait","from":{"krate":1,"index":3083},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/real.rs","byte_start":187013,"byte_end":187014,"line_start":782,"line_end":782,"column_start":25,"column_end":26},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":781}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189062,"byte_end":189067,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":844}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189070,"byte_end":189073,"line_start":8,"line_end":8,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":869},"to":{"krate":0,"index":844}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":189076,"byte_end":189079,"line_start":8,"line_end":8,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3083},"to":{"krate":0,"index":844}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":191150,"byte_end":191158,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"kind":{"Impl":{"id":741}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":844}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194278,"byte_end":194281,"line_start":197,"line_end":197,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":869},"to":{"krate":0,"index":865}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/sign.rs","byte_start":194538,"byte_end":194546,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"kind":{"Impl":{"id":750}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":865}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2170,"byte_end":2179,"line_start":67,"line_end":67,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2640},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2182,"byte_end":2186,"line_start":67,"line_end":67,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":500},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2189,"byte_end":2192,"line_start":67,"line_end":67,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":510},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2195,"byte_end":2201,"line_start":67,"line_end":67,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":872},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2861,"byte_end":2864,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":3056},"to":{"krate":0,"index":872}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2893,"byte_end":2896,"line_start":91,"line_end":91,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3061},"to":{"krate":0,"index":872}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2925,"byte_end":2928,"line_start":92,"line_end":92,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3066},"to":{"krate":0,"index":872}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2957,"byte_end":2960,"line_start":93,"line_end":93,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3071},"to":{"krate":0,"index":872}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":2989,"byte_end":2992,"line_start":94,"line_end":94,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3077},"to":{"krate":0,"index":872}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3065,"byte_end":3066,"line_start":98,"line_end":98,"column_start":46,"column_end":47},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":876},"to":{"krate":0,"index":872}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3470,"byte_end":3473,"line_start":111,"line_end":111,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":869},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3484,"byte_end":3490,"line_start":111,"line_end":111,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":872},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3523,"byte_end":3524,"line_start":112,"line_end":112,"column_start":20,"column_end":21},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":882},"to":{"krate":0,"index":879}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3801,"byte_end":3807,"line_start":118,"line_end":118,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":872},"to":{"krate":0,"index":884}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3830,"byte_end":3836,"line_start":118,"line_end":118,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":872},"to":{"krate":0,"index":884}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":3887,"byte_end":3888,"line_start":119,"line_end":119,"column_start":32,"column_end":33},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":888},"to":{"krate":0,"index":884}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4156,"byte_end":4165,"line_start":125,"line_end":125,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":3087},"to":{"krate":0,"index":891}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4173,"byte_end":4182,"line_start":125,"line_end":125,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3091},"to":{"krate":0,"index":891}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4190,"byte_end":4199,"line_start":125,"line_end":125,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":3095},"to":{"krate":0,"index":891}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4207,"byte_end":4216,"line_start":125,"line_end":125,"column_start":56,"column_end":65},"kind":"SuperTrait","from":{"krate":1,"index":3099},"to":{"krate":0,"index":891}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4224,"byte_end":4233,"line_start":125,"line_end":125,"column_start":73,"column_end":82},"kind":"SuperTrait","from":{"krate":1,"index":3103},"to":{"krate":0,"index":891}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4279,"byte_end":4280,"line_start":129,"line_end":129,"column_start":36,"column_end":37},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":894},"to":{"krate":0,"index":891}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4559,"byte_end":4562,"line_start":137,"line_end":137,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":869},"to":{"krate":0,"index":896}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4565,"byte_end":4577,"line_start":137,"line_end":137,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":891},"to":{"krate":0,"index":896}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4603,"byte_end":4604,"line_start":138,"line_end":138,"column_start":23,"column_end":24},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":898},"to":{"krate":0,"index":896}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4867,"byte_end":4876,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":896},"to":{"krate":0,"index":899}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4887,"byte_end":4899,"line_start":144,"line_end":144,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":891},"to":{"krate":0,"index":899}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":4938,"byte_end":4939,"line_start":145,"line_end":145,"column_start":26,"column_end":27},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":902},"to":{"krate":0,"index":899}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":5538,"byte_end":5546,"line_start":164,"line_end":164,"column_start":22,"column_end":30},"kind":{"Impl":{"id":769}},"from":{"krate":1,"index":24739},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.12/src/lib.rs","byte_start":6236,"byte_end":6251,"line_start":190,"line_end":190,"column_start":23,"column_end":38},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":4767},"to":{"krate":1,"index":9300}}]}