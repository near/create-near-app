{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8","program":"/home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","toml","--edition=2018","/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=bd2b444908e77606","-C","extra-filename=-bd2b444908e77606","--out-dir","/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps","-L","dependency=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps","--extern","serde=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libserde-36a08739de5d3f86.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libtoml-bd2b444908e77606.rmeta"},"prelude":{"crate_id":{"name":"toml","disambiguator":[939083611432694733,0]},"crate_root":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src","external_crates":[{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","num":20,"id":{"name":"serde","disambiguator":[9071253200680520231,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","num":21,"id":{"name":"serde_derive","disambiguator":[5152474591291482032,0]}}],"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":0,"byte_end":4792,"line_start":1,"line_end":180,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1765},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21675,"byte_end":21683,"line_start":16,"line_end":16,"column_start":27,"column_end":35},"alias_span":null,"name":"Datetime","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1775},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21685,"byte_end":21703,"line_start":16,"line_end":16,"column_start":37,"column_end":55},"alias_span":null,"name":"DatetimeParseError","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21727,"byte_end":21730,"line_start":18,"line_end":18,"column_start":21,"column_end":24},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":188}},{"kind":"Use","ref_id":{"krate":0,"index":1663},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4365,"byte_end":4370,"line_start":159,"line_end":159,"column_start":23,"column_end":28},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":640},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4439,"byte_end":4448,"line_start":164,"line_end":164,"column_start":22,"column_end":31},"alias_span":null,"name":"to_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4450,"byte_end":4466,"line_start":164,"line_end":164,"column_start":33,"column_end":49},"alias_span":null,"name":"to_string_pretty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":637},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4468,"byte_end":4474,"line_start":164,"line_end":164,"column_start":51,"column_end":57},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":648},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4476,"byte_end":4486,"line_start":164,"line_end":164,"column_start":59,"column_end":69},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1075},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4539,"byte_end":4549,"line_start":167,"line_end":167,"column_start":21,"column_end":31},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1078},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4551,"byte_end":4559,"line_start":167,"line_end":167,"column_start":33,"column_end":41},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1081},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4561,"byte_end":4573,"line_start":167,"line_end":167,"column_start":43,"column_end":55},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1447},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs","byte_start":216528,"byte_end":216539,"line_start":1,"line_end":1,"column_start":21,"column_end":32},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":20,"index":1663},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs","byte_start":216541,"byte_end":216557,"line_start":1,"line_end":1,"column_start":34,"column_end":50},"alias_span":null,"name":"IntoDeserializer","value":"","parent":{"krate":0,"index":1503}},{"kind":"Use","ref_id":{"krate":0,"index":2444},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4658,"byte_end":4665,"line_start":174,"line_end":174,"column_start":25,"column_end":32},"alias_span":null,"name":"Spanned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":0,"byte_end":4792,"line_start":1,"line_end":180,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":188},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":611},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1503},{"krate":0,"index":1527},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1608}],"decl_id":null,"docs":" A [TOML]-parsing library","sig":null,"attributes":[{"value":"/ A [TOML]-parsing library","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":0,"byte_end":28,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":29,"byte_end":32,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library implements a [TOML] v0.5.0 compatible parser,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":33,"byte_end":95,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"/ primarily supporting the [`serde`] library for encoding/decoding","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":96,"byte_end":164,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ various types in Rust.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":165,"byte_end":191,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":192,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ TOML itself is a simple, ergonomic, and readable configuration format:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":196,"byte_end":270,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":271,"byte_end":274,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":275,"byte_end":286,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ [package]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":287,"byte_end":300,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/ name = \"toml\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":301,"byte_end":318,"line_start":11,"line_end":11,"column_start":1,"column_end":18}},{"value":"/ version = \"0.4.2\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":319,"byte_end":340,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/ authors = [\"Alex Crichton <alex@alexcrichton.com>\"]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":341,"byte_end":396,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":397,"byte_end":400,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [dependencies]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":401,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ serde = \"1.0\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":420,"byte_end":437,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":438,"byte_end":445,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":446,"byte_end":449,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The TOML format tends to be relatively common throughout the Rust community","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":450,"byte_end":529,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ for configuration, notably being used by [Cargo], Rust's package manager.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":530,"byte_end":607,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":608,"byte_end":611,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## TOML values","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":612,"byte_end":630,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":631,"byte_end":634,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A value in TOML is represented with the [`Value`] enum in this crate:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":635,"byte_end":708,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":709,"byte_end":712,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":713,"byte_end":731,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ pub enum Value {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":732,"byte_end":752,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/     String(String),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":753,"byte_end":776,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/     Integer(i64),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":777,"byte_end":798,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     Float(f64),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":799,"byte_end":818,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     Boolean(bool),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":819,"byte_end":841,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/     Datetime(Datetime),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":842,"byte_end":869,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/     Array(Array),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":870,"byte_end":891,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     Table(Table),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":892,"byte_end":913,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":914,"byte_end":919,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":920,"byte_end":927,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":928,"byte_end":931,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ TOML is similar to JSON with the notable addition of a [`Datetime`]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":932,"byte_end":1003,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ type. In general, TOML and JSON are interchangeable in terms of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1004,"byte_end":1071,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/ formats.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1072,"byte_end":1084,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1085,"byte_end":1088,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Parsing TOML","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1089,"byte_end":1108,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1109,"byte_end":1112,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The easiest way to parse a TOML document is via the [`Value`] type:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1113,"byte_end":1184,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1185,"byte_end":1188,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1189,"byte_end":1200,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ use toml::Value;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1201,"byte_end":1221,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1222,"byte_end":1225,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let value = \"foo = 'bar'\".parse::<Value>().unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1226,"byte_end":1282,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1283,"byte_end":1286,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(value[\"foo\"].as_str(), Some(\"bar\"));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1287,"byte_end":1338,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1339,"byte_end":1346,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1347,"byte_end":1350,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The [`Value`] type implements a number of convenience methods and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1351,"byte_end":1420,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ traits; the example above uses [`FromStr`] to parse a [`str`] into a","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1421,"byte_end":1493,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ [`Value`].","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1494,"byte_end":1508,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1509,"byte_end":1512,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Deserialization and Serialization","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1513,"byte_end":1553,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1554,"byte_end":1557,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This crate supports [`serde`] 1.0 with a number of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1558,"byte_end":1612,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"/ implementations of the `Deserialize`, `Serialize`, `Deserializer`, and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1613,"byte_end":1687,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ `Serializer` traits. Namely, you'll find:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1688,"byte_end":1733,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1734,"byte_end":1737,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * `Deserialize for Value`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1738,"byte_end":1767,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/ * `Serialize for Value`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1768,"byte_end":1795,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ * `Deserialize for Datetime`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1796,"byte_end":1828,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ * `Serialize for Datetime`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1829,"byte_end":1859,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/ * `Deserializer for de::Deserializer`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1860,"byte_end":1901,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ * `Serializer for ser::Serializer`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1902,"byte_end":1940,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ * `Deserializer for Value`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1941,"byte_end":1971,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1972,"byte_end":1975,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This means that you can use Serde to deserialize/serialize the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":1976,"byte_end":2042,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`Value`] type as well as the [`Datetime`] type in this crate. You can also","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2043,"byte_end":2122,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ use the [`Deserializer`], [`Serializer`], or [`Value`] type itself to act as","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2123,"byte_end":2203,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ a deserializer/serializer for arbitrary types.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2204,"byte_end":2254,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2255,"byte_end":2258,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ An example of deserializing with TOML is:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2259,"byte_end":2304,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2305,"byte_end":2308,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2309,"byte_end":2320,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2321,"byte_end":2355,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2356,"byte_end":2359,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2360,"byte_end":2386,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2387,"byte_end":2406,"line_start":83,"line_end":83,"column_start":1,"column_end":20}},{"value":"/     ip: String,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2407,"byte_end":2426,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/     port: Option<u16>,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2427,"byte_end":2453,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/     keys: Keys,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2454,"byte_end":2473,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2474,"byte_end":2479,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2480,"byte_end":2483,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2484,"byte_end":2510,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/ struct Keys {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2511,"byte_end":2528,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/     github: String,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2529,"byte_end":2552,"line_start":91,"line_end":91,"column_start":1,"column_end":24}},{"value":"/     travis: Option<String>,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2553,"byte_end":2584,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2585,"byte_end":2590,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2591,"byte_end":2594,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2595,"byte_end":2610,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/     let config: Config = toml::from_str(r#\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2611,"byte_end":2658,"line_start":96,"line_end":96,"column_start":1,"column_end":48}},{"value":"/         ip = '127.0.0.1'","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2659,"byte_end":2687,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2688,"byte_end":2691,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/         [keys]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2692,"byte_end":2710,"line_start":99,"line_end":99,"column_start":1,"column_end":19}},{"value":"/         github = 'xxxxxxxxxxxxxxxxx'","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2711,"byte_end":2751,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/         travis = 'yyyyyyyyyyyyyyyyy'","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2752,"byte_end":2792,"line_start":101,"line_end":101,"column_start":1,"column_end":41}},{"value":"/     \"#).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2793,"byte_end":2814,"line_start":102,"line_end":102,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2815,"byte_end":2818,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(config.ip, \"127.0.0.1\");","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2819,"byte_end":2862,"line_start":104,"line_end":104,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(config.port, None);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2863,"byte_end":2901,"line_start":105,"line_end":105,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(config.keys.github, \"xxxxxxxxxxxxxxxxx\");","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2902,"byte_end":2962,"line_start":106,"line_end":106,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(config.keys.travis.as_ref().unwrap(), \"yyyyyyyyyyyyyyyyy\");","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":2963,"byte_end":3041,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3042,"byte_end":3047,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3048,"byte_end":3055,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3056,"byte_end":3059,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ You can serialize types in a similar fashion:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3060,"byte_end":3109,"line_start":111,"line_end":111,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3110,"byte_end":3113,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3114,"byte_end":3125,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ use serde_derive::Serialize;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3126,"byte_end":3158,"line_start":114,"line_end":114,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3159,"byte_end":3162,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3163,"byte_end":3187,"line_start":116,"line_end":116,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3188,"byte_end":3207,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/     ip: String,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3208,"byte_end":3227,"line_start":118,"line_end":118,"column_start":1,"column_end":20}},{"value":"/     port: Option<u16>,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3228,"byte_end":3254,"line_start":119,"line_end":119,"column_start":1,"column_end":27}},{"value":"/     keys: Keys,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3255,"byte_end":3274,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3275,"byte_end":3280,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3281,"byte_end":3284,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3285,"byte_end":3309,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/ struct Keys {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3310,"byte_end":3327,"line_start":124,"line_end":124,"column_start":1,"column_end":18}},{"value":"/     github: String,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3328,"byte_end":3351,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/     travis: Option<String>,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3352,"byte_end":3383,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3384,"byte_end":3389,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3390,"byte_end":3393,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3394,"byte_end":3409,"line_start":129,"line_end":129,"column_start":1,"column_end":16}},{"value":"/     let config = Config {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3410,"byte_end":3439,"line_start":130,"line_end":130,"column_start":1,"column_end":30}},{"value":"/         ip: \"127.0.0.1\".to_string(),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3440,"byte_end":3480,"line_start":131,"line_end":131,"column_start":1,"column_end":41}},{"value":"/         port: None,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3481,"byte_end":3504,"line_start":132,"line_end":132,"column_start":1,"column_end":24}},{"value":"/         keys: Keys {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3505,"byte_end":3529,"line_start":133,"line_end":133,"column_start":1,"column_end":25}},{"value":"/             github: \"xxxxxxxxxxxxxxxxx\".to_string(),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3530,"byte_end":3586,"line_start":134,"line_end":134,"column_start":1,"column_end":57}},{"value":"/             travis: Some(\"yyyyyyyyyyyyyyyyy\".to_string()),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3587,"byte_end":3649,"line_start":135,"line_end":135,"column_start":1,"column_end":63}},{"value":"/         },","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3650,"byte_end":3664,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/     };","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3665,"byte_end":3675,"line_start":137,"line_end":137,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3676,"byte_end":3679,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3680,"byte_end":3733,"line_start":139,"line_end":139,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3734,"byte_end":3739,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3740,"byte_end":3747,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3748,"byte_end":3751,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [TOML]: https://github.com/toml-lang/toml","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3752,"byte_end":3797,"line_start":143,"line_end":143,"column_start":1,"column_end":46}},{"value":"/ [Cargo]: https://crates.io/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3798,"byte_end":3829,"line_start":144,"line_end":144,"column_start":1,"column_end":32}},{"value":"/ [`serde`]: https://serde.rs/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3830,"byte_end":3862,"line_start":145,"line_end":145,"column_start":1,"column_end":33}},{"value":"deny(missing_docs)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3916,"byte_end":3938,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":3939,"byte_end":3965,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4272,"byte_end":4295,"line_start":154,"line_end":154,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":151},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":1611},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":161},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":1622},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":1633},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":1641},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":1652},{"krate":0,"index":1657},{"krate":0,"index":1660}],"decl_id":null,"docs":" A map of String to toml::Value.","sig":null,"attributes":[{"value":"/ A map of String to toml::Value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":5133,"byte_end":5168,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":5169,"byte_end":5172,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ By default the map is backed by a [`BTreeMap`]. Enable the `preserve_order`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":5173,"byte_end":5252,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ feature of toml-rs to use [`LinkedHashMap`] instead.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":5253,"byte_end":5309,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":5310,"byte_end":5313,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`BTreeMap`]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":5314,"byte_end":5394,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`LinkedHashMap`]: https://docs.rs/linked-hash-map/*/linked_hash_map/struct.LinkedHashMap.html","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":5395,"byte_end":5493,"line_start":15,"line_end":15,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":5864,"byte_end":5867,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":43}],"decl_id":null,"docs":" Represents a TOML key/value type.\n","sig":null,"attributes":[{"value":"/ Represents a TOML key/value type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":5815,"byte_end":5852,"line_start":31,"line_end":31,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6135,"byte_end":6138,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Map<String, Value>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty Map.\n","sig":null,"attributes":[{"value":"/ Makes a new empty Map.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6083,"byte_end":6109,"line_start":42,"line_end":42,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6114,"byte_end":6123,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6347,"byte_end":6360,"line_start":53,"line_end":53,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Map<String, Value>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Makes a new empty Map with the given initial capacity.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"preserve_order\"))","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6219,"byte_end":6258,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ Makes a new empty Map with the given initial capacity.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6263,"byte_end":6321,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6326,"byte_end":6335,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6842,"byte_end":6847,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"clear","qualname":"<Map<String, Value>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the map, removing all values.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6776,"byte_end":6816,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6821,"byte_end":6830,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7146,"byte_end":7149,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"get","qualname":"<Map<String, Value>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&Value> where String: Borrow<Q>,\nQ: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6897,"byte_end":6959,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6964,"byte_end":6967,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6972,"byte_end":7048,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7053,"byte_end":7120,"line_start":79,"line_end":79,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7125,"byte_end":7134,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7557,"byte_end":7569,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<Map<String, Value>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where String: Borrow<Q>,\nQ: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7303,"byte_end":7370,"line_start":89,"line_end":89,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7375,"byte_end":7378,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7383,"byte_end":7459,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7464,"byte_end":7531,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7536,"byte_end":7545,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7979,"byte_end":7986,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<String, Value>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut Value> where\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7722,"byte_end":7792,"line_start":102,"line_end":102,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7797,"byte_end":7800,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7805,"byte_end":7881,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7886,"byte_end":7953,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":7958,"byte_end":7967,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8518,"byte_end":8524,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"insert","qualname":"<Map<String, Value>>::insert","value":"pub fn insert(&mut Self, String, Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8152,"byte_end":8194,"line_start":115,"line_end":115,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8199,"byte_end":8202,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8207,"byte_end":8272,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8277,"byte_end":8280,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8285,"byte_end":8360,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8365,"byte_end":8436,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8441,"byte_end":8492,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8497,"byte_end":8506,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8912,"byte_end":8918,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map<String, Value>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<Value> where\nString: Borrow<Q>, Q: Ord + Eq + Hash","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8617,"byte_end":8690,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8695,"byte_end":8725,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8730,"byte_end":8733,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but the ordering","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8738,"byte_end":8814,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ on the borrowed form *must* match the ordering on the key type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8819,"byte_end":8886,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":8891,"byte_end":8900,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":9180,"byte_end":9185,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"entry","qualname":"<Map<String, Value>>::entry","value":"pub fn entry<S>(&mut Self, S) -> Entry where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place\n manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":9078,"byte_end":9146,"line_start":141,"line_end":141,"column_start":5,"column_end":73}},{"value":"/ manipulation.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":9151,"byte_end":9168,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":9768,"byte_end":9771,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"len","qualname":"<Map<String, Value>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":9696,"byte_end":9742,"line_start":158,"line_end":158,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":9747,"byte_end":9756,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":9899,"byte_end":9907,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Map<String, Value>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":9824,"byte_end":9873,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":9878,"byte_end":9887,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10039,"byte_end":10043,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"iter","qualname":"<Map<String, Value>>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the entries of the map.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":9964,"byte_end":10013,"line_start":170,"line_end":170,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10018,"byte_end":10027,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10218,"byte_end":10226,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Map<String, Value>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable iterator over the entries of the map.\n","sig":null,"attributes":[{"value":"/ Gets a mutable iterator over the entries of the map.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10136,"byte_end":10192,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10197,"byte_end":10206,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10405,"byte_end":10409,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map<String, Value>>::keys","value":"pub fn keys(&Self) -> Keys","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the keys of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the keys of the map.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10333,"byte_end":10379,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10384,"byte_end":10393,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10576,"byte_end":10582,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"values","qualname":"<Map<String, Value>>::values","value":"pub fn values(&Self) -> Values","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the values of the map.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the values of the map.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10502,"byte_end":10550,"line_start":194,"line_end":194,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10555,"byte_end":10564,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":117},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15118,"byte_end":15124,"line_start":378,"line_end":378,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[{"value":"/ A vacant Entry.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15094,"byte_end":15113,"line_start":377,"line_end":377,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":120},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15174,"byte_end":15182,"line_start":380,"line_end":380,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[{"value":"/ An occupied Entry.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15147,"byte_end":15169,"line_start":379,"line_end":379,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":115},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15078,"byte_end":15083,"line_start":376,"line_end":376,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a> { Vacant(VacantEntry), Occupied(OccupiedEntry), }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":120}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n This enum is constructed from the [`entry`] method on [`Map`].","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":14844,"byte_end":14924,"line_start":371,"line_end":371,"column_start":1,"column_end":81}},{"value":"/ This enum is constructed from the [`entry`] method on [`Map`].","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":14925,"byte_end":14991,"line_start":372,"line_end":372,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":14992,"byte_end":14995,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ [`entry`]: struct.Map.html#method.entry","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":14996,"byte_end":15039,"line_start":374,"line_end":374,"column_start":1,"column_end":44}},{"value":"/ [`Map`]: struct.Map.html","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15040,"byte_end":15068,"line_start":375,"line_end":375,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":123},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15306,"byte_end":15317,"line_start":386,"line_end":386,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":125}],"decl_id":null,"docs":" A vacant Entry. It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A vacant Entry. It is part of the [`Entry`] enum.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15206,"byte_end":15259,"line_start":383,"line_end":383,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15260,"byte_end":15263,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15264,"byte_end":15294,"line_start":385,"line_end":385,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15463,"byte_end":15476,"line_start":393,"line_end":393,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":128}],"decl_id":null,"docs":" An occupied Entry. It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ An occupied Entry. It is part of the [`Entry`] enum.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15360,"byte_end":15416,"line_start":390,"line_end":390,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15417,"byte_end":15420,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15421,"byte_end":15451,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":16052,"byte_end":16055,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.\n","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15996,"byte_end":16040,"line_start":408,"line_end":408,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":16360,"byte_end":16369,"line_start":418,"line_end":418,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and\n returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":16211,"byte_end":16285,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ returns a mutable reference to the value in the entry.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":16290,"byte_end":16348,"line_start":417,"line_end":417,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":16748,"byte_end":16762,"line_start":428,"line_end":428,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut Value where F: FnOnce() -> Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty, and returns a mutable reference to the value in the\n entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":16568,"byte_end":16642,"line_start":425,"line_end":425,"column_start":5,"column_end":79}},{"value":"/ function if empty, and returns a mutable reference to the value in the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":16647,"byte_end":16721,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ entry.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":16726,"byte_end":16736,"line_start":427,"line_end":427,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17167,"byte_end":17170,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the VacantEntry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17035,"byte_end":17108,"line_start":440,"line_end":440,"column_start":5,"column_end":78}},{"value":"/ through the VacantEntry.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17113,"byte_end":17141,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17146,"byte_end":17155,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17360,"byte_end":17366,"line_start":450,"line_end":450,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key, and returns a\n mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key, and returns a","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17228,"byte_end":17301,"line_start":447,"line_end":447,"column_start":5,"column_end":78}},{"value":"/ mutable reference to it.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17306,"byte_end":17334,"line_start":448,"line_end":448,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17339,"byte_end":17348,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17553,"byte_end":17556,"line_start":458,"line_end":458,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &String","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17482,"byte_end":17527,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17532,"byte_end":17541,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17689,"byte_end":17692,"line_start":464,"line_end":464,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17616,"byte_end":17663,"line_start":462,"line_end":462,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17668,"byte_end":17677,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17832,"byte_end":17839,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut Value","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17751,"byte_end":17806,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17811,"byte_end":17820,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17997,"byte_end":18005,"line_start":476,"line_end":476,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to its value.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to its value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17910,"byte_end":17971,"line_start":474,"line_end":474,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17976,"byte_end":17985,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":18207,"byte_end":18213,"line_start":483,"line_end":483,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, Value) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the `OccupiedEntry`'s key, and returns\n the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the `OccupiedEntry`'s key, and returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":18075,"byte_end":18150,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ the entry's old value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":18155,"byte_end":18181,"line_start":481,"line_end":481,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":18186,"byte_end":18195,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":18387,"byte_end":18393,"line_start":489,"line_end":489,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the entry out of the map, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value of the entry out of the map, and returns it.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":18297,"byte_end":18361,"line_start":487,"line_end":487,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":18366,"byte_end":18375,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":18834,"byte_end":18838,"line_start":508,"line_end":508,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":158}],"decl_id":null,"docs":" An iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's entries.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":18779,"byte_end":18822,"line_start":507,"line_end":507,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":19532,"byte_end":19539,"line_start":533,"line_end":533,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":168}],"decl_id":null,"docs":" A mutable iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over a toml::Map's entries.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":19470,"byte_end":19520,"line_start":532,"line_end":532,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":20230,"byte_end":20238,"line_start":558,"line_end":558,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":176}],"decl_id":null,"docs":" An owning iterator over a toml::Map's entries.\n","sig":null,"attributes":[{"value":"/ An owning iterator over a toml::Map's entries.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":20168,"byte_end":20218,"line_start":557,"line_end":557,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":20644,"byte_end":20648,"line_start":572,"line_end":572,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":180}],"decl_id":null,"docs":" An iterator over a toml::Map's keys.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's keys.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":20592,"byte_end":20632,"line_start":571,"line_end":571,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":21055,"byte_end":21061,"line_start":586,"line_end":586,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":" An iterator over a toml::Map's values.\n","sig":null,"attributes":[{"value":"/ An iterator over a toml::Map's values.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":21001,"byte_end":21043,"line_start":585,"line_end":585,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::value","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":1663},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":270},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":284},{"krate":0,"index":289},{"krate":0,"index":294},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1699},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1713},{"krate":0,"index":295},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":322},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":344},{"krate":0,"index":376},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":411},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":470},{"krate":0,"index":476},{"krate":0,"index":482},{"krate":0,"index":488},{"krate":0,"index":496},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":511}],"decl_id":null,"docs":" Definition of a TOML value\n","sig":null,"attributes":[{"value":"/ Definition of a TOML value","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21345,"byte_end":21375,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1664},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21858,"byte_end":21864,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"String","qualname":"::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" Represents a TOML string\n","sig":null,"attributes":[{"value":"/ Represents a TOML string","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21825,"byte_end":21853,"line_start":23,"line_end":23,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1667},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21912,"byte_end":21919,"line_start":26,"line_end":26,"column_start":5,"column_end":12},"name":"Integer","qualname":"::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" Represents a TOML integer\n","sig":null,"attributes":[{"value":"/ Represents a TOML integer","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21878,"byte_end":21907,"line_start":25,"line_end":25,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1670},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21962,"byte_end":21967,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Float","qualname":"::value::Value::Float","value":"Value::Float(f64)","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" Represents a TOML float\n","sig":null,"attributes":[{"value":"/ Represents a TOML float","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21930,"byte_end":21957,"line_start":27,"line_end":27,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1673},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22012,"byte_end":22019,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::value::Value::Boolean","value":"Value::Boolean(bool)","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" Represents a TOML boolean\n","sig":null,"attributes":[{"value":"/ Represents a TOML boolean","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21978,"byte_end":22007,"line_start":29,"line_end":29,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1676},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22066,"byte_end":22074,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::value::Value::Datetime","value":"Value::Datetime(Datetime)","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" Represents a TOML datetime\n","sig":null,"attributes":[{"value":"/ Represents a TOML datetime","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22031,"byte_end":22061,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1679},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22122,"byte_end":22127,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::Value::Array","value":"Value::Array(Array)","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" Represents a TOML array\n","sig":null,"attributes":[{"value":"/ Represents a TOML array","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22090,"byte_end":22117,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1682},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22172,"byte_end":22177,"line_start":36,"line_end":36,"column_start":5,"column_end":10},"name":"Table","qualname":"::value::Value::Table","value":"Value::Table(Table)","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" Represents a TOML table\n","sig":null,"attributes":[{"value":"/ Represents a TOML table","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22140,"byte_end":22167,"line_start":35,"line_end":35,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1663},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21813,"byte_end":21818,"line_start":22,"line_end":22,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"pub enum Value {\n    String(String),\n    Integer(i64),\n    Float(f64),\n    Boolean(bool),\n    Datetime(Datetime),\n    Array(Array),\n    Table(Table),\n}","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":1682}],"decl_id":null,"docs":" Representation of a TOML value.\n","sig":null,"attributes":[{"value":"/ Representation of a TOML value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":21733,"byte_end":21768,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":240},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22272,"byte_end":22277,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Array","qualname":"::value::Array","value":"Vec<Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML array, payload of the `Value::Array` variant\n","sig":null,"attributes":[{"value":"/ Type representing a TOML array, payload of the `Value::Array` variant","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22189,"byte_end":22262,"line_start":39,"line_end":39,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":241},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22492,"byte_end":22497,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Table","qualname":"::value::Table","value":"Map<String, Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML table, payload of the `Value::Table` variant.\n By default it is backed by a BTreeMap, enable the `preserve_order` feature\n to use a LinkedHashMap instead.\n","sig":null,"attributes":[{"value":"/ Type representing a TOML table, payload of the `Value::Table` variant.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22293,"byte_end":22367,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ By default it is backed by a BTreeMap, enable the `preserve_order` feature","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22368,"byte_end":22446,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ to use a LinkedHashMap instead.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22447,"byte_end":22482,"line_start":44,"line_end":44,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22803,"byte_end":22811,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Value>::try_from","value":"pub fn try_from<T>(T) -> Result<Value, crate::ser::Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Convert a `T` into `toml::Value` which is an enum that can represent\n any valid TOML data.","sig":null,"attributes":[{"value":"/ Convert a `T` into `toml::Value` which is an enum that can represent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22538,"byte_end":22610,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ any valid TOML data.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22615,"byte_end":22639,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22644,"byte_end":22647,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22652,"byte_end":22730,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22735,"byte_end":22791,"line_start":52,"line_end":52,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23547,"byte_end":23555,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"try_into","qualname":"<Value>::try_into","value":"pub fn try_into<'de, T>(Self) -> Result<T, crate::de::Error> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Interpret a `toml::Value` as an instance of type `T`.","sig":null,"attributes":[{"value":"/ Interpret a `toml::Value` as an instance of type `T`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22951,"byte_end":23008,"line_start":60,"line_end":60,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23013,"byte_end":23016,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if the structure of the `Value` does not match the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23021,"byte_end":23100,"line_start":62,"line_end":62,"column_start":5,"column_end":84}},{"value":"/ structure expected by `T`, for example if `T` is a struct type but the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23105,"byte_end":23179,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ `Value` contains something other than a TOML table. It can also fail if the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23184,"byte_end":23263,"line_start":64,"line_end":64,"column_start":5,"column_end":84}},{"value":"/ structure is correct but `T`'s implementation of `Deserialize` decides that","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23268,"byte_end":23347,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ something is wrong with the data, for example required struct fields are","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23352,"byte_end":23428,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ missing from the TOML map or some number is too big to fit in the expected","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23433,"byte_end":23511,"line_start":67,"line_end":67,"column_start":5,"column_end":83}},{"value":"/ primitive type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23516,"byte_end":23535,"line_start":68,"line_end":68,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24195,"byte_end":24198,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"get","qualname":"<Value>::get","value":"pub fn get<I: Index>(&Self, I) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Index into a TOML array or map. A string index can be used to access a\n value in a map, and a usize index can be used to access an element of an\n array.","sig":null,"attributes":[{"value":"/ Index into a TOML array or map. A string index can be used to access a","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23704,"byte_end":23778,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ value in a map, and a usize index can be used to access an element of an","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23783,"byte_end":23859,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ array.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23864,"byte_end":23874,"line_start":78,"line_end":78,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23879,"byte_end":23882,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23887,"byte_end":23958,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":23963,"byte_end":24038,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24043,"byte_end":24117,"line_start":82,"line_end":82,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24122,"byte_end":24183,"line_start":83,"line_end":83,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24782,"byte_end":24789,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Value>::get_mut","value":"pub fn get_mut<I: Index>(&mut Self, I) -> Option<&mut Value>","parent":null,"children":[],"decl_id":null,"docs":" Mutably index into a TOML array or map. A string index can be used to\n access a value in a map, and a usize index can be used to access an\n element of an array.","sig":null,"attributes":[{"value":"/ Mutably index into a TOML array or map. A string index can be used to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24283,"byte_end":24356,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ access a value in a map, and a usize index can be used to access an","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24361,"byte_end":24432,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ element of an array.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24437,"byte_end":24461,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24466,"byte_end":24469,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24474,"byte_end":24545,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24550,"byte_end":24625,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24630,"byte_end":24704,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24709,"byte_end":24770,"line_start":95,"line_end":95,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24949,"byte_end":24959,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"as_integer","qualname":"<Value>::as_integer","value":"pub fn as_integer(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the integer value if it is an integer.\n","sig":null,"attributes":[{"value":"/ Extracts the integer value if it is an integer.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":24886,"byte_end":24937,"line_start":100,"line_end":100,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25147,"byte_end":25157,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Value>::is_integer","value":"pub fn is_integer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an integer.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an integer.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25092,"byte_end":25135,"line_start":108,"line_end":108,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25280,"byte_end":25288,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"as_float","qualname":"<Value>::as_float","value":"pub fn as_float(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the float value if it is a float.\n","sig":null,"attributes":[{"value":"/ Extracts the float value if it is a float.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25222,"byte_end":25268,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25471,"byte_end":25479,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Value>::is_float","value":"pub fn is_float(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a float.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a float.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25419,"byte_end":25459,"line_start":121,"line_end":121,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25604,"byte_end":25611,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Value>::as_bool","value":"pub fn as_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the boolean value if it is a boolean.\n","sig":null,"attributes":[{"value":"/ Extracts the boolean value if it is a boolean.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25542,"byte_end":25592,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25799,"byte_end":25806,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Value>::is_bool","value":"pub fn is_bool(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a boolean.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a boolean.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25745,"byte_end":25787,"line_start":134,"line_end":134,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25936,"byte_end":25942,"line_start":140,"line_end":140,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the string of this value if it is a string.\n","sig":null,"attributes":[{"value":"/ Extracts the string of this value if it is a string.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":25868,"byte_end":25924,"line_start":139,"line_end":139,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26130,"byte_end":26136,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"is_str","qualname":"<Value>::is_str","value":"pub fn is_str(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if this value is a string.\n","sig":null,"attributes":[{"value":"/ Tests if this value is a string.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26082,"byte_end":26118,"line_start":147,"line_end":147,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26437,"byte_end":26448,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"as_datetime","qualname":"<Value>::as_datetime","value":"pub fn as_datetime(&Self) -> Option<&Datetime>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the datetime value if it is a datetime.","sig":null,"attributes":[{"value":"/ Extracts the datetime value if it is a datetime.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26197,"byte_end":26249,"line_start":152,"line_end":152,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26254,"byte_end":26257,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that a parsed TOML value will only contain ISO 8601 dates. An","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26262,"byte_end":26332,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ example date is:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26337,"byte_end":26357,"line_start":155,"line_end":155,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26362,"byte_end":26365,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26370,"byte_end":26384,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/ 1979-05-27T07:32:00Z","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26389,"byte_end":26413,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26418,"byte_end":26425,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26647,"byte_end":26658,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"is_datetime","qualname":"<Value>::is_datetime","value":"pub fn is_datetime(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a datetime.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a datetime.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26592,"byte_end":26635,"line_start":167,"line_end":167,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26783,"byte_end":26791,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Value>::as_array","value":"pub fn as_array(&Self) -> Option<&Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26724,"byte_end":26771,"line_start":172,"line_end":172,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26993,"byte_end":27005,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Value>::as_array_mut","value":"pub fn as_array_mut(&mut Self) -> Option<&mut Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":26934,"byte_end":26981,"line_start":180,"line_end":180,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":27213,"byte_end":27221,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Value>::is_array","value":"pub fn is_array(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an array.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an array.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":27160,"byte_end":27201,"line_start":188,"line_end":188,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":27342,"byte_end":27350,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"as_table","qualname":"<Value>::as_table","value":"pub fn as_table(&Self) -> Option<&Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":27284,"byte_end":27330,"line_start":193,"line_end":193,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":27546,"byte_end":27558,"line_start":202,"line_end":202,"column_start":12,"column_end":24},"name":"as_table_mut","qualname":"<Value>::as_table_mut","value":"pub fn as_table_mut(&mut Self) -> Option<&mut Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":27488,"byte_end":27534,"line_start":201,"line_end":201,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":27760,"byte_end":27768,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"is_table","qualname":"<Value>::is_table","value":"pub fn is_table(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a table.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a table.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":27708,"byte_end":27748,"line_start":209,"line_end":209,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":27903,"byte_end":27912,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"same_type","qualname":"<Value>::same_type","value":"pub fn same_type(&Self, &Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this and another value have the same type.\n","sig":null,"attributes":[{"value":"/ Tests whether this and another value have the same type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":27831,"byte_end":27891,"line_start":214,"line_end":214,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":28088,"byte_end":28096,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"type_str","qualname":"<Value>::type_str","value":"pub fn type_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a human-readable representation of the type of this value.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable representation of the type of this value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":28006,"byte_end":28076,"line_start":219,"line_end":219,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":295},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30444,"byte_end":30449,"line_start":312,"line_end":312,"column_start":11,"column_end":16},"name":"Index","qualname":"::value::Index","value":"Index: Sealed","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":298}],"decl_id":null,"docs":" Types that can be used to index a `toml::Value`","sig":null,"attributes":[{"value":"/ Types that can be used to index a `toml::Value`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30187,"byte_end":30238,"line_start":305,"line_end":305,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30239,"byte_end":30242,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ Currently this is implemented for `usize` to index arrays and `str` to index","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30243,"byte_end":30323,"line_start":307,"line_end":307,"column_start":1,"column_end":81}},{"value":"/ tables.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30324,"byte_end":30335,"line_start":308,"line_end":308,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30336,"byte_end":30339,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and not intended for implementation outside of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30340,"byte_end":30415,"line_start":310,"line_end":310,"column_start":1,"column_end":76}},{"value":"/ `toml` crate.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30416,"byte_end":30433,"line_start":311,"line_end":311,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30486,"byte_end":30491,"line_start":314,"line_end":314,"column_start":8,"column_end":13},"name":"index","qualname":"::value::Index::index","value":"pub fn index<'a>(&Self, &'a Value) -> Option<&'a Value>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30567,"byte_end":30576,"line_start":316,"line_end":316,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::value::Index::index_mut","value":"pub fn index_mut<'a>(&Self, &'a mut Value) -> Option<&'a mut Value>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":300},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30784,"byte_end":30790,"line_start":322,"line_end":322,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::value::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" An implementation detail that should not be implemented, this will change in\n the future and break code otherwise.\n","sig":null,"attributes":[{"value":"/ An implementation detail that should not be implemented, this will change in","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30637,"byte_end":30717,"line_start":319,"line_end":319,"column_start":1,"column_end":81}},{"value":"/ the future and break code otherwise.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30718,"byte_end":30758,"line_start":320,"line_end":320,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1765},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":53191,"byte_end":53199,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Datetime","qualname":"::datetime::Datetime","value":"Datetime {  }","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768}],"decl_id":null,"docs":" A parsed TOML datetime value","sig":null,"attributes":[{"value":"/ A parsed TOML datetime value","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52358,"byte_end":52390,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52391,"byte_end":52394,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure is intended to represent the datetime primitive type that can","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52395,"byte_end":52475,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ be encoded into TOML documents. This type is a parsed version that contains","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52476,"byte_end":52555,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ all metadata internally.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52556,"byte_end":52584,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52585,"byte_end":52588,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently this type is intentionally conservative and only supports","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52589,"byte_end":52660,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ `to_string` as an accessor. Over time though it's intended that it'll grow","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52661,"byte_end":52739,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ more support!","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52740,"byte_end":52757,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52758,"byte_end":52761,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note that if you're using `Deserialize` to deserialize a TOML document, you","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52762,"byte_end":52841,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ can use this as a placeholder for where you're expecting a datetime to be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52842,"byte_end":52919,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ specified.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52920,"byte_end":52934,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52935,"byte_end":52938,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Also note though that while this type implements `Serialize` and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":52939,"byte_end":53007,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ `Deserialize` it's only recommended to use this type with the TOML format,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":53008,"byte_end":53086,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ otherwise encoded in other formats it may look a little odd.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":53087,"byte_end":53151,"line_start":23,"line_end":23,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1775},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":53394,"byte_end":53412,"line_start":33,"line_end":33,"column_start":12,"column_end":30},"name":"DatetimeParseError","qualname":"::datetime::DatetimeParseError","value":"DatetimeParseError {  }","parent":null,"children":[{"krate":0,"index":1776}],"decl_id":null,"docs":" Error returned from parsing a `Datetime` in the `FromStr` implementation.\n","sig":null,"attributes":[{"value":"/ Error returned from parsing a `Datetime` in the `FromStr` implementation.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":53281,"byte_end":53358,"line_start":31,"line_end":31,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":611},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":1814},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":644},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":646},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":648},{"krate":0,"index":1873},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":653},{"krate":0,"index":660},{"krate":0,"index":671},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":748},{"krate":0,"index":756},{"krate":0,"index":764},{"krate":0,"index":772},{"krate":0,"index":780},{"krate":0,"index":790},{"krate":0,"index":798},{"krate":0,"index":803},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":902},{"krate":0,"index":911},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":960},{"krate":0,"index":967},{"krate":0,"index":974},{"krate":0,"index":981},{"krate":0,"index":988},{"krate":0,"index":997}],"decl_id":null,"docs":" Serializing Rust structures into TOML.","sig":null,"attributes":[{"value":"/ Serializing Rust structures into TOML.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65008,"byte_end":65050,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65051,"byte_end":65054,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains all the Serde support for serializing Rust structures","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65055,"byte_end":65133,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ into TOML documents (as strings). Note that some top-level functions here","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65134,"byte_end":65211,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ are also provided at the top of the crate.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65212,"byte_end":65258,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65259,"byte_end":65262,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that the TOML format has a restriction that if a table itself contains","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65263,"byte_end":65342,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tables, all keys with non-table values must be emitted first. This is","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65343,"byte_end":65416,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ typically easy to ensure happens when you're defining a `struct` as you can","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65417,"byte_end":65496,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ reorder the fields manually, but when working with maps (such as `BTreeMap`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65497,"byte_end":65576,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ or `HashMap`) this can lead to serialization errors. In those situations you","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65577,"byte_end":65657,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ may use the `tables_last` function in this module like so:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65658,"byte_end":65720,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65721,"byte_end":65724,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65725,"byte_end":65736,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65737,"byte_end":65771,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65772,"byte_end":65808,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65809,"byte_end":65833,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65834,"byte_end":65855,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65856,"byte_end":65881,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65882,"byte_end":65941,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65942,"byte_end":65992,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65993,"byte_end":65998,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":65999,"byte_end":66027,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66028,"byte_end":66059,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66060,"byte_end":66078,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66079,"byte_end":66086,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":637},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66532,"byte_end":66538,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::ser::to_vec","value":"pub fn to_vec<T: ?Sized>(&T) -> Result<Vec<u8>, Error> where T: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a TOML byte vector.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a TOML byte vector.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66227,"byte_end":66288,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66289,"byte_end":66292,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66293,"byte_end":66369,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66370,"byte_end":66445,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66446,"byte_end":66524,"line_start":41,"line_end":41,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":640},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67642,"byte_end":67651,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"to_string","qualname":"::ser::to_string","value":"pub fn to_string<T: ?Sized>(&T) -> Result<String, Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a String of TOML.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66666,"byte_end":66725,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66726,"byte_end":66729,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66730,"byte_end":66806,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66807,"byte_end":66882,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66883,"byte_end":66961,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66962,"byte_end":66965,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66966,"byte_end":66980,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66981,"byte_end":66984,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66985,"byte_end":66992,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Serialize;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":66993,"byte_end":67025,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67026,"byte_end":67029,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67030,"byte_end":67054,"line_start":60,"line_end":60,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67055,"byte_end":67074,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/     database: Database,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67075,"byte_end":67102,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67103,"byte_end":67108,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67109,"byte_end":67112,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67113,"byte_end":67137,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/ struct Database {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67138,"byte_end":67159,"line_start":66,"line_end":66,"column_start":1,"column_end":22}},{"value":"/     ip: String,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67160,"byte_end":67179,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/     port: Vec<u16>,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67180,"byte_end":67203,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     connection_max: u32,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67204,"byte_end":67232,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/     enabled: bool,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67233,"byte_end":67255,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67256,"byte_end":67261,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67262,"byte_end":67265,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67266,"byte_end":67281,"line_start":73,"line_end":73,"column_start":1,"column_end":16}},{"value":"/     let config = Config {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67282,"byte_end":67311,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/         database: Database {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67312,"byte_end":67344,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/             ip: \"192.168.1.1\".to_string(),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67345,"byte_end":67391,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/             port: vec![8001, 8002, 8003],","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67392,"byte_end":67437,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/             connection_max: 5000,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67438,"byte_end":67475,"line_start":78,"line_end":78,"column_start":1,"column_end":38}},{"value":"/             enabled: false,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67476,"byte_end":67507,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/         },","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67508,"byte_end":67522,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/     };","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67523,"byte_end":67533,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67534,"byte_end":67537,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67538,"byte_end":67591,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/     println!(\"{}\", toml)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67592,"byte_end":67620,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67621,"byte_end":67626,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67627,"byte_end":67634,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68062,"byte_end":68078,"line_start":100,"line_end":100,"column_start":8,"column_end":24},"name":"to_string_pretty","qualname":"::ser::to_string_pretty","value":"pub fn to_string_pretty<T: ?Sized>(&T) -> Result<String, Error> where\nT: ser::Serialize","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a \"pretty\" String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a \"pretty\" String of TOML.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67845,"byte_end":67913,"line_start":96,"line_end":96,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67914,"byte_end":67917,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This is identical to `to_string` except the output string has a more","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67918,"byte_end":67990,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ \"pretty\" output. See `Serializer::pretty` for more details.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":67991,"byte_end":68054,"line_start":99,"line_end":99,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1815},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68612,"byte_end":68627,"line_start":117,"line_end":117,"column_start":5,"column_end":20},"name":"UnsupportedType","qualname":"::ser::Error::UnsupportedType","value":"Error::UnsupportedType","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" Indicates that a Rust type was requested to be serialized but it was not\n supported.","sig":null,"attributes":[{"value":"/ Indicates that a Rust type was requested to be serialized but it was not","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68386,"byte_end":68462,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68467,"byte_end":68481,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68486,"byte_end":68489,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Currently the TOML format does not support serializing types such as","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68494,"byte_end":68566,"line_start":115,"line_end":115,"column_start":5,"column_end":77}},{"value":"/ enums, tuples and tuple structs.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68571,"byte_end":68607,"line_start":116,"line_end":116,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1817},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68765,"byte_end":68777,"line_start":121,"line_end":121,"column_start":5,"column_end":17},"name":"KeyNotString","qualname":"::ser::Error::KeyNotString","value":"Error::KeyNotString","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" The key of all TOML maps must be strings, but serialization was\n attempted where the key of a map was not a string.\n","sig":null,"attributes":[{"value":"/ The key of all TOML maps must be strings, but serialization was","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68634,"byte_end":68701,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ attempted where the key of a map was not a string.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68706,"byte_end":68760,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1819},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68876,"byte_end":68886,"line_start":125,"line_end":125,"column_start":5,"column_end":15},"name":"KeyNewline","qualname":"::ser::Error::KeyNewline","value":"Error::KeyNewline","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" An error that we never omit but keep for backwards compatibility\n","sig":null,"attributes":[{"value":"/ An error that we never omit but keep for backwards compatibility","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68784,"byte_end":68852,"line_start":123,"line_end":123,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1821},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68993,"byte_end":69007,"line_start":129,"line_end":129,"column_start":5,"column_end":19},"name":"ArrayMixedType","qualname":"::ser::Error::ArrayMixedType","value":"Error::ArrayMixedType","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" An array had to be homogenous, but now it is allowed to be heterogenous.\n","sig":null,"attributes":[{"value":"/ An array had to be homogenous, but now it is allowed to be heterogenous.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68893,"byte_end":68969,"line_start":127,"line_end":127,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1823},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69184,"byte_end":69199,"line_start":134,"line_end":134,"column_start":5,"column_end":20},"name":"ValueAfterTable","qualname":"::ser::Error::ValueAfterTable","value":"Error::ValueAfterTable","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" All values in a TOML table must be emitted before further tables are\n emitted. If a value is emitted *after* a table then this error is\n generated.\n","sig":null,"attributes":[{"value":"/ All values in a TOML table must be emitted before further tables are","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69014,"byte_end":69086,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ emitted. If a value is emitted *after* a table then this error is","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69091,"byte_end":69160,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ generated.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69165,"byte_end":69179,"line_start":133,"line_end":133,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1825},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69245,"byte_end":69256,"line_start":137,"line_end":137,"column_start":5,"column_end":16},"name":"DateInvalid","qualname":"::ser::Error::DateInvalid","value":"Error::DateInvalid","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" A serialized date was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized date was invalid.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69206,"byte_end":69240,"line_start":136,"line_end":136,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1827},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69304,"byte_end":69317,"line_start":140,"line_end":140,"column_start":5,"column_end":18},"name":"NumberInvalid","qualname":"::ser::Error::NumberInvalid","value":"Error::NumberInvalid","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" A serialized number was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized number was invalid.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69263,"byte_end":69299,"line_start":139,"line_end":139,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1829},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69393,"byte_end":69408,"line_start":143,"line_end":143,"column_start":5,"column_end":20},"name":"UnsupportedNone","qualname":"::ser::Error::UnsupportedNone","value":"Error::UnsupportedNone","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" None was attempted to be serialized, but it's not supported.\n","sig":null,"attributes":[{"value":"/ None was attempted to be serialized, but it's not supported.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69324,"byte_end":69388,"line_start":142,"line_end":142,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1831},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69507,"byte_end":69513,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ser::Error::Custom","value":"Error::Custom(String)","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":" A custom error which could be generated when serializing a particular\n type.\n","sig":null,"attributes":[{"value":"/ A custom error which could be generated when serializing a particular","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69415,"byte_end":69488,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69493,"byte_end":69502,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1834},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69547,"byte_end":69562,"line_start":150,"line_end":150,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::ser::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":1814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1814},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68374,"byte_end":68379,"line_start":111,"line_end":111,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::Error","value":"pub enum Error {\n    UnsupportedType,\n    KeyNotString,\n    KeyNewline,\n    ArrayMixedType,\n    ValueAfterTable,\n    DateInvalid,\n    NumberInvalid,\n    UnsupportedNone,\n    Custom(String),\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1817},{"krate":0,"index":1819},{"krate":0,"index":1821},{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1827},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1834}],"decl_id":null,"docs":" Errors that can occur when serializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when serializing a type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":68275,"byte_end":68325,"line_start":109,"line_end":109,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":648},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70784,"byte_end":70794,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"decl_id":null,"docs":" Serialization implementation for TOML.","sig":null,"attributes":[{"value":"/ Serialization implementation for TOML.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70311,"byte_end":70353,"line_start":189,"line_end":189,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70354,"byte_end":70357,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ This structure implements serialization support for TOML to serialize an","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70358,"byte_end":70434,"line_start":191,"line_end":191,"column_start":1,"column_end":77}},{"value":"/ arbitrary type to TOML. Note that the TOML format does not support all","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70435,"byte_end":70509,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ datatypes in Rust, such as enums, tuples, and tuple structs. These types","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70510,"byte_end":70586,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ will generate an error when serialized.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70587,"byte_end":70630,"line_start":194,"line_end":194,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70631,"byte_end":70634,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Currently a serializer always writes its output to an in-memory `String`,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70635,"byte_end":70712,"line_start":196,"line_end":196,"column_start":1,"column_end":78}},{"value":"/ which is passed in when creating the serializer itself.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70713,"byte_end":70772,"line_start":197,"line_end":197,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71339,"byte_end":71351,"line_start":228,"line_end":228,"column_start":12,"column_end":24},"name":"SerializeSeq","qualname":"::ser::SerializeSeq","value":"SerializeSeq {  }","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":663},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71535,"byte_end":71543,"line_start":237,"line_end":237,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::ser::SerializeTable::Datetime","value":"SerializeTable::Datetime(&'b mut Serializer)","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":666},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71573,"byte_end":71578,"line_start":238,"line_end":238,"column_start":5,"column_end":10},"name":"Table","qualname":"::ser::SerializeTable::Table","value":"SerializeTable::Table { ser, key, first, table_emitted }","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":660},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71506,"byte_end":71520,"line_start":236,"line_end":236,"column_start":10,"column_end":24},"name":"SerializeTable","qualname":"::ser::SerializeTable","value":"pub enum SerializeTable<'a, 'b> {\n    Datetime(&'b mut Serializer),\n    Table {\n        ser: &'b mut Serializer,\n        key: String,\n        first: Cell<bool>,\n        table_emitted: Cell<bool>,\n    },\n}","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":666}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71951,"byte_end":71954,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"pub fn new(&'a mut String) -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new serializer which will emit TOML into the buffer provided.","sig":null,"attributes":[{"value":"/ Creates a new serializer which will emit TOML into the buffer provided.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71741,"byte_end":71816,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71821,"byte_end":71824,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The serializer can then be used to serialize a type after which the data","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71829,"byte_end":71905,"line_start":249,"line_end":249,"column_start":5,"column_end":81}},{"value":"/ will be present in `dst`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71910,"byte_end":71939,"line_start":250,"line_end":250,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72513,"byte_end":72519,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Serializer>::pretty","value":"pub fn pretty(&'a mut String) -> Serializer","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a \"pretty\" formatter","sig":null,"attributes":[{"value":"/ Instantiate a \"pretty\" formatter","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72138,"byte_end":72174,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72179,"byte_end":72182,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ By default this will use:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72187,"byte_end":72216,"line_start":261,"line_end":261,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72221,"byte_end":72224,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ - pretty strings: strings with newlines will use the `'''` syntax. See","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72229,"byte_end":72303,"line_start":263,"line_end":263,"column_start":5,"column_end":79}},{"value":"/   `Serializer::pretty_string`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72308,"byte_end":72341,"line_start":264,"line_end":264,"column_start":5,"column_end":38}},{"value":"/ - pretty arrays: each item in arrays will be on a newline, have an indentation of 4 and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72346,"byte_end":72437,"line_start":265,"line_end":265,"column_start":5,"column_end":96}},{"value":"/   have a trailing comma. See `Serializer::pretty_array`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72442,"byte_end":72501,"line_start":266,"line_end":266,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73348,"byte_end":73361,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"pretty_string","qualname":"<Serializer>::pretty_string","value":"pub fn pretty_string(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable pretty strings","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72818,"byte_end":72854,"line_start":278,"line_end":278,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72859,"byte_end":72862,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72867,"byte_end":72942,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":72947,"byte_end":73017,"line_start":281,"line_end":281,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73022,"byte_end":73025,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73030,"byte_end":73044,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73049,"byte_end":73052,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73057,"byte_end":73072,"line_start":285,"line_end":285,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73077,"byte_end":73080,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73085,"byte_end":73103,"line_start":287,"line_end":287,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73108,"byte_end":73134,"line_start":288,"line_end":288,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73139,"byte_end":73164,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73169,"byte_end":73176,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73181,"byte_end":73184,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73189,"byte_end":73207,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73212,"byte_end":73215,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73220,"byte_end":73238,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/ single = 'no newlines'","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73243,"byte_end":73269,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/ text = '''","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73274,"byte_end":73288,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73293,"byte_end":73300,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73305,"byte_end":73312,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ '''","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73317,"byte_end":73324,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73329,"byte_end":73336,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74257,"byte_end":74278,"line_start":336,"line_end":336,"column_start":12,"column_end":33},"name":"pretty_string_literal","qualname":"<Serializer>::pretty_string_literal","value":"pub fn pretty_string_literal(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable Literal strings for pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable Literal strings for pretty strings","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73582,"byte_end":73638,"line_start":310,"line_end":310,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73643,"byte_end":73646,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73651,"byte_end":73726,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73731,"byte_end":73801,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73806,"byte_end":73809,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ If disabled, literal strings will NEVER be used and strings with one or","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73814,"byte_end":73889,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ more newlines will use `\"\"\"`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73894,"byte_end":73926,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73931,"byte_end":73934,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73939,"byte_end":73953,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73958,"byte_end":73961,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73966,"byte_end":73981,"line_start":320,"line_end":320,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73986,"byte_end":73989,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":73994,"byte_end":74012,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74017,"byte_end":74043,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74048,"byte_end":74073,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74078,"byte_end":74085,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74090,"byte_end":74093,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74098,"byte_end":74116,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74121,"byte_end":74124,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74129,"byte_end":74147,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74152,"byte_end":74178,"line_start":330,"line_end":330,"column_start":5,"column_end":31}},{"value":"/ text = \"\"\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74183,"byte_end":74197,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74202,"byte_end":74209,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74214,"byte_end":74221,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ \"\"\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74226,"byte_end":74233,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74238,"byte_end":74245,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75439,"byte_end":75451,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"pretty_array","qualname":"<Serializer>::pretty_array","value":"pub fn pretty_array(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty arrays","sig":null,"attributes":[{"value":"/ Enable or Disable pretty arrays","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74740,"byte_end":74775,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74780,"byte_end":74783,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If enabled, arrays will always have each item on their own line.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74788,"byte_end":74856,"line_start":354,"line_end":354,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74861,"byte_end":74864,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Some specific features can be controlled via other builder methods:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74869,"byte_end":74940,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74945,"byte_end":74948,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ - `Serializer::pretty_array_indent`: set the indent to a value other","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":74953,"byte_end":75025,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/   than 4.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75030,"byte_end":75043,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/ - `Serializer::pretty_array_trailing_comma`: enable/disable the trailing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75048,"byte_end":75124,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/   comma on the last item.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75129,"byte_end":75158,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75163,"byte_end":75166,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75171,"byte_end":75185,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75190,"byte_end":75193,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75198,"byte_end":75213,"line_start":365,"line_end":365,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75218,"byte_end":75221,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75226,"byte_end":75244,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ array = [\"foo\", \"bar\"]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75249,"byte_end":75275,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75280,"byte_end":75287,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75292,"byte_end":75295,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75300,"byte_end":75318,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75323,"byte_end":75326,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75331,"byte_end":75349,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/ array = [","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75354,"byte_end":75367,"line_start":374,"line_end":374,"column_start":5,"column_end":18}},{"value":"/     \"foo\",","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75372,"byte_end":75386,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/     \"bar\",","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75391,"byte_end":75405,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/ ]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75410,"byte_end":75415,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75420,"byte_end":75427,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75783,"byte_end":75802,"line_start":391,"line_end":391,"column_start":12,"column_end":31},"name":"pretty_array_indent","qualname":"<Serializer>::pretty_array_indent","value":"pub fn pretty_array_indent(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the indent for pretty arrays","sig":null,"attributes":[{"value":"/ Set the indent for pretty arrays","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75670,"byte_end":75706,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75711,"byte_end":75714,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":75719,"byte_end":75771,"line_start":390,"line_end":390,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":76408,"byte_end":76435,"line_start":410,"line_end":410,"column_start":12,"column_end":39},"name":"pretty_array_trailing_comma","qualname":"<Serializer>::pretty_array_trailing_comma","value":"pub fn pretty_array_trailing_comma(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify whether to use a trailing comma when serializing pretty arrays","sig":null,"attributes":[{"value":"/ Specify whether to use a trailing comma when serializing pretty arrays","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":76257,"byte_end":76331,"line_start":407,"line_end":407,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":76336,"byte_end":76339,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":76344,"byte_end":76396,"line_start":409,"line_end":409,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":902},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111647,"byte_end":111658,"line_start":1580,"line_end":1580,"column_start":8,"column_end":19},"name":"tables_last","qualname":"::ser::tables_last","value":"pub fn tables_last<'a, I, K, V, S>(&'a I, S) -> Result<S::Ok, S::Error> where\n&'a I: IntoIterator<Item = (K, V)>, K: ser::Serialize, V: ser::Serialize,\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to serialize items in a map in an order valid with\n TOML.","sig":null,"attributes":[{"value":"/ Convenience function to serialize items in a map in an order valid with","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":110991,"byte_end":111066,"line_start":1560,"line_end":1560,"column_start":1,"column_end":76}},{"value":"/ TOML.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111067,"byte_end":111076,"line_start":1561,"line_end":1561,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111077,"byte_end":111080,"line_start":1562,"line_end":1562,"column_start":1,"column_end":4}},{"value":"/ TOML carries the restriction that keys in a table must be serialized last if","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111081,"byte_end":111161,"line_start":1563,"line_end":1563,"column_start":1,"column_end":81}},{"value":"/ their value is a table itself. This isn't always easy to guarantee, so this","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111162,"byte_end":111241,"line_start":1564,"line_end":1564,"column_start":1,"column_end":80}},{"value":"/ helper can be used like so:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111242,"byte_end":111273,"line_start":1565,"line_end":1565,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111274,"byte_end":111277,"line_start":1566,"line_end":1566,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111278,"byte_end":111289,"line_start":1567,"line_end":1567,"column_start":1,"column_end":12}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111290,"byte_end":111324,"line_start":1568,"line_end":1568,"column_start":1,"column_end":35}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111325,"byte_end":111361,"line_start":1569,"line_end":1569,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111362,"byte_end":111386,"line_start":1570,"line_end":1570,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111387,"byte_end":111408,"line_start":1571,"line_end":1571,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111409,"byte_end":111434,"line_start":1572,"line_end":1572,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111435,"byte_end":111494,"line_start":1573,"line_end":1573,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111495,"byte_end":111545,"line_start":1574,"line_end":1574,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111546,"byte_end":111551,"line_start":1575,"line_end":1575,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111552,"byte_end":111580,"line_start":1576,"line_end":1576,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111581,"byte_end":111612,"line_start":1577,"line_end":1577,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111613,"byte_end":111631,"line_start":1578,"line_end":1578,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":111632,"byte_end":111639,"line_start":1579,"line_end":1579,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1017},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":1081},{"krate":0,"index":1087},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1111},{"krate":0,"index":1117},{"krate":0,"index":1131},{"krate":0,"index":1148},{"krate":0,"index":1161},{"krate":0,"index":1175},{"krate":0,"index":1179},{"krate":0,"index":1183},{"krate":0,"index":1188},{"krate":0,"index":1195},{"krate":0,"index":1199},{"krate":0,"index":1203},{"krate":0,"index":1220},{"krate":0,"index":1225},{"krate":0,"index":1230},{"krate":0,"index":1234},{"krate":0,"index":1241},{"krate":0,"index":1249},{"krate":0,"index":1253},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1267},{"krate":0,"index":1271},{"krate":0,"index":1278},{"krate":0,"index":1282},{"krate":0,"index":1289},{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1312},{"krate":0,"index":1381},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1409},{"krate":0,"index":1415},{"krate":0,"index":2272},{"krate":0,"index":2277},{"krate":0,"index":2280},{"krate":0,"index":2306},{"krate":0,"index":1420}],"decl_id":null,"docs":" Deserializing TOML into Rust structures.","sig":null,"attributes":[{"value":"/ Deserializing TOML into Rust structures.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":118707,"byte_end":118751,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":118752,"byte_end":118755,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains all the Serde support for deserializing TOML documents","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":118756,"byte_end":118835,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ into Rust structures. Note that some top-level functions here are also","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":118836,"byte_end":118910,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ provided at the top of the crate.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":118911,"byte_end":118948,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1075},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119601,"byte_end":119611,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::from_slice","value":"pub fn from_slice<'de, T>(&'de [u8]) -> Result<T, Error> where\nT: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a byte slice into a type.","sig":null,"attributes":[{"value":"/ Deserializes a byte slice into a type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119419,"byte_end":119461,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119462,"byte_end":119465,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `bytes` as UTF-8 data and then","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119466,"byte_end":119540,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ deserialize `T` from the TOML document provided.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119541,"byte_end":119593,"line_start":31,"line_end":31,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":1078},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120523,"byte_end":120531,"line_start":75,"line_end":75,"column_start":8,"column_end":16},"name":"from_str","qualname":"::de::from_str","value":"pub fn from_str<'de, T>(&'de str) -> Result<T, Error> where T: de::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a string into a type.","sig":null,"attributes":[{"value":"/ Deserializes a string into a type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119827,"byte_end":119865,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119866,"byte_end":119869,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `s` as a TOML document and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119870,"byte_end":119940,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ deserialize `T` from the document.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119941,"byte_end":119979,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119980,"byte_end":119983,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119984,"byte_end":119998,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":119999,"byte_end":120002,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120003,"byte_end":120010,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120011,"byte_end":120045,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120046,"byte_end":120049,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120050,"byte_end":120076,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120077,"byte_end":120096,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     title: String,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120097,"byte_end":120119,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/     owner: Owner,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120120,"byte_end":120141,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120142,"byte_end":120147,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120148,"byte_end":120151,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120152,"byte_end":120178,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/ struct Owner {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120179,"byte_end":120197,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/     name: String,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120198,"byte_end":120219,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120220,"byte_end":120225,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120226,"byte_end":120229,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120230,"byte_end":120245,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"/     let config: Config = toml::from_str(r#\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120246,"byte_end":120293,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/         title = 'TOML Example'","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120294,"byte_end":120328,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120329,"byte_end":120332,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/         [owner]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120333,"byte_end":120352,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/         name = 'Lisa'","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120353,"byte_end":120378,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/     \"#).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120379,"byte_end":120400,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120401,"byte_end":120404,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(config.title, \"TOML Example\");","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120405,"byte_end":120454,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(config.owner.name, \"Lisa\");","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120455,"byte_end":120501,"line_start":72,"line_end":72,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120502,"byte_end":120507,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120508,"byte_end":120515,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1913},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120819,"byte_end":120824,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"Error","qualname":"::de::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1914}],"decl_id":null,"docs":" Errors that can occur when deserializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when deserializing a type.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":120716,"byte_end":120768,"line_start":85,"line_end":85,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1081},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":123810,"byte_end":123822,"line_start":202,"line_end":202,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086}],"decl_id":null,"docs":" Deserialization implementation for TOML.\n","sig":null,"attributes":[{"value":"/ Deserialization implementation for TOML.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":123754,"byte_end":123798,"line_start":201,"line_end":201,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":158748,"byte_end":158751,"line_start":1269,"line_end":1269,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer>::new","value":"pub fn new(&'a str) -> Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new deserializer which will be deserializing the string\n provided.\n","sig":null,"attributes":[{"value":"/ Creates a new deserializer which will be deserializing the string","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":158649,"byte_end":158718,"line_start":1267,"line_end":1267,"column_start":5,"column_end":74}},{"value":"/ provided.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":158723,"byte_end":158736,"line_start":1268,"line_end":1268,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159258,"byte_end":159261,"line_start":1282,"line_end":1282,"column_start":12,"column_end":15},"name":"end","qualname":"<Deserializer>::end","value":"pub fn end(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" The `Deserializer::end` method should be called after a value has been\n fully deserialized.  This allows the `Deserializer` to validate that the\n input stream is at the end or that it only has trailing\n whitespace/comments.\n","sig":null,"attributes":[{"value":"/ The `Deserializer::end` method should be called after a value has been","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":158998,"byte_end":159072,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ fully deserialized.  This allows the `Deserializer` to validate that the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159077,"byte_end":159153,"line_start":1279,"line_end":1279,"column_start":5,"column_end":81}},{"value":"/ input stream is at the end or that it only has trailing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159158,"byte_end":159217,"line_start":1280,"line_end":1280,"column_start":5,"column_end":64}},{"value":"/ whitespace/comments.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159222,"byte_end":159246,"line_start":1281,"line_end":1281,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159675,"byte_end":159706,"line_start":1292,"line_end":1292,"column_start":12,"column_end":43},"name":"set_require_newline_after_table","qualname":"<Deserializer>::set_require_newline_after_table","value":"pub fn set_require_newline_after_table(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Historical versions of toml-rs accidentally allowed a newline after a\n table definition, but the TOML spec requires a newline after a table\n definition header.","sig":null,"attributes":[{"value":"/ Historical versions of toml-rs accidentally allowed a newline after a","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159322,"byte_end":159395,"line_start":1286,"line_end":1286,"column_start":5,"column_end":78}},{"value":"/ table definition, but the TOML spec requires a newline after a table","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159400,"byte_end":159472,"line_start":1287,"line_end":1287,"column_start":5,"column_end":77}},{"value":"/ definition header.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159477,"byte_end":159499,"line_start":1288,"line_end":1288,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159504,"byte_end":159507,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ This option can be set to `false` (the default is `true`) to emulate","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159512,"byte_end":159584,"line_start":1290,"line_end":1290,"column_start":5,"column_end":77}},{"value":"/ this behavior for backwards compatibility with older toml-rs versions.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159589,"byte_end":159663,"line_start":1291,"line_end":1291,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":160175,"byte_end":160213,"line_start":1302,"line_end":1302,"column_start":12,"column_end":50},"name":"set_allow_duplicate_after_longer_table","qualname":"<Deserializer>::set_allow_duplicate_after_longer_table","value":"pub fn set_allow_duplicate_after_longer_table(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Historical versions of toml-rs accidentally allowed a duplicate table\n header after a longer table header was previously defined. This is\n invalid according to the TOML spec, however.","sig":null,"attributes":[{"value":"/ Historical versions of toml-rs accidentally allowed a duplicate table","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159798,"byte_end":159871,"line_start":1296,"line_end":1296,"column_start":5,"column_end":78}},{"value":"/ header after a longer table header was previously defined. This is","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159876,"byte_end":159946,"line_start":1297,"line_end":1297,"column_start":5,"column_end":75}},{"value":"/ invalid according to the TOML spec, however.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":159951,"byte_end":159999,"line_start":1298,"line_end":1298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":160004,"byte_end":160007,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ This option can be set to `true` (the default is `false`) to emulate","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":160012,"byte_end":160084,"line_start":1300,"line_end":1300,"column_start":5,"column_end":77}},{"value":"/ this behavior for backwards compatibility with older toml-rs versions.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":160089,"byte_end":160163,"line_start":1301,"line_end":1301,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":185458,"byte_end":185466,"line_start":2029,"line_end":2029,"column_start":12,"column_end":20},"name":"line_col","qualname":"<Error>::line_col","value":"pub fn line_col(&Self) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Produces a (line, column) pair of the position of the error if available","sig":null,"attributes":[{"value":"/ Produces a (line, column) pair of the position of the error if available","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":185329,"byte_end":185405,"line_start":2026,"line_end":2026,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":185410,"byte_end":185413,"line_start":2027,"line_end":2027,"column_start":5,"column_end":8}},{"value":"/ All indexes are 0-based.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":185418,"byte_end":185446,"line_start":2028,"line_end":2028,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2309},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":192957,"byte_end":192961,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Span","qualname":"::tokens::Span","value":"Span { start, end }","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311}],"decl_id":null,"docs":" A span, designating a range of bytes where a token is located.\n","sig":null,"attributes":[{"value":"/ A span, designating a range of bytes where a token is located.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":192834,"byte_end":192900,"line_start":9,"line_end":9,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2310},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":193004,"byte_end":193009,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"start","qualname":"::tokens::Span::start","value":"usize","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":" The start of the range.\n","sig":null,"attributes":[{"value":"/ The start of the range.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":192968,"byte_end":192995,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2311},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":193068,"byte_end":193071,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"end","qualname":"::tokens::Span::end","value":"usize","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":" The end of the range (exclusive).\n","sig":null,"attributes":[{"value":"/ The end of the range (exclusive).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":193022,"byte_end":193059,"line_start":14,"line_end":14,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1503},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1523},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs","byte_start":235796,"byte_end":235807,"line_start":413,"line_end":413,"column_start":8,"column_end":19},"name":"insert_toml","qualname":"::macros::insert_toml","value":"pub fn insert_toml(&mut Value, &[&str], Value)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1524},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs","byte_start":236007,"byte_end":236016,"line_start":419,"line_end":419,"column_start":8,"column_end":17},"name":"push_toml","qualname":"::macros::push_toml","value":"pub fn push_toml(&mut Value, &[&str])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2444},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238249,"byte_end":238256,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Spanned","qualname":"::spanned::Spanned","value":"Spanned {  }","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448}],"decl_id":null,"docs":" A spanned value, indicating the range at which it is defined in the source.","sig":null,"attributes":[{"value":"/ A spanned value, indicating the range at which it is defined in the source.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237676,"byte_end":237755,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237756,"byte_end":237759,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237760,"byte_end":237767,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use serde_derive::Deserialize;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237768,"byte_end":237802,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ use toml::Spanned;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237803,"byte_end":237825,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237826,"byte_end":237829,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237830,"byte_end":237856,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/ struct Value {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237857,"byte_end":237875,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/     s: Spanned<String>,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237876,"byte_end":237903,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237904,"byte_end":237909,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237910,"byte_end":237913,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237914,"byte_end":237929,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     let t = \"s = \\\"value\\\"\\n\";","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237930,"byte_end":237964,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237965,"byte_end":237968,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     let u: Value = toml::from_str(t).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":237969,"byte_end":238019,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238020,"byte_end":238023,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(u.s.start(), 4);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238024,"byte_end":238059,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/     assert_eq!(u.s.end(), 11);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238060,"byte_end":238094,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/     assert_eq!(u.s.get_ref(), \"value\");","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238095,"byte_end":238138,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(u.s.into_inner(), String::from(\"value\"));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238139,"byte_end":238199,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238200,"byte_end":238205,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238206,"byte_end":238213,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238493,"byte_end":238498,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"start","qualname":"<Spanned<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the start of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the start of the span of the contained value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238425,"byte_end":238481,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238613,"byte_end":238616,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"end","qualname":"<Spanned<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the end of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the end of the span of the contained value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238547,"byte_end":238601,"line_start":50,"line_end":50,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238715,"byte_end":238719,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"span","qualname":"<Spanned<T>>::span","value":"pub fn span(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Get the span of the contained value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238663,"byte_end":238703,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238864,"byte_end":238874,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Spanned<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the spanned value and returns the contained value.\n","sig":null,"attributes":[{"value":"/ Consumes the spanned value and returns the contained value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238789,"byte_end":238852,"line_start":60,"line_end":60,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238977,"byte_end":238984,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Spanned<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238918,"byte_end":238965,"line_start":65,"line_end":65,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239098,"byte_end":239105,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Spanned<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239031,"byte_end":239086,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6058,"byte_end":6061,"line_start":41,"line_end":41,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10696,"byte_end":10699,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10839,"byte_end":10842,"line_start":212,"line_end":212,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10991,"byte_end":10994,"line_start":221,"line_end":221,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":11240,"byte_end":11243,"line_start":230,"line_end":230,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":11565,"byte_end":11568,"line_start":244,"line_end":244,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":11783,"byte_end":11786,"line_start":254,"line_end":254,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":11965,"byte_end":11968,"line_start":261,"line_end":261,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":12391,"byte_end":12394,"line_start":277,"line_end":277,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":12605,"byte_end":12612,"line_start":285,"line_end":285,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":13502,"byte_end":13505,"line_start":319,"line_end":319,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":13739,"byte_end":13742,"line_start":330,"line_end":330,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15980,"byte_end":15985,"line_start":407,"line_end":407,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17013,"byte_end":17024,"line_start":439,"line_end":439,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17458,"byte_end":17471,"line_start":455,"line_end":455,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":19949,"byte_end":19952,"line_start":546,"line_end":546,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22526,"byte_end":22531,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":28492,"byte_end":28497,"line_start":233,"line_end":233,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":28676,"byte_end":28681,"line_start":244,"line_end":244,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":28848,"byte_end":28853,"line_start":253,"line_end":253,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":28993,"byte_end":28998,"line_start":260,"line_end":260,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":29175,"byte_end":29180,"line_start":266,"line_end":266,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":29421,"byte_end":29426,"line_start":274,"line_end":274,"column_start":75,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30858,"byte_end":30864,"line_start":325,"line_end":325,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":31711,"byte_end":31717,"line_start":360,"line_end":360,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":32228,"byte_end":32233,"line_start":383,"line_end":383,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":32440,"byte_end":32445,"line_start":391,"line_end":391,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":32596,"byte_end":32601,"line_start":398,"line_end":398,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":34336,"byte_end":34341,"line_start":445,"line_end":445,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":34529,"byte_end":34541,"line_start":452,"line_end":452,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":37774,"byte_end":37779,"line_start":544,"line_end":544,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":1715},{"krate":0,"index":1717},{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1741},{"krate":0,"index":1743},{"krate":0,"index":1745},{"krate":0,"index":1747},{"krate":0,"index":1749},{"krate":0,"index":1751},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":1757},{"krate":0,"index":1759},{"krate":0,"index":1761},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":40488,"byte_end":40503,"line_start":632,"line_end":632,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":40657,"byte_end":40672,"line_start":640,"line_end":640,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":41317,"byte_end":41332,"line_start":666,"line_end":666,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":41519,"byte_end":41534,"line_start":675,"line_end":675,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":42661,"byte_end":42666,"line_start":713,"line_end":713,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":42808,"byte_end":42818,"line_start":723,"line_end":723,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":48152,"byte_end":48164,"line_start":913,"line_end":913,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":48557,"byte_end":48569,"line_start":930,"line_end":930,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":48965,"byte_end":48977,"line_start":946,"line_end":946,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":49372,"byte_end":49384,"line_start":962,"line_end":962,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":49770,"byte_end":49782,"line_start":978,"line_end":978,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":50791,"byte_end":50803,"line_start":1014,"line_end":1014,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":51364,"byte_end":51379,"line_start":1039,"line_end":1039,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":51625,"byte_end":51640,"line_start":1050,"line_end":1050,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":54179,"byte_end":54187,"line_start":67,"line_end":67,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":54319,"byte_end":54327,"line_start":73,"line_end":73,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":54799,"byte_end":54803,"line_start":91,"line_end":91,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":54972,"byte_end":54976,"line_start":97,"line_end":97,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":55321,"byte_end":55327,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":55584,"byte_end":55592,"line_start":117,"line_end":117,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":61644,"byte_end":61652,"line_start":308,"line_end":308,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":61983,"byte_end":61991,"line_start":321,"line_end":321,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":62185,"byte_end":62200,"line_start":328,"line_end":328,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":63042,"byte_end":63053,"line_start":355,"line_end":355,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":63247,"byte_end":63259,"line_start":362,"line_end":362,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":63969,"byte_end":63987,"line_start":390,"line_end":390,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":64183,"byte_end":64190,"line_start":397,"line_end":397,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":64828,"byte_end":64846,"line_start":419,"line_end":419,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":64985,"byte_end":65003,"line_start":425,"line_end":425,"column_start":23,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69721,"byte_end":69734,"line_start":160,"line_end":160,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70029,"byte_end":70043,"line_start":176,"line_end":176,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71720,"byte_end":71730,"line_start":246,"line_end":246,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":94637,"byte_end":94649,"line_start":970,"line_end":970,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":96146,"byte_end":96158,"line_start":1019,"line_end":1019,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":96529,"byte_end":96541,"line_start":1035,"line_end":1035,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":96909,"byte_end":96921,"line_start":1051,"line_end":1051,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":97281,"byte_end":97295,"line_start":1067,"line_end":1067,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":99229,"byte_end":99243,"line_start":1132,"line_end":1132,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":100971,"byte_end":100985,"line_start":1190,"line_end":1190,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":105463,"byte_end":105478,"line_start":1361,"line_end":1361,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":110021,"byte_end":110026,"line_start":1529,"line_end":1529,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":110799,"byte_end":110804,"line_start":1546,"line_end":1546,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":110829,"byte_end":110834,"line_start":1548,"line_end":1548,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":112460,"byte_end":112470,"line_start":1610,"line_end":1610,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":112588,"byte_end":112598,"line_start":1616,"line_end":1616,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":116692,"byte_end":116702,"line_start":1771,"line_end":1771,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":117008,"byte_end":117018,"line_start":1784,"line_end":1784,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":117331,"byte_end":117341,"line_start":1797,"line_end":1797,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":117651,"byte_end":117661,"line_start":1810,"line_end":1810,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":117963,"byte_end":117973,"line_start":1823,"line_end":1823,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":118396,"byte_end":118406,"line_start":1840,"line_end":1840,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":131012,"byte_end":131022,"line_start":400,"line_end":400,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":136303,"byte_end":136313,"line_start":542,"line_end":542,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":138247,"byte_end":138257,"line_start":602,"line_end":602,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":2066},{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2092},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2106},{"krate":0,"index":2108},{"krate":0,"index":2110},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":141377,"byte_end":141392,"line_start":712,"line_end":712,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":141726,"byte_end":141741,"line_start":724,"line_end":724,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":141892,"byte_end":141907,"line_start":732,"line_end":732,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1193},{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":143254,"byte_end":143271,"line_start":779,"line_end":779,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":143593,"byte_end":143610,"line_start":793,"line_end":793,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1210},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2184},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2214}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":149293,"byte_end":149303,"line_start":964,"line_end":964,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":149672,"byte_end":149677,"line_start":980,"line_end":980,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":150057,"byte_end":150076,"line_start":995,"line_end":995,"column_start":37,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":151423,"byte_end":151443,"line_start":1040,"line_end":1040,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":152042,"byte_end":152067,"line_start":1064,"line_end":1064,"column_start":37,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2220},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":2264},{"krate":0,"index":2266},{"krate":0,"index":2268},{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":152639,"byte_end":152662,"line_start":1086,"line_end":1086,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":153211,"byte_end":153234,"line_start":1105,"line_end":1105,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":153952,"byte_end":153975,"line_start":1129,"line_end":1129,"column_start":35,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":154911,"byte_end":154932,"line_start":1160,"line_end":1160,"column_start":38,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":158626,"byte_end":158638,"line_start":1266,"line_end":1266,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1335},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":185317,"byte_end":185322,"line_start":2025,"line_end":2025,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":186931,"byte_end":186936,"line_start":2086,"line_end":2086,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":187078,"byte_end":187083,"line_start":2092,"line_end":2092,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":190555,"byte_end":190560,"line_start":2175,"line_end":2175,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":190584,"byte_end":190589,"line_start":2177,"line_end":2177,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":190986,"byte_end":190992,"line_start":2199,"line_end":2199,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":192277,"byte_end":192278,"line_start":2250,"line_end":2250,"column_start":10,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":194298,"byte_end":194307,"line_start":84,"line_end":84,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":208076,"byte_end":208084,"line_start":488,"line_end":488,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":208509,"byte_end":208520,"line_start":505,"line_end":505,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":209367,"byte_end":209372,"line_start":538,"line_end":538,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238408,"byte_end":238415,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239183,"byte_end":239190,"line_start":76,"line_end":76,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239298,"byte_end":239305,"line_start":82,"line_end":82,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239416,"byte_end":239423,"line_start":88,"line_end":88,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239454,"byte_end":239461,"line_start":90,"line_end":90,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239590,"byte_end":239597,"line_start":96,"line_end":96,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239740,"byte_end":239747,"line_start":102,"line_end":102,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239883,"byte_end":239890,"line_start":108,"line_end":108,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":240160,"byte_end":240174,"line_start":118,"line_end":118,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":241536,"byte_end":241543,"line_start":161,"line_end":161,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4305,"byte_end":4308,"line_start":156,"line_end":156,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4318,"byte_end":4323,"line_start":157,"line_end":157,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4395,"byte_end":4398,"line_start":162,"line_end":162,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":611}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4497,"byte_end":4499,"line_start":165,"line_end":165,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1017}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs","byte_start":4612,"byte_end":4618,"line_start":171,"line_end":171,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1503}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":6058,"byte_end":6061,"line_start":41,"line_end":41,"column_start":6,"column_end":9},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10696,"byte_end":10699,"line_start":203,"line_end":203,"column_start":18,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10839,"byte_end":10842,"line_start":212,"line_end":212,"column_start":16,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":10991,"byte_end":10994,"line_start":221,"line_end":221,"column_start":20,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":11240,"byte_end":11243,"line_start":230,"line_end":230,"column_start":43,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":11565,"byte_end":11568,"line_start":244,"line_end":244,"column_start":46,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":11783,"byte_end":11786,"line_start":254,"line_end":254,"column_start":16,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":11965,"byte_end":11968,"line_start":261,"line_end":261,"column_start":25,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":40},"to":{"krate":20,"index":1983}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":12391,"byte_end":12394,"line_start":277,"line_end":277,"column_start":36,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":40},"to":{"krate":20,"index":1447}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":12605,"byte_end":12612,"line_start":285,"line_end":285,"column_start":40,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":98},"to":{"krate":20,"index":1531}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":13502,"byte_end":13505,"line_start":319,"line_end":319,"column_start":40,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":7375}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":13739,"byte_end":13742,"line_start":330,"line_end":330,"column_start":34,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":7388}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":15980,"byte_end":15985,"line_start":407,"line_end":407,"column_start":10,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17013,"byte_end":17024,"line_start":439,"line_end":439,"column_start":10,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":17458,"byte_end":17471,"line_start":455,"line_end":455,"column_start":10,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs","byte_start":19949,"byte_end":19952,"line_start":546,"line_end":546,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":22526,"byte_end":22531,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":28492,"byte_end":28497,"line_start":233,"line_end":233,"column_start":27,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":28676,"byte_end":28681,"line_start":244,"line_end":244,"column_start":30,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":28848,"byte_end":28853,"line_start":253,"line_end":253,"column_start":28,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":28993,"byte_end":28998,"line_start":260,"line_end":260,"column_start":39,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":29175,"byte_end":29180,"line_start":266,"line_end":266,"column_start":64,"column_end":69},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":29421,"byte_end":29426,"line_start":274,"line_end":274,"column_start":75,"column_end":80},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30451,"byte_end":30457,"line_start":312,"line_end":312,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":300},"to":{"krate":0,"index":295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":30858,"byte_end":30864,"line_start":325,"line_end":325,"column_start":17,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":31711,"byte_end":31717,"line_start":360,"line_end":360,"column_start":16,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":32228,"byte_end":32233,"line_start":383,"line_end":383,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":32440,"byte_end":32445,"line_start":391,"line_end":391,"column_start":18,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":11819}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":32596,"byte_end":32601,"line_start":398,"line_end":398,"column_start":25,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1663},"to":{"krate":20,"index":1983}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":34336,"byte_end":34341,"line_start":445,"line_end":445,"column_start":36,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1663},"to":{"krate":20,"index":1447}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":34529,"byte_end":34541,"line_start":452,"line_end":452,"column_start":40,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":348},"to":{"krate":20,"index":1531}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":37774,"byte_end":37779,"line_start":544,"line_end":544,"column_start":37,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1663},"to":{"krate":20,"index":1469}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":40488,"byte_end":40503,"line_start":632,"line_end":632,"column_start":6,"column_end":21},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":40657,"byte_end":40672,"line_start":640,"line_end":640,"column_start":34,"column_end":49},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":387},"to":{"krate":20,"index":1587}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":41317,"byte_end":41332,"line_start":666,"line_end":666,"column_start":6,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":41519,"byte_end":41534,"line_start":675,"line_end":675,"column_start":34,"column_end":49},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":397},"to":{"krate":20,"index":1605}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":42661,"byte_end":42666,"line_start":713,"line_end":713,"column_start":59,"column_end":64},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1663},"to":{"krate":20,"index":1663}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":42808,"byte_end":42818,"line_start":723,"line_end":723,"column_start":26,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":415},"to":{"krate":20,"index":1986}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":48152,"byte_end":48164,"line_start":913,"line_end":913,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":459},"to":{"krate":20,"index":2036}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":48557,"byte_end":48569,"line_start":930,"line_end":930,"column_start":30,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":459},"to":{"krate":20,"index":2042}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":48965,"byte_end":48977,"line_start":946,"line_end":946,"column_start":36,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":459},"to":{"krate":20,"index":2048}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":49372,"byte_end":49384,"line_start":962,"line_end":962,"column_start":37,"column_end":49},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":459},"to":{"krate":20,"index":2054}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":49770,"byte_end":49782,"line_start":978,"line_end":978,"column_start":28,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":461},"to":{"krate":20,"index":2060}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":50791,"byte_end":50803,"line_start":1014,"line_end":1014,"column_start":31,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":461},"to":{"krate":20,"index":2071}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":51364,"byte_end":51379,"line_start":1039,"line_end":1039,"column_start":44,"column_end":59},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":502},"to":{"krate":20,"index":1458}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs","byte_start":51625,"byte_end":51640,"line_start":1050,"line_end":1050,"column_start":36,"column_end":51},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":502},"to":{"krate":20,"index":1531}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":54179,"byte_end":54187,"line_start":67,"line_end":67,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1765},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":54319,"byte_end":54327,"line_start":73,"line_end":73,"column_start":23,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1765},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":54799,"byte_end":54803,"line_start":91,"line_end":91,"column_start":23,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1781},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":54972,"byte_end":54976,"line_start":97,"line_end":97,"column_start":23,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1791},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":55321,"byte_end":55327,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1802},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":55584,"byte_end":55592,"line_start":117,"line_end":117,"column_start":18,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1765},"to":{"krate":2,"index":11819}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":61644,"byte_end":61652,"line_start":308,"line_end":308,"column_start":25,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1765},"to":{"krate":20,"index":1983}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":61983,"byte_end":61991,"line_start":321,"line_end":321,"column_start":36,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1765},"to":{"krate":20,"index":1447}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":62185,"byte_end":62200,"line_start":328,"line_end":328,"column_start":40,"column_end":55},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":570},"to":{"krate":20,"index":1531}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":63042,"byte_end":63053,"line_start":355,"line_end":355,"column_start":36,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":580},"to":{"krate":20,"index":1447}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":63247,"byte_end":63259,"line_start":362,"line_end":362,"column_start":40,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":586},"to":{"krate":20,"index":1531}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":63969,"byte_end":63987,"line_start":390,"line_end":390,"column_start":36,"column_end":54},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":594},"to":{"krate":20,"index":1447}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":64183,"byte_end":64190,"line_start":397,"line_end":397,"column_start":40,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":600},"to":{"krate":20,"index":1531}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":64828,"byte_end":64846,"line_start":419,"line_end":419,"column_start":23,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1775},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs","byte_start":64985,"byte_end":65003,"line_start":425,"line_end":425,"column_start":23,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1775},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":69721,"byte_end":69734,"line_start":160,"line_end":160,"column_start":6,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":70029,"byte_end":70043,"line_start":176,"line_end":176,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":71720,"byte_end":71730,"line_start":246,"line_end":246,"column_start":10,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":94637,"byte_end":94649,"line_start":970,"line_end":970,"column_start":36,"column_end":48},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":653},"to":{"krate":20,"index":2036}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":96146,"byte_end":96158,"line_start":1019,"line_end":1019,"column_start":38,"column_end":50},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":653},"to":{"krate":20,"index":2042}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":96529,"byte_end":96541,"line_start":1035,"line_end":1035,"column_start":45,"column_end":57},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":653},"to":{"krate":20,"index":2054}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":96909,"byte_end":96921,"line_start":1051,"line_end":1051,"column_start":44,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":653},"to":{"krate":20,"index":2048}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":97281,"byte_end":97295,"line_start":1067,"line_end":1067,"column_start":36,"column_end":50},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":660},"to":{"krate":20,"index":2060}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":99229,"byte_end":99243,"line_start":1132,"line_end":1132,"column_start":39,"column_end":53},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":660},"to":{"krate":20,"index":2071}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":100971,"byte_end":100985,"line_start":1190,"line_end":1190,"column_start":34,"column_end":48},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":798},"to":{"krate":20,"index":1986}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":105463,"byte_end":105478,"line_start":1361,"line_end":1361,"column_start":26,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":846},"to":{"krate":20,"index":1986}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":110021,"byte_end":110026,"line_start":1529,"line_end":1529,"column_start":23,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1814},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":110799,"byte_end":110804,"line_start":1546,"line_end":1546,"column_start":23,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1814},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":110829,"byte_end":110834,"line_start":1548,"line_end":1548,"column_start":21,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1814},"to":{"krate":20,"index":9147}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":112460,"byte_end":112470,"line_start":1610,"line_end":1610,"column_start":9,"column_end":19},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":112588,"byte_end":112598,"line_start":1616,"line_end":1616,"column_start":41,"column_end":51},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":911},"to":{"krate":20,"index":1986}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":116692,"byte_end":116702,"line_start":1771,"line_end":1771,"column_start":43,"column_end":53},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":911},"to":{"krate":20,"index":2036}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":117008,"byte_end":117018,"line_start":1784,"line_end":1784,"column_start":45,"column_end":55},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":911},"to":{"krate":20,"index":2042}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":117331,"byte_end":117341,"line_start":1797,"line_end":1797,"column_start":52,"column_end":62},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":911},"to":{"krate":20,"index":2054}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":117651,"byte_end":117661,"line_start":1810,"line_end":1810,"column_start":51,"column_end":61},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":911},"to":{"krate":20,"index":2048}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":117963,"byte_end":117973,"line_start":1823,"line_end":1823,"column_start":43,"column_end":53},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":911},"to":{"krate":20,"index":2060}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs","byte_start":118396,"byte_end":118406,"line_start":1840,"line_end":1840,"column_start":46,"column_end":56},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":911},"to":{"krate":20,"index":2071}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":131012,"byte_end":131022,"line_start":400,"line_end":400,"column_start":38,"column_end":48},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1117},"to":{"krate":20,"index":1605}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":136303,"byte_end":136313,"line_start":542,"line_end":542,"column_start":38,"column_end":48},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1117},"to":{"krate":20,"index":1587}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":138247,"byte_end":138257,"line_start":602,"line_end":602,"column_start":41,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1117},"to":{"krate":20,"index":1469}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":141377,"byte_end":141392,"line_start":712,"line_end":712,"column_start":10,"column_end":25},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":141726,"byte_end":141741,"line_start":724,"line_end":724,"column_start":50,"column_end":65},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1175},"to":{"krate":20,"index":1663}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":141892,"byte_end":141907,"line_start":732,"line_end":732,"column_start":37,"column_end":52},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1175},"to":{"krate":20,"index":1469}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":143254,"byte_end":143271,"line_start":779,"line_end":779,"column_start":10,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":143593,"byte_end":143610,"line_start":793,"line_end":793,"column_start":37,"column_end":54},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1195},"to":{"krate":20,"index":1469}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":149293,"byte_end":149303,"line_start":964,"line_end":964,"column_start":52,"column_end":62},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1117},"to":{"krate":20,"index":1663}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":149672,"byte_end":149677,"line_start":980,"line_end":980,"column_start":48,"column_end":53},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2272},"to":{"krate":20,"index":1663}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":150057,"byte_end":150076,"line_start":995,"line_end":995,"column_start":37,"column_end":56},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1234},"to":{"krate":20,"index":1605}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":151423,"byte_end":151443,"line_start":1040,"line_end":1040,"column_start":34,"column_end":54},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1249},"to":{"krate":20,"index":1605}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":152042,"byte_end":152067,"line_start":1064,"line_end":1064,"column_start":37,"column_end":62},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1260},"to":{"krate":20,"index":1469}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":152639,"byte_end":152662,"line_start":1086,"line_end":1086,"column_start":35,"column_end":58},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1267},"to":{"krate":20,"index":1643}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":153211,"byte_end":153234,"line_start":1105,"line_end":1105,"column_start":34,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1278},"to":{"krate":20,"index":1605}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":153952,"byte_end":153975,"line_start":1129,"line_end":1129,"column_start":35,"column_end":58},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1278},"to":{"krate":20,"index":1643}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":154911,"byte_end":154932,"line_start":1160,"line_end":1160,"column_start":38,"column_end":59},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1296},"to":{"krate":20,"index":1651}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":158626,"byte_end":158638,"line_start":1266,"line_end":1266,"column_start":10,"column_end":22},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":185317,"byte_end":185322,"line_start":2025,"line_end":2025,"column_start":6,"column_end":11},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":186931,"byte_end":186936,"line_start":2086,"line_end":2086,"column_start":45,"column_end":50},"kind":{"Impl":{"id":105}},"from":{"krate":1,"index":3793},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":187078,"byte_end":187083,"line_start":2092,"line_end":2092,"column_start":23,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1913},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":190555,"byte_end":190560,"line_start":2175,"line_end":2175,"column_start":23,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1913},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":190584,"byte_end":190589,"line_start":2177,"line_end":2177,"column_start":20,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1913},"to":{"krate":20,"index":8533}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":190986,"byte_end":190992,"line_start":2199,"line_end":2199,"column_start":10,"column_end":16},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs","byte_start":192277,"byte_end":192278,"line_start":2250,"line_end":2250,"column_start":10,"column_end":11},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":194298,"byte_end":194307,"line_start":84,"line_end":84,"column_start":10,"column_end":19},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":208076,"byte_end":208084,"line_start":488,"line_end":488,"column_start":23,"column_end":31},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2429},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":208509,"byte_end":208520,"line_start":505,"line_end":505,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs","byte_start":209367,"byte_end":209372,"line_start":538,"line_end":538,"column_start":10,"column_end":15},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":238408,"byte_end":238415,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239183,"byte_end":239190,"line_start":76,"line_end":76,"column_start":22,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":2588}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239298,"byte_end":239305,"line_start":82,"line_end":82,"column_start":34,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239416,"byte_end":239423,"line_start":88,"line_end":88,"column_start":20,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239454,"byte_end":239461,"line_start":90,"line_end":90,"column_start":24,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":9499}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239590,"byte_end":239597,"line_start":96,"line_end":96,"column_start":36,"column_end":43},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":2687}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239740,"byte_end":239747,"line_start":102,"line_end":102,"column_start":22,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":2676}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":239883,"byte_end":239890,"line_start":108,"line_end":108,"column_start":39,"column_end":46},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2444},"to":{"krate":20,"index":1447}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":240160,"byte_end":240174,"line_start":118,"line_end":118,"column_start":43,"column_end":57},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1585},"to":{"krate":20,"index":1531}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs","byte_start":241536,"byte_end":241543,"line_start":161,"line_end":161,"column_start":44,"column_end":51},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2444},"to":{"krate":20,"index":1983}}]}