{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1","program":"/home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","near_vm_logic","--edition=2018","/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=957746ed6c004c24","-C","extra-filename=-957746ed6c004c24","--out-dir","/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps","-L","dependency=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps","--extern","base64=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libbase64-9831c71dbdcf3467.rmeta","--extern","borsh=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libborsh-271d126b0b7fda82.rmeta","--extern","bs58=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libbs58-4db8f3d1f4404b7b.rmeta","--extern","byteorder=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libbyteorder-cd21f5e36b15e5b7.rmeta","--extern","near_primitives_core=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libnear_primitives_core-aefef53ea44cb2e1.rmeta","--extern","near_runtime_utils=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libnear_runtime_utils-61602078ba4e9a0a.rmeta","--extern","near_vm_errors=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libnear_vm_errors-9fb33973aef5574e.rmeta","--extern","serde=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libserde-c283e464a596c364.rmeta","--extern","sha2=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libsha2-00a7517df25156fb.rmeta","--extern","sha3=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libsha3-7876d5d8d21e0bb7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libnear_vm_logic-957746ed6c004c24.rmeta"},"prelude":{"crate_id":{"name":"near_vm_logic","disambiguator":[14945239100075570486,0]},"crate_root":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src","external_crates":[{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","num":20,"id":{"name":"borsh","disambiguator":[7418328353424981298,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","num":21,"id":{"name":"borsh_derive","disambiguator":[15271665484770352383,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","num":22,"id":{"name":"serde","disambiguator":[3626181005066864604,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","num":23,"id":{"name":"serde_derive","disambiguator":[5152474591291482032,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":24,"id":{"name":"near_primitives_core","disambiguator":[14304953027777560721,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":25,"id":{"name":"num_rational","disambiguator":[12871334609351644814,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":26,"id":{"name":"num_bigint","disambiguator":[16033313683654004807,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":27,"id":{"name":"num_integer","disambiguator":[17118563521200516293,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":28,"id":{"name":"num_traits","disambiguator":[9716346113309821185,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":29,"id":{"name":"sha2","disambiguator":[15535044512310490262,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":30,"id":{"name":"block_buffer","disambiguator":[6157260581331881497,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":31,"id":{"name":"generic_array","disambiguator":[7553880118856603761,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":32,"id":{"name":"typenum","disambiguator":[6437414461440595901,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":33,"id":{"name":"digest","disambiguator":[16784564804086948651,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":34,"id":{"name":"opaque_debug","disambiguator":[4632081131003828659,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":35,"id":{"name":"cfg_if","disambiguator":[12658019734257768631,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":36,"id":{"name":"cpuid_bool","disambiguator":[10686017339326167509,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","num":37,"id":{"name":"derive_more","disambiguator":[16971801982476414535,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","num":38,"id":{"name":"bs58","disambiguator":[6892947182555612257,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","num":39,"id":{"name":"base64","disambiguator":[17870330020090693751,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","num":40,"id":{"name":"near_vm_errors","disambiguator":[1301919644537389883,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","num":41,"id":{"name":"near_rpc_error_macro","disambiguator":[5318285392906550094,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","num":42,"id":{"name":"hex","disambiguator":[4951051339835929601,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":43,"id":{"name":"byteorder","disambiguator":[16815882823831449055,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":44,"id":{"name":"near_runtime_utils","disambiguator":[11909712736570350715,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":45,"id":{"name":"lazy_static","disambiguator":[15792255557407054376,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":46,"id":{"name":"regex","disambiguator":[6509193019527501204,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":47,"id":{"name":"aho_corasick","disambiguator":[15936545839706366837,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":48,"id":{"name":"memchr","disambiguator":[11395771671854979032,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":49,"id":{"name":"regex_syntax","disambiguator":[15359609912100392661,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":50,"id":{"name":"sha3","disambiguator":[9310206306817775914,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":51,"id":{"name":"keccak","disambiguator":[17944557952183766415,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":52,"id":{"name":"block_buffer","disambiguator":[10814501301506102322,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":53,"id":{"name":"block_padding","disambiguator":[18360399355784790755,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":54,"id":{"name":"byte_tools","disambiguator":[17240760257863812546,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":55,"id":{"name":"generic_array","disambiguator":[14778342420472204279,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":56,"id":{"name":"opaque_debug","disambiguator":[11743500005183634493,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","num":57,"id":{"name":"digest","disambiguator":[17916773371266537377,0]}}],"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":0,"byte_end":604,"line_start":1,"line_end":23,"column_start":1,"column_end":44}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":571},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":143366,"byte_end":143375,"line_start":137,"line_end":137,"column_start":37,"column_end":46},"alias_span":null,"name":"serialize","value":"","parent":{"krate":0,"index":576}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":143913,"byte_end":143914,"line_start":3,"line_end":3,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":593}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":219,"byte_end":225,"line_start":13,"line_end":13,"column_start":17,"column_end":23},"alias_span":null,"name":"VMKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":731},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":244,"byte_end":253,"line_start":14,"line_end":14,"column_start":18,"column_end":27},"alias_span":null,"name":"VMContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":278,"byte_end":286,"line_start":15,"line_end":15,"column_start":24,"column_end":32},"alias_span":null,"name":"External","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":288,"byte_end":298,"line_start":15,"line_end":15,"column_start":34,"column_end":44},"alias_span":null,"name":"MemoryLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":300,"byte_end":308,"line_start":15,"line_end":15,"column_start":46,"column_end":54},"alias_span":null,"name":"ValuePtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":327,"byte_end":334,"line_start":16,"line_end":16,"column_start":17,"column_end":24},"alias_span":null,"name":"VMLogic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1007},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":336,"byte_end":345,"line_start":16,"line_end":16,"column_start":26,"column_end":35},"alias_span":null,"name":"VMOutcome","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":386,"byte_end":387,"line_start":17,"line_end":17,"column_start":39,"column_end":40},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":222},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":419,"byte_end":426,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"alias_span":null,"name":"profile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":533},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":465,"byte_end":480,"line_start":19,"line_end":19,"column_start":38,"column_end":53},"alias_span":null,"name":"ProtocolVersion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":40,"index":840},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":507,"byte_end":516,"line_start":20,"line_end":20,"column_start":26,"column_end":35},"alias_span":null,"name":"HostError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":40,"index":1985},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":518,"byte_end":530,"line_start":20,"line_end":20,"column_start":37,"column_end":49},"alias_span":null,"name":"VMLogicError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1920},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":548,"byte_end":558,"line_start":21,"line_end":21,"column_start":16,"column_end":26},"alias_span":null,"name":"ReturnData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":582,"byte_end":603,"line_start":23,"line_end":23,"column_start":22,"column_end":43},"alias_span":null,"name":"with_ext_cost_counter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":0,"byte_end":604,"line_start":1,"line_end":23,"column_start":1,"column_end":44},"name":"","qualname":"::","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":23},{"krate":0,"index":53},{"krate":0,"index":105},{"krate":0,"index":173},{"krate":0,"index":393},{"krate":0,"index":474},{"krate":0,"index":593},{"krate":0,"index":608},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":665},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","byte_start":854,"byte_end":861,"line_start":8,"line_end":8,"column_start":5,"column_end":12},"name":"Wasmer0","qualname":"::config::VMKind::Wasmer0","value":"VMKind::Wasmer0","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Wasmer 0.17.x VM.\n","sig":null,"attributes":[{"value":"/ Wasmer 0.17.x VM.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","byte_start":828,"byte_end":849,"line_start":7,"line_end":7,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":667},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","byte_start":888,"byte_end":896,"line_start":10,"line_end":10,"column_start":5,"column_end":13},"name":"Wasmtime","qualname":"::config::VMKind::Wasmtime","value":"VMKind::Wasmtime","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Wasmtime VM.\n","sig":null,"attributes":[{"value":"/ Wasmtime VM.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","byte_start":867,"byte_end":883,"line_start":9,"line_end":9,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":669},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","byte_start":925,"byte_end":932,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Wasmer1","qualname":"::config::VMKind::Wasmer1","value":"VMKind::Wasmer1","parent":{"krate":0,"index":664},"children":[],"decl_id":null,"docs":" Wasmer 1.x VM.\n","sig":null,"attributes":[{"value":"/ Wasmer 1.x VM.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","byte_start":902,"byte_end":920,"line_start":11,"line_end":11,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":664},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","byte_start":815,"byte_end":821,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"VMKind","qualname":"::config::VMKind","value":"pub enum VMKind { Wasmer0, Wasmtime, Wasmer1, }","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":669}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2353,"byte_end":2362,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"VMContext","qualname":"::context::VMContext","value":"VMContext { current_account_id, signer_account_id, signer_account_pk, predecessor_account_id, input, block_index, block_timestamp, epoch_height, account_balance, account_locked_balance, storage_usage, attached_deposit, prepaid_gas, random_seed, is_view, output_data_receivers }","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":983},{"krate":0,"index":734},{"krate":0,"index":984},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":738},{"krate":0,"index":987},{"krate":0,"index":739},{"krate":0,"index":988},{"krate":0,"index":740},{"krate":0,"index":741}],"decl_id":null,"docs":" Context for the contract execution.\n","sig":null,"attributes":[{"value":"/ Context for the contract execution.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2302,"byte_end":2341,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":732},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2443,"byte_end":2461,"line_start":11,"line_end":11,"column_start":9,"column_end":27},"name":"current_account_id","qualname":"::context::VMContext::current_account_id","value":"std::string::String","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The account id of the current contract that we are executing.\n","sig":null,"attributes":[{"value":"/ The account id of the current contract that we are executing.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2369,"byte_end":2434,"line_start":10,"line_end":10,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":733},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2581,"byte_end":2598,"line_start":14,"line_end":14,"column_start":9,"column_end":26},"name":"signer_account_id","qualname":"::context::VMContext::signer_account_id","value":"std::string::String","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The account id of that signed the original transaction that led to this\n execution.\n","sig":null,"attributes":[{"value":"/ The account id of that signed the original transaction that led to this","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2478,"byte_end":2553,"line_start":12,"line_end":12,"column_start":5,"column_end":80}},{"value":"/ execution.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2558,"byte_end":2572,"line_start":13,"line_end":13,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":983},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2783,"byte_end":2800,"line_start":18,"line_end":18,"column_start":9,"column_end":26},"name":"signer_account_pk","qualname":"::context::VMContext::signer_account_pk","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The public key that was used to sign the original transaction that led to\n this execution.\n","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_base58\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2615,"byte_end":2668,"line_start":15,"line_end":15,"column_start":5,"column_end":58}},{"value":"/ The public key that was used to sign the original transaction that led to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2673,"byte_end":2750,"line_start":16,"line_end":16,"column_start":5,"column_end":82}},{"value":"/ this execution.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2755,"byte_end":2774,"line_start":17,"line_end":17,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":734},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3078,"byte_end":3100,"line_start":23,"line_end":23,"column_start":9,"column_end":31},"name":"predecessor_account_id","qualname":"::context::VMContext::predecessor_account_id","value":"std::string::String","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" If this execution is the result of cross-contract call or a callback then\n predecessor is the account that called it.\n If this execution is the result of direct execution of transaction then it\n is equal to `signer_account_id`.\n","sig":null,"attributes":[{"value":"/ If this execution is the result of cross-contract call or a callback then","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2817,"byte_end":2894,"line_start":19,"line_end":19,"column_start":5,"column_end":82}},{"value":"/ predecessor is the account that called it.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2899,"byte_end":2945,"line_start":20,"line_end":20,"column_start":5,"column_end":51}},{"value":"/ If this execution is the result of direct execution of transaction then it","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":2950,"byte_end":3028,"line_start":21,"line_end":21,"column_start":5,"column_end":83}},{"value":"/ is equal to `signer_account_id`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3033,"byte_end":3069,"line_start":22,"line_end":22,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":984},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3301,"byte_end":3306,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"name":"input","qualname":"::context::VMContext::input","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The input to the contract call.\n Encoded as base64 string to be able to pass input in borsh binary format.\n","sig":null,"attributes":[{"value":"/ The input to the contract call.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3117,"byte_end":3152,"line_start":24,"line_end":24,"column_start":5,"column_end":40}},{"value":"/ Encoded as base64 string to be able to pass input in borsh binary format.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3157,"byte_end":3234,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"serde(with = \"crate::serde_with::bytes_as_base64\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3239,"byte_end":3292,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":735},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3402,"byte_end":3413,"line_start":30,"line_end":30,"column_start":9,"column_end":20},"name":"block_index","qualname":"::context::VMContext::block_index","value":"u64","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The current block height.\n","sig":null,"attributes":[{"value":"/ The current block height.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3321,"byte_end":3350,"line_start":28,"line_end":28,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":736},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3540,"byte_end":3555,"line_start":32,"line_end":32,"column_start":9,"column_end":24},"name":"block_timestamp","qualname":"::context::VMContext::block_timestamp","value":"u64","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).\n","sig":null,"attributes":[{"value":"/ The current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3432,"byte_end":3531,"line_start":31,"line_end":31,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":737},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3604,"byte_end":3616,"line_start":34,"line_end":34,"column_start":9,"column_end":21},"name":"epoch_height","qualname":"::context::VMContext::epoch_height","value":"u64","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The current epoch height.\n","sig":null,"attributes":[{"value":"/ The current epoch height.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3566,"byte_end":3595,"line_start":33,"line_end":33,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":985},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3838,"byte_end":3853,"line_start":39,"line_end":39,"column_start":9,"column_end":24},"name":"account_balance","qualname":"::context::VMContext::account_balance","value":"u128","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The balance attached to the given account. Excludes the `attached_deposit` that was\n attached to the transaction.\n","sig":null,"attributes":[{"value":"/ The balance attached to the given account. Excludes the `attached_deposit` that was","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3636,"byte_end":3723,"line_start":36,"line_end":36,"column_start":5,"column_end":92}},{"value":"/ attached to the transaction.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3728,"byte_end":3760,"line_start":37,"line_end":37,"column_start":5,"column_end":37}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3765,"byte_end":3829,"line_start":38,"line_end":38,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":986},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4000,"byte_end":4022,"line_start":42,"line_end":42,"column_start":9,"column_end":31},"name":"account_locked_balance","qualname":"::context::VMContext::account_locked_balance","value":"u128","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The balance of locked tokens on the given account.\n","sig":null,"attributes":[{"value":"/ The balance of locked tokens on the given account.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3868,"byte_end":3922,"line_start":40,"line_end":40,"column_start":5,"column_end":59}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":3927,"byte_end":3991,"line_start":41,"line_end":41,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":738},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4107,"byte_end":4120,"line_start":44,"line_end":44,"column_start":9,"column_end":22},"name":"storage_usage","qualname":"::context::VMContext::storage_usage","value":"u64","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The account's storage usage before the contract execution\n","sig":null,"attributes":[{"value":"/ The account's storage usage before the contract execution","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4037,"byte_end":4098,"line_start":43,"line_end":43,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":987},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4344,"byte_end":4360,"line_start":48,"line_end":48,"column_start":9,"column_end":25},"name":"attached_deposit","qualname":"::context::VMContext::attached_deposit","value":"u128","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The balance that was attached to the call that will be immediately deposited before the\n contract execution starts.\n","sig":null,"attributes":[{"value":"/ The balance that was attached to the call that will be immediately deposited before the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4140,"byte_end":4231,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ contract execution starts.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4236,"byte_end":4266,"line_start":46,"line_end":46,"column_start":5,"column_end":35}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4271,"byte_end":4335,"line_start":47,"line_end":47,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":739},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4458,"byte_end":4469,"line_start":50,"line_end":50,"column_start":9,"column_end":20},"name":"prepaid_gas","qualname":"::context::VMContext::prepaid_gas","value":"u64","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" The gas attached to the call that can be used to pay for the gas fees.\n","sig":null,"attributes":[{"value":"/ The gas attached to the call that can be used to pay for the gas fees.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4375,"byte_end":4449,"line_start":49,"line_end":49,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":988},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4578,"byte_end":4589,"line_start":53,"line_end":53,"column_start":9,"column_end":20},"name":"random_seed","qualname":"::context::VMContext::random_seed","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" Initial seed for randomness\n","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_base58\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4480,"byte_end":4533,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/ Initial seed for randomness","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4538,"byte_end":4569,"line_start":52,"line_end":52,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":740},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4667,"byte_end":4674,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"name":"is_view","qualname":"::context::VMContext::is_view","value":"bool","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" Whether the execution should not charge any costs.\n","sig":null,"attributes":[{"value":"/ Whether the execution should not charge any costs.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4604,"byte_end":4658,"line_start":54,"line_end":54,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":741},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4864,"byte_end":4885,"line_start":58,"line_end":58,"column_start":9,"column_end":30},"name":"output_data_receivers","qualname":"::context::VMContext::output_data_receivers","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":731},"children":[],"decl_id":null,"docs":" How many `DataReceipt`'s should receive this execution result. This should be empty if\n this function call is a part of a batch and it is not the last action.\n","sig":null,"attributes":[{"value":"/ How many `DataReceipt`'s should receive this execution result. This should be empty if","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4686,"byte_end":4776,"line_start":56,"line_end":56,"column_start":5,"column_end":95}},{"value":"/ this function call is a part of a batch and it is not the last action.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/context.rs","byte_start":4781,"byte_end":4855,"line_start":57,"line_end":57,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5163,"byte_end":5173,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"MemoryLike","qualname":"::dependencies::MemoryLike","value":"MemoryLike","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" An abstraction over the memory of the smart contract.\n","sig":null,"attributes":[{"value":"/ An abstraction over the memory of the smart contract.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5095,"byte_end":5152,"line_start":7,"line_end":7,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5275,"byte_end":5286,"line_start":10,"line_end":10,"column_start":8,"column_end":19},"name":"fits_memory","qualname":"::dependencies::MemoryLike::fits_memory","value":"pub fn fits_memory(&Self, u64, u64) -> bool","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Returns whether the memory interval is completely inside the smart contract memory.\n","sig":null,"attributes":[{"value":"/ Returns whether the memory interval is completely inside the smart contract memory.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5180,"byte_end":5267,"line_start":9,"line_end":9,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5488,"byte_end":5499,"line_start":17,"line_end":17,"column_start":8,"column_end":19},"name":"read_memory","qualname":"::dependencies::MemoryLike::read_memory","value":"pub fn read_memory(&Self, u64, &mut [u8])","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Reads the content of the given memory interval.","sig":null,"attributes":[{"value":"/ Reads the content of the given memory interval.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5331,"byte_end":5382,"line_start":12,"line_end":12,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5387,"byte_end":5390,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5395,"byte_end":5407,"line_start":14,"line_end":14,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5412,"byte_end":5415,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ If memory interval is outside the smart contract memory.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5420,"byte_end":5480,"line_start":16,"line_end":16,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5683,"byte_end":5697,"line_start":24,"line_end":24,"column_start":8,"column_end":22},"name":"read_memory_u8","qualname":"::dependencies::MemoryLike::read_memory_u8","value":"pub fn read_memory_u8(&Self, u64) -> u8","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Reads a single byte from the memory.","sig":null,"attributes":[{"value":"/ Reads a single byte from the memory.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5545,"byte_end":5585,"line_start":19,"line_end":19,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5590,"byte_end":5593,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5598,"byte_end":5610,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5615,"byte_end":5618,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If pointer is outside the smart contract memory.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5623,"byte_end":5675,"line_start":23,"line_end":23,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5897,"byte_end":5909,"line_start":31,"line_end":31,"column_start":8,"column_end":20},"name":"write_memory","qualname":"::dependencies::MemoryLike::write_memory","value":"pub fn write_memory(&mut Self, u64, &[u8])","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Writes the buffer into the smart contract memory.","sig":null,"attributes":[{"value":"/ Writes the buffer into the smart contract memory.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5730,"byte_end":5783,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5788,"byte_end":5791,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5796,"byte_end":5808,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5813,"byte_end":5816,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If `offset + buffer.len()` is outside the smart contract memory.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":5821,"byte_end":5889,"line_start":30,"line_end":30,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":81},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6227,"byte_end":6235,"line_start":39,"line_end":39,"column_start":11,"column_end":19},"name":"ValuePtr","qualname":"::dependencies::ValuePtr","value":"ValuePtr","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"decl_id":null,"docs":" Logical pointer to a value in storage.\n Allows getting value length before getting the value itself. This is needed so that runtime\n can charge gas before accessing a potentially large value.\n","sig":null,"attributes":[{"value":"/ Logical pointer to a value in storage.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6015,"byte_end":6057,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/ Allows getting value length before getting the value itself. This is needed so that runtime","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6058,"byte_end":6153,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"/ can charge gas before accessing a potentially large value.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6154,"byte_end":6216,"line_start":38,"line_end":38,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6285,"byte_end":6288,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"len","qualname":"::dependencies::ValuePtr::len","value":"pub fn len(&Self) -> u32","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" Returns the length of the value\n","sig":null,"attributes":[{"value":"/ Returns the length of the value","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6242,"byte_end":6277,"line_start":40,"line_end":40,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6488,"byte_end":6493,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"deref","qualname":"::dependencies::ValuePtr::deref","value":"pub fn deref(&Self) -> Result<Vec<u8>>","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":" Dereferences the pointer.\n Takes a box because currently runtime code uses dynamic dispatch.\n # Errors\n StorageError if reading from storage fails\n","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6309,"byte_end":6338,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ Takes a box because currently runtime code uses dynamic dispatch.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6343,"byte_end":6412,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6417,"byte_end":6429,"line_start":45,"line_end":45,"column_start":5,"column_end":17}},{"value":"/ StorageError if reading from storage fails","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6434,"byte_end":6480,"line_start":46,"line_end":46,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6593,"byte_end":6601,"line_start":51,"line_end":51,"column_start":11,"column_end":19},"name":"External","qualname":"::dependencies::External","value":"External","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" An external blockchain interface for the Runtime logic\n","sig":null,"attributes":[{"value":"/ An external blockchain interface for the Runtime logic","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6524,"byte_end":6582,"line_start":50,"line_end":50,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7337,"byte_end":7348,"line_start":73,"line_end":73,"column_start":8,"column_end":19},"name":"storage_set","qualname":"::dependencies::External::storage_set","value":"pub fn storage_set(&mut Self, &[u8], &[u8]) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Write to the storage trie of the current account","sig":null,"attributes":[{"value":"/ Write to the storage trie of the current account","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6608,"byte_end":6660,"line_start":52,"line_end":52,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6665,"byte_end":6668,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6673,"byte_end":6688,"line_start":54,"line_end":54,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6693,"byte_end":6696,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ * `key` - a key for a new value","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6701,"byte_end":6736,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/ * `value` - a new value to be set","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6741,"byte_end":6778,"line_start":57,"line_end":57,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6783,"byte_end":6786,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6791,"byte_end":6803,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6808,"byte_end":6811,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This function could return HostErrorOrStorageError::StorageError on underlying DB failure","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6816,"byte_end":6909,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6914,"byte_end":6917,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6922,"byte_end":6935,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6940,"byte_end":6947,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":6952,"byte_end":7014,"line_start":65,"line_end":65,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7019,"byte_end":7053,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7058,"byte_end":7061,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7066,"byte_end":7113,"line_start":68,"line_end":68,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(external.storage_set(b\"key42\", b\"value1337\"), Ok(()));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7118,"byte_end":7187,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/ // Should return an old value if the key exists","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7192,"byte_end":7243,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(external.storage_set(b\"key42\", b\"new_value\"), Ok(()));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7248,"byte_end":7317,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7322,"byte_end":7329,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8241,"byte_end":8252,"line_start":96,"line_end":96,"column_start":8,"column_end":19},"name":"storage_get","qualname":"::dependencies::External::storage_get","value":"pub fn storage_get<'a>(&'a Self, &[u8])\n-> Result<Option<Box<dyn ValuePtr + 'a>>>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Reads from the storage trie of the current account","sig":null,"attributes":[{"value":"/ Reads from the storage trie of the current account","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7406,"byte_end":7460,"line_start":75,"line_end":75,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7465,"byte_end":7468,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7473,"byte_end":7488,"line_start":77,"line_end":77,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7493,"byte_end":7496,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ * `key` - a key to read","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7501,"byte_end":7528,"line_start":79,"line_end":79,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7533,"byte_end":7536,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7541,"byte_end":7553,"line_start":81,"line_end":81,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7558,"byte_end":7561,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This function could return HostErrorOrStorageError::StorageError on underlying DB failure","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7566,"byte_end":7659,"line_start":83,"line_end":83,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7664,"byte_end":7667,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7672,"byte_end":7685,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7690,"byte_end":7697,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::{MockedExternal};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7702,"byte_end":7766,"line_start":87,"line_end":87,"column_start":5,"column_end":69}},{"value":"/ # use near_vm_logic::{External, ValuePtr};","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7771,"byte_end":7817,"line_start":88,"line_end":88,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7822,"byte_end":7825,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7830,"byte_end":7877,"line_start":90,"line_end":90,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7882,"byte_end":7940,"line_start":91,"line_end":91,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(external.storage_get(b\"key42\").unwrap().map(|ptr| ptr.deref().unwrap()), Some(b\"value1337\".to_vec()));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":7945,"byte_end":8062,"line_start":92,"line_end":92,"column_start":5,"column_end":122}},{"value":"/ // Returns Ok(None) if there is no value for a key","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8067,"byte_end":8121,"line_start":93,"line_end":93,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(external.storage_get(b\"no_key\").unwrap().map(|ptr| ptr.deref().unwrap()), None);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8126,"byte_end":8221,"line_start":94,"line_end":94,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8226,"byte_end":8233,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9060,"byte_end":9074,"line_start":120,"line_end":120,"column_start":8,"column_end":22},"name":"storage_remove","qualname":"::dependencies::External::storage_remove","value":"pub fn storage_remove(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Removes the key from the storage","sig":null,"attributes":[{"value":"/ Removes the key from the storage","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8327,"byte_end":8363,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8368,"byte_end":8371,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8376,"byte_end":8391,"line_start":100,"line_end":100,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8396,"byte_end":8399,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `key` - a key to remove","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8404,"byte_end":8433,"line_start":102,"line_end":102,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8438,"byte_end":8441,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8446,"byte_end":8458,"line_start":104,"line_end":104,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8463,"byte_end":8466,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function could return HostErrorOrStorageError::StorageError on underlying DB failure","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8471,"byte_end":8564,"line_start":106,"line_end":106,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8569,"byte_end":8572,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8577,"byte_end":8590,"line_start":108,"line_end":108,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8595,"byte_end":8602,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8607,"byte_end":8669,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8674,"byte_end":8708,"line_start":111,"line_end":111,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8713,"byte_end":8716,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8721,"byte_end":8768,"line_start":113,"line_end":113,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8773,"byte_end":8831,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"/ // Returns Ok if exists","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8836,"byte_end":8863,"line_start":115,"line_end":115,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(external.storage_remove(b\"key42\"), Ok(()));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8868,"byte_end":8926,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/ // Returns Ok if there was no value","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8931,"byte_end":8970,"line_start":117,"line_end":117,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(external.storage_remove(b\"no_value_key\"), Ok(()));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":8975,"byte_end":9040,"line_start":118,"line_end":118,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9045,"byte_end":9052,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9934,"byte_end":9956,"line_start":144,"line_end":144,"column_start":8,"column_end":30},"name":"storage_remove_subtree","qualname":"::dependencies::External::storage_remove_subtree","value":"pub fn storage_remove_subtree(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Removes all keys under given suffix in the storage.","sig":null,"attributes":[{"value":"/ Removes all keys under given suffix in the storage.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9118,"byte_end":9173,"line_start":122,"line_end":122,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9178,"byte_end":9181,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9186,"byte_end":9201,"line_start":124,"line_end":124,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9206,"byte_end":9209,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ * `prefix` - a prefix for all keys to remove","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9214,"byte_end":9262,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9267,"byte_end":9270,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9275,"byte_end":9287,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9292,"byte_end":9295,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This function could return HostErrorOrStorageError::StorageError on underlying DB failure","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9300,"byte_end":9393,"line_start":130,"line_end":130,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9398,"byte_end":9401,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9406,"byte_end":9419,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9424,"byte_end":9431,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9436,"byte_end":9498,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9503,"byte_end":9537,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9542,"byte_end":9545,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9550,"byte_end":9597,"line_start":137,"line_end":137,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key1\", b\"value1337\").unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9602,"byte_end":9659,"line_start":138,"line_end":138,"column_start":5,"column_end":62}},{"value":"/ external.storage_set(b\"key2\", b\"value1337\").unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9664,"byte_end":9721,"line_start":139,"line_end":139,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(external.storage_remove_subtree(b\"key\"), Ok(()));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9726,"byte_end":9790,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/ assert!(!external.storage_has_key(b\"key1\").unwrap());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9795,"byte_end":9852,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/ assert!(!external.storage_has_key(b\"key2\").unwrap());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9857,"byte_end":9914,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":9919,"byte_end":9926,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10794,"byte_end":10809,"line_start":168,"line_end":168,"column_start":8,"column_end":23},"name":"storage_has_key","qualname":"::dependencies::External::storage_has_key","value":"pub fn storage_has_key(&mut Self, &[u8]) -> Result<bool>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Check whether key exists. Returns Ok(true) if key exists or Ok(false) otherwise","sig":null,"attributes":[{"value":"/ Check whether key exists. Returns Ok(true) if key exists or Ok(false) otherwise","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10003,"byte_end":10086,"line_start":146,"line_end":146,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10091,"byte_end":10094,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10099,"byte_end":10114,"line_start":148,"line_end":148,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10119,"byte_end":10122,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ * `key` - a key to check","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10127,"byte_end":10155,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10160,"byte_end":10163,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10168,"byte_end":10180,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10185,"byte_end":10188,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This function could return HostErrorOrStorageError::StorageError on underlying DB failure","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10193,"byte_end":10286,"line_start":154,"line_end":154,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10291,"byte_end":10294,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10299,"byte_end":10312,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10317,"byte_end":10324,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10329,"byte_end":10391,"line_start":158,"line_end":158,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10396,"byte_end":10430,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10435,"byte_end":10438,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10443,"byte_end":10490,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10495,"byte_end":10553,"line_start":162,"line_end":162,"column_start":5,"column_end":63}},{"value":"/ // Returns value if exists","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10558,"byte_end":10588,"line_start":163,"line_end":163,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(external.storage_has_key(b\"key42\"), Ok(true));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10593,"byte_end":10654,"line_start":164,"line_end":164,"column_start":5,"column_end":66}},{"value":"/ // Returns None if there was no value","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10659,"byte_end":10700,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(external.storage_has_key(b\"no_value_key\"), Ok(false));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10705,"byte_end":10774,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10779,"byte_end":10786,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11560,"byte_end":11574,"line_start":189,"line_end":189,"column_start":8,"column_end":22},"name":"create_receipt","qualname":"::dependencies::External::create_receipt","value":"pub fn create_receipt(&mut Self, Vec<ReceiptIndex>, AccountId)\n-> Result<ReceiptIndex>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Creates a receipt which will be executed after `receipt_indices`","sig":null,"attributes":[{"value":"/ Creates a receipt which will be executed after `receipt_indices`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10855,"byte_end":10923,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10928,"byte_end":10931,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10936,"byte_end":10951,"line_start":172,"line_end":172,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10956,"byte_end":10959,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * `receipt_indices` - a list of receipt indices the new receipt is depend on","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":10964,"byte_end":11044,"line_start":174,"line_end":174,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11049,"byte_end":11052,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11057,"byte_end":11070,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11075,"byte_end":11082,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11087,"byte_end":11149,"line_start":178,"line_end":178,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11154,"byte_end":11188,"line_start":179,"line_end":179,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11193,"byte_end":11196,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11201,"byte_end":11248,"line_start":181,"line_end":181,"column_start":5,"column_end":52}},{"value":"/ let receipt_index_one = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11253,"byte_end":11348,"line_start":182,"line_end":182,"column_start":5,"column_end":100}},{"value":"/ let receipt_index_two = external.create_receipt(vec![receipt_index_one], \"bob.near\".to_owned());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11353,"byte_end":11453,"line_start":183,"line_end":183,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11458,"byte_end":11461,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11466,"byte_end":11473,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11478,"byte_end":11481,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11486,"byte_end":11498,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/ Panics if one of `receipt_indices` is missing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11503,"byte_end":11552,"line_start":188,"line_end":188,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12349,"byte_end":12377,"line_start":214,"line_end":214,"column_start":8,"column_end":36},"name":"append_action_create_account","qualname":"::dependencies::External::append_action_create_account","value":"pub fn append_action_create_account(&mut Self, ReceiptIndex) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Attaches an `Action::CreateAccount` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `Action::CreateAccount` action to an existing receipt","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11707,"byte_end":11776,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11781,"byte_end":11784,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11789,"byte_end":11804,"line_start":197,"line_end":197,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11809,"byte_end":11812,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11817,"byte_end":11880,"line_start":199,"line_end":199,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11885,"byte_end":11888,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11893,"byte_end":11906,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11911,"byte_end":11918,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11923,"byte_end":11985,"line_start":203,"line_end":203,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":11990,"byte_end":12024,"line_start":204,"line_end":204,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12029,"byte_end":12032,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12037,"byte_end":12084,"line_start":206,"line_end":206,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12089,"byte_end":12180,"line_start":207,"line_end":207,"column_start":5,"column_end":96}},{"value":"/ external.append_action_create_account(receipt_index).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12185,"byte_end":12251,"line_start":208,"line_end":208,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12256,"byte_end":12259,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12264,"byte_end":12271,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12276,"byte_end":12279,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12284,"byte_end":12296,"line_start":212,"line_end":212,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12301,"byte_end":12341,"line_start":213,"line_end":213,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13157,"byte_end":13186,"line_start":236,"line_end":236,"column_start":8,"column_end":37},"name":"append_action_deploy_contract","qualname":"::dependencies::External::append_action_deploy_contract","value":"pub fn append_action_deploy_contract(&mut Self, ReceiptIndex, Vec<u8>)\n-> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Attaches an `Action::DeployContract` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `Action::DeployContract` action to an existing receipt","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12438,"byte_end":12508,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12513,"byte_end":12516,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12521,"byte_end":12536,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12541,"byte_end":12544,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12549,"byte_end":12612,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/ * `code` - a Wasm code to attach","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12617,"byte_end":12653,"line_start":221,"line_end":221,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12658,"byte_end":12661,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12666,"byte_end":12679,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12684,"byte_end":12691,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12696,"byte_end":12758,"line_start":225,"line_end":225,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12763,"byte_end":12797,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12802,"byte_end":12805,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12810,"byte_end":12857,"line_start":228,"line_end":228,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12862,"byte_end":12953,"line_start":229,"line_end":229,"column_start":5,"column_end":96}},{"value":"/ external.append_action_deploy_contract(receipt_index, b\"some valid Wasm code\".to_vec()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":12958,"byte_end":13059,"line_start":230,"line_end":230,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13064,"byte_end":13067,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13072,"byte_end":13079,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13084,"byte_end":13087,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13092,"byte_end":13104,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13109,"byte_end":13149,"line_start":235,"line_end":235,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14339,"byte_end":14366,"line_start":271,"line_end":271,"column_start":8,"column_end":35},"name":"append_action_function_call","qualname":"::dependencies::External::append_action_function_call","value":"pub fn append_action_function_call(&mut Self, ReceiptIndex, Vec<u8>, Vec<u8>,\n                                   Balance, Gas) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Attaches an `Action::FunctionCall` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `Action::FunctionCall` action to an existing receipt","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13293,"byte_end":13361,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13366,"byte_end":13369,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13374,"byte_end":13389,"line_start":244,"line_end":244,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13394,"byte_end":13397,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13402,"byte_end":13465,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ * `method_name` - a name of the contract method to call","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13470,"byte_end":13529,"line_start":247,"line_end":247,"column_start":5,"column_end":64}},{"value":"/ * `arguments` - a Wasm code to attach","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13534,"byte_end":13575,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/ * `attached_deposit` - amount of tokens to transfer with the call","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13580,"byte_end":13649,"line_start":249,"line_end":249,"column_start":5,"column_end":74}},{"value":"/ * `prepaid_gas` - amount of prepaid gas to attach to the call","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13654,"byte_end":13719,"line_start":250,"line_end":250,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13724,"byte_end":13727,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13732,"byte_end":13745,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13750,"byte_end":13757,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13762,"byte_end":13824,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13829,"byte_end":13863,"line_start":255,"line_end":255,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13868,"byte_end":13871,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13876,"byte_end":13923,"line_start":257,"line_end":257,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":13928,"byte_end":14019,"line_start":258,"line_end":258,"column_start":5,"column_end":96}},{"value":"/ external.append_action_function_call(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14024,"byte_end":14065,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/     receipt_index,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14070,"byte_end":14092,"line_start":260,"line_end":260,"column_start":5,"column_end":27}},{"value":"/     b\"method_name\".to_vec(),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14097,"byte_end":14129,"line_start":261,"line_end":261,"column_start":5,"column_end":37}},{"value":"/     b\"{serialised: arguments}\".to_vec(),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14134,"byte_end":14178,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/     100000u128,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14183,"byte_end":14202,"line_start":263,"line_end":263,"column_start":5,"column_end":24}},{"value":"/     100u64","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14207,"byte_end":14221,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/ ).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14226,"byte_end":14241,"line_start":265,"line_end":265,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14246,"byte_end":14249,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14254,"byte_end":14261,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14266,"byte_end":14269,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14274,"byte_end":14286,"line_start":269,"line_end":269,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14291,"byte_end":14331,"line_start":270,"line_end":270,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15295,"byte_end":15317,"line_start":303,"line_end":303,"column_start":8,"column_end":30},"name":"append_action_transfer","qualname":"::dependencies::External::append_action_transfer","value":"pub fn append_action_transfer(&mut Self, ReceiptIndex, Balance) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Attaches an `TransferAction` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `TransferAction` action to an existing receipt","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14569,"byte_end":14631,"line_start":280,"line_end":280,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14636,"byte_end":14639,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14644,"byte_end":14659,"line_start":282,"line_end":282,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14664,"byte_end":14667,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14672,"byte_end":14735,"line_start":284,"line_end":284,"column_start":5,"column_end":68}},{"value":"/ * `amount` - amount of tokens to transfer","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14740,"byte_end":14785,"line_start":285,"line_end":285,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14790,"byte_end":14793,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14798,"byte_end":14811,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14816,"byte_end":14823,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14828,"byte_end":14890,"line_start":289,"line_end":289,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14895,"byte_end":14929,"line_start":290,"line_end":290,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14934,"byte_end":14937,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14942,"byte_end":14989,"line_start":292,"line_end":292,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":14994,"byte_end":15085,"line_start":293,"line_end":293,"column_start":5,"column_end":96}},{"value":"/ external.append_action_transfer(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15090,"byte_end":15126,"line_start":294,"line_end":294,"column_start":5,"column_end":41}},{"value":"/     receipt_index,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15131,"byte_end":15153,"line_start":295,"line_end":295,"column_start":5,"column_end":27}},{"value":"/     100000u128,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15158,"byte_end":15177,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/ ).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15182,"byte_end":15197,"line_start":297,"line_end":297,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15202,"byte_end":15205,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15210,"byte_end":15217,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15222,"byte_end":15225,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15230,"byte_end":15242,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15247,"byte_end":15287,"line_start":302,"line_end":302,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16230,"byte_end":16249,"line_start":334,"line_end":334,"column_start":8,"column_end":27},"name":"append_action_stake","qualname":"::dependencies::External::append_action_stake","value":"pub fn append_action_stake(&mut Self, ReceiptIndex, Balance, PublicKey)\n-> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Attaches an `StakeAction` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `StakeAction` action to an existing receipt","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15426,"byte_end":15485,"line_start":309,"line_end":309,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15490,"byte_end":15493,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15498,"byte_end":15513,"line_start":311,"line_end":311,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15518,"byte_end":15521,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15526,"byte_end":15589,"line_start":313,"line_end":313,"column_start":5,"column_end":68}},{"value":"/ * `stake` - amount of tokens to stake","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15594,"byte_end":15635,"line_start":314,"line_end":314,"column_start":5,"column_end":46}},{"value":"/ * `public_key` - a validator public key","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15640,"byte_end":15683,"line_start":315,"line_end":315,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15688,"byte_end":15691,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15696,"byte_end":15709,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15714,"byte_end":15721,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15726,"byte_end":15788,"line_start":319,"line_end":319,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15793,"byte_end":15827,"line_start":320,"line_end":320,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15832,"byte_end":15835,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15840,"byte_end":15887,"line_start":322,"line_end":322,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15892,"byte_end":15983,"line_start":323,"line_end":323,"column_start":5,"column_end":96}},{"value":"/ external.append_action_stake(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":15988,"byte_end":16021,"line_start":324,"line_end":324,"column_start":5,"column_end":38}},{"value":"/     receipt_index,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16026,"byte_end":16048,"line_start":325,"line_end":325,"column_start":5,"column_end":27}},{"value":"/     100000u128,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16053,"byte_end":16072,"line_start":326,"line_end":326,"column_start":5,"column_end":24}},{"value":"/     b\"some public key\".to_vec()","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16077,"byte_end":16112,"line_start":327,"line_end":327,"column_start":5,"column_end":40}},{"value":"/ ).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16117,"byte_end":16132,"line_start":328,"line_end":328,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16137,"byte_end":16140,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16145,"byte_end":16152,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16157,"byte_end":16160,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16165,"byte_end":16177,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16182,"byte_end":16222,"line_start":333,"line_end":333,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17196,"byte_end":17234,"line_start":366,"line_end":366,"column_start":8,"column_end":46},"name":"append_action_add_key_with_full_access","qualname":"::dependencies::External::append_action_add_key_with_full_access","value":"pub fn append_action_add_key_with_full_access(&mut Self, ReceiptIndex,\n                                              PublicKey, u64) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Attaches an `AddKeyAction` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `AddKeyAction` action to an existing receipt","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16388,"byte_end":16448,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16453,"byte_end":16456,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16461,"byte_end":16476,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16481,"byte_end":16484,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16489,"byte_end":16552,"line_start":345,"line_end":345,"column_start":5,"column_end":68}},{"value":"/ * `public_key` - a public key for an access key","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16557,"byte_end":16608,"line_start":346,"line_end":346,"column_start":5,"column_end":56}},{"value":"/ * `nonce` - a nonce","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16613,"byte_end":16636,"line_start":347,"line_end":347,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16641,"byte_end":16644,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16649,"byte_end":16662,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16667,"byte_end":16674,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16679,"byte_end":16741,"line_start":351,"line_end":351,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16746,"byte_end":16780,"line_start":352,"line_end":352,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16785,"byte_end":16788,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16793,"byte_end":16840,"line_start":354,"line_end":354,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16845,"byte_end":16936,"line_start":355,"line_end":355,"column_start":5,"column_end":96}},{"value":"/ external.append_action_add_key_with_full_access(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16941,"byte_end":16993,"line_start":356,"line_end":356,"column_start":5,"column_end":57}},{"value":"/     receipt_index,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":16998,"byte_end":17020,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/     b\"some public key\".to_vec(),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17025,"byte_end":17061,"line_start":358,"line_end":358,"column_start":5,"column_end":41}},{"value":"/     0u64","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17066,"byte_end":17078,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/ ).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17083,"byte_end":17098,"line_start":360,"line_end":360,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17103,"byte_end":17106,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17111,"byte_end":17118,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17123,"byte_end":17126,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17131,"byte_end":17143,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17148,"byte_end":17188,"line_start":365,"line_end":365,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18601,"byte_end":18641,"line_start":404,"line_end":404,"column_start":8,"column_end":48},"name":"append_action_add_key_with_function_call","qualname":"::dependencies::External::append_action_add_key_with_function_call","value":"pub fn append_action_add_key_with_function_call(&mut Self, ReceiptIndex,\n                                                PublicKey, u64,\n                                                Option<Balance>, AccountId,\n                                                Vec<Vec<u8>>) -> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Attaches an `AddKeyAction` action to an existing receipt with `AccessKeyPermission::FunctionCall`","sig":null,"attributes":[{"value":"/ Attaches an `AddKeyAction` action to an existing receipt with `AccessKeyPermission::FunctionCall`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17369,"byte_end":17470,"line_start":373,"line_end":373,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17475,"byte_end":17478,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17483,"byte_end":17498,"line_start":375,"line_end":375,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17503,"byte_end":17506,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17511,"byte_end":17574,"line_start":377,"line_end":377,"column_start":5,"column_end":68}},{"value":"/ * `public_key` - a public key for an access key","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17579,"byte_end":17630,"line_start":378,"line_end":378,"column_start":5,"column_end":56}},{"value":"/ * `nonce` - a nonce","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17635,"byte_end":17658,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/ * `allowance` - amount of tokens allowed to spend by this access key","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17663,"byte_end":17735,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/ * `receiver_id` - a contract witch will be allowed to call with this access key","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17740,"byte_end":17823,"line_start":381,"line_end":381,"column_start":5,"column_end":88}},{"value":"/ * `method_names` - a list of method names is allowed to call with this access key (empty = any method)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17828,"byte_end":17934,"line_start":382,"line_end":382,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17939,"byte_end":17942,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17947,"byte_end":17960,"line_start":384,"line_end":384,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17965,"byte_end":17972,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":17977,"byte_end":18039,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18044,"byte_end":18078,"line_start":387,"line_end":387,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18083,"byte_end":18086,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18091,"byte_end":18138,"line_start":389,"line_end":389,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18143,"byte_end":18234,"line_start":390,"line_end":390,"column_start":5,"column_end":96}},{"value":"/ external.append_action_add_key_with_function_call(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18239,"byte_end":18293,"line_start":391,"line_end":391,"column_start":5,"column_end":59}},{"value":"/     receipt_index,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18298,"byte_end":18320,"line_start":392,"line_end":392,"column_start":5,"column_end":27}},{"value":"/     b\"some public key\".to_vec(),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18325,"byte_end":18361,"line_start":393,"line_end":393,"column_start":5,"column_end":41}},{"value":"/     0u64,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18366,"byte_end":18379,"line_start":394,"line_end":394,"column_start":5,"column_end":18}},{"value":"/     None,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18384,"byte_end":18397,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/     \"bob.near\".to_owned(),","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18402,"byte_end":18432,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/     vec![b\"foo\".to_vec(), b\"bar\".to_vec()]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18437,"byte_end":18483,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/ ).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18488,"byte_end":18503,"line_start":398,"line_end":398,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18508,"byte_end":18511,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18516,"byte_end":18523,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18528,"byte_end":18531,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18536,"byte_end":18548,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18553,"byte_end":18593,"line_start":403,"line_end":403,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19641,"byte_end":19665,"line_start":437,"line_end":437,"column_start":8,"column_end":32},"name":"append_action_delete_key","qualname":"::dependencies::External::append_action_delete_key","value":"pub fn append_action_delete_key(&mut Self, ReceiptIndex, PublicKey)\n-> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Attaches an `DeleteKeyAction` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `DeleteKeyAction` action to an existing receipt","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18880,"byte_end":18943,"line_start":414,"line_end":414,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18948,"byte_end":18951,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18956,"byte_end":18971,"line_start":416,"line_end":416,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18976,"byte_end":18979,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":18984,"byte_end":19047,"line_start":418,"line_end":418,"column_start":5,"column_end":68}},{"value":"/ * `public_key` - a public key for an access key to delete","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19052,"byte_end":19113,"line_start":419,"line_end":419,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19118,"byte_end":19121,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19126,"byte_end":19139,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19144,"byte_end":19151,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19156,"byte_end":19218,"line_start":423,"line_end":423,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19223,"byte_end":19257,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19262,"byte_end":19265,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19270,"byte_end":19317,"line_start":426,"line_end":426,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19322,"byte_end":19413,"line_start":427,"line_end":427,"column_start":5,"column_end":96}},{"value":"/ external.append_action_delete_key(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19418,"byte_end":19456,"line_start":428,"line_end":428,"column_start":5,"column_end":43}},{"value":"/     receipt_index,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19461,"byte_end":19483,"line_start":429,"line_end":429,"column_start":5,"column_end":27}},{"value":"/     b\"some public key\".to_vec()","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19488,"byte_end":19523,"line_start":430,"line_end":430,"column_start":5,"column_end":40}},{"value":"/ ).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19528,"byte_end":19543,"line_start":431,"line_end":431,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19548,"byte_end":19551,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19556,"byte_end":19563,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19568,"byte_end":19571,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19576,"byte_end":19588,"line_start":435,"line_end":435,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19593,"byte_end":19633,"line_start":436,"line_end":436,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20589,"byte_end":20617,"line_start":466,"line_end":466,"column_start":8,"column_end":36},"name":"append_action_delete_account","qualname":"::dependencies::External::append_action_delete_account","value":"pub fn append_action_delete_account(&mut Self, ReceiptIndex, AccountId)\n-> Result<()>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Attaches an `DeleteAccountAction` action to an existing receipt","sig":null,"attributes":[{"value":"/ Attaches an `DeleteAccountAction` action to an existing receipt","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19780,"byte_end":19847,"line_start":443,"line_end":443,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19852,"byte_end":19855,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19860,"byte_end":19875,"line_start":445,"line_end":445,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19880,"byte_end":19883,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19888,"byte_end":19951,"line_start":447,"line_end":447,"column_start":5,"column_end":68}},{"value":"/ * `beneficiary_id` - an account id to which the rest of the funds of the removed account will be transferred","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":19956,"byte_end":20068,"line_start":448,"line_end":448,"column_start":5,"column_end":117}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20073,"byte_end":20076,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20081,"byte_end":20094,"line_start":450,"line_end":450,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20099,"byte_end":20106,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20111,"byte_end":20173,"line_start":452,"line_end":452,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20178,"byte_end":20212,"line_start":453,"line_end":453,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20217,"byte_end":20220,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20225,"byte_end":20272,"line_start":455,"line_end":455,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".to_owned()).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20277,"byte_end":20368,"line_start":456,"line_end":456,"column_start":5,"column_end":96}},{"value":"/ external.append_action_delete_account(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20373,"byte_end":20415,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/     receipt_index,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20420,"byte_end":20442,"line_start":458,"line_end":458,"column_start":5,"column_end":27}},{"value":"/     \"sam\".to_owned()","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20447,"byte_end":20471,"line_start":459,"line_end":459,"column_start":5,"column_end":29}},{"value":"/ ).unwrap();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20476,"byte_end":20491,"line_start":460,"line_end":460,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20496,"byte_end":20499,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20504,"byte_end":20511,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20516,"byte_end":20519,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20524,"byte_end":20536,"line_start":464,"line_end":464,"column_start":5,"column_end":17}},{"value":"/ Panics if `receipt_index` is missing","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20541,"byte_end":20581,"line_start":465,"line_end":465,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20806,"byte_end":20829,"line_start":473,"line_end":473,"column_start":8,"column_end":31},"name":"get_touched_nodes_count","qualname":"::dependencies::External::get_touched_nodes_count","value":"pub fn get_touched_nodes_count(&Self) -> u64","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Returns amount of touched trie nodes by storage operations\n","sig":null,"attributes":[{"value":"/ Returns amount of touched trie nodes by storage operations","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20736,"byte_end":20798,"line_start":472,"line_end":472,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20919,"byte_end":20946,"line_start":476,"line_end":476,"column_start":8,"column_end":35},"name":"reset_touched_nodes_counter","qualname":"::dependencies::External::reset_touched_nodes_counter","value":"pub fn reset_touched_nodes_counter(&mut Self)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Resets amount of touched trie nodes by storage operations\n","sig":null,"attributes":[{"value":"/ Resets amount of touched trie nodes by storage operations","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20850,"byte_end":20911,"line_start":475,"line_end":475,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":21102,"byte_end":21117,"line_start":480,"line_end":480,"column_start":8,"column_end":23},"name":"validator_stake","qualname":"::dependencies::External::validator_stake","value":"pub fn validator_stake(&Self, &AccountId) -> Result<Option<Balance>>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Returns the validator stake for given account in the current epoch.\n If the account is not a validator, returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns the validator stake for given account in the current epoch.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":20964,"byte_end":21035,"line_start":478,"line_end":478,"column_start":5,"column_end":76}},{"value":"/ If the account is not a validator, returns `None`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":21040,"byte_end":21094,"line_start":479,"line_end":479,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":21249,"byte_end":21270,"line_start":483,"line_end":483,"column_start":8,"column_end":29},"name":"validator_total_stake","qualname":"::dependencies::External::validator_total_stake","value":"pub fn validator_total_stake(&Self) -> Result<Balance>","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Returns total stake of validators in the current epoch.\n","sig":null,"attributes":[{"value":"/ Returns total stake of validators in the current epoch.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/dependencies.rs","byte_start":21182,"byte_end":21241,"line_start":482,"line_end":482,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gas_counter","qualname":"::gas_counter","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":151},{"krate":0,"index":153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":21844,"byte_end":21865,"line_start":20,"line_end":20,"column_start":8,"column_end":29},"name":"with_ext_cost_counter","qualname":"::gas_counter::with_ext_cost_counter","value":"pub fn with_ext_cost_counter<impl FnOnce(&mut HashMap<ExtCosts, u64>): FnOnce(&mut HashMap<ExtCosts,\n                                                                                           u64>)\n                             -> ()>(impl FnOnce(&mut HashMap<ExtCosts, u64>))","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":21827,"byte_end":21836,"line_start":19,"line_end":19,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":22507,"byte_end":22517,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"GasCounter","qualname":"::gas_counter::GasCounter","value":"GasCounter {  }","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"decl_id":null,"docs":" Gas counter (a part of VMlogic)\n","sig":null,"attributes":[{"value":"/ Gas counter (a part of VMlogic)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":22460,"byte_end":22495,"line_start":40,"line_end":40,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":23078,"byte_end":23081,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<GasCounter>::new","value":"pub fn new(ExtCostsConfig, Gas, Gas, bool, ProfileData) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":25284,"byte_end":25296,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"pay_wasm_gas","qualname":"<GasCounter>::pay_wasm_gas","value":"pub fn pay_wasm_gas(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":25392,"byte_end":25403,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"pay_evm_gas","qualname":"<GasCounter>::pay_evm_gas","value":"pub fn pay_evm_gas(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":25545,"byte_end":25557,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"pay_per_byte","qualname":"<GasCounter>::pay_per_byte","value":"pub fn pay_per_byte(&mut Self, ExtCosts, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay per byte gas\n","sig":null,"attributes":[{"value":"/ A helper function to pay per byte gas","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":25492,"byte_end":25533,"line_start":139,"line_end":139,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":25969,"byte_end":25977,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"pay_base","qualname":"<GasCounter>::pay_base","value":"pub fn pay_base(&mut Self, ExtCosts) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay base cost gas\n","sig":null,"attributes":[{"value":"/ A helper function to pay base cost gas","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":25915,"byte_end":25957,"line_start":150,"line_end":150,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":26547,"byte_end":26566,"line_start":164,"line_end":164,"column_start":12,"column_end":31},"name":"pay_action_per_byte","qualname":"<GasCounter>::pay_action_per_byte","value":"pub fn pay_action_per_byte(&mut Self, &Fee, u64, bool, ActionCosts)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay per byte gas fee for batching an action.\n # Args:\n * `per_byte_fee`: the fee per byte;\n * `num_bytes`: the number of bytes;\n * `sir`: whether the receiver_id is same as the current account ID;\n * `action`: what kind of action is charged for;\n","sig":null,"attributes":[{"value":"/ A helper function to pay per byte gas fee for batching an action.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":26230,"byte_end":26299,"line_start":158,"line_end":158,"column_start":5,"column_end":74}},{"value":"/ # Args:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":26304,"byte_end":26315,"line_start":159,"line_end":159,"column_start":5,"column_end":16}},{"value":"/ * `per_byte_fee`: the fee per byte;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":26320,"byte_end":26359,"line_start":160,"line_end":160,"column_start":5,"column_end":44}},{"value":"/ * `num_bytes`: the number of bytes;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":26364,"byte_end":26403,"line_start":161,"line_end":161,"column_start":5,"column_end":44}},{"value":"/ * `sir`: whether the receiver_id is same as the current account ID;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":26408,"byte_end":26479,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ * `action`: what kind of action is charged for;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":26484,"byte_end":26535,"line_start":163,"line_end":163,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":27434,"byte_end":27449,"line_start":187,"line_end":187,"column_start":12,"column_end":27},"name":"pay_action_base","qualname":"<GasCounter>::pay_action_base","value":"pub fn pay_action_base(&mut Self, &Fee, bool, ActionCosts) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay base cost gas fee for batching an action.\n # Args:\n * `base_fee`: base fee for the action;\n * `sir`: whether the receiver_id is same as the current account ID;\n * `action`: what kind of action is charged for;\n","sig":null,"attributes":[{"value":"/ A helper function to pay base cost gas fee for batching an action.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":27157,"byte_end":27227,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ # Args:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":27232,"byte_end":27243,"line_start":183,"line_end":183,"column_start":5,"column_end":16}},{"value":"/ * `base_fee`: base fee for the action;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":27248,"byte_end":27290,"line_start":184,"line_end":184,"column_start":5,"column_end":47}},{"value":"/ * `sir`: whether the receiver_id is same as the current account ID;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":27295,"byte_end":27366,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ * `action`: what kind of action is charged for;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":27371,"byte_end":27422,"line_start":186,"line_end":186,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":28077,"byte_end":28099,"line_start":205,"line_end":205,"column_start":12,"column_end":34},"name":"pay_action_accumulated","qualname":"<GasCounter>::pay_action_accumulated","value":"pub fn pay_action_accumulated(&mut Self, Gas, Gas, ActionCosts) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay base cost gas fee for batching an action.\n # Args:\n * `burn_gas`: amount of gas to burn;\n * `use_gas`: amount of gas to reserve;\n * `action`: what kind of action is charged for;\n","sig":null,"attributes":[{"value":"/ A helper function to pay base cost gas fee for batching an action.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":27831,"byte_end":27901,"line_start":200,"line_end":200,"column_start":5,"column_end":75}},{"value":"/ # Args:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":27906,"byte_end":27917,"line_start":201,"line_end":201,"column_start":5,"column_end":16}},{"value":"/ * `burn_gas`: amount of gas to burn;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":27922,"byte_end":27962,"line_start":202,"line_end":202,"column_start":5,"column_end":45}},{"value":"/ * `use_gas`: amount of gas to reserve;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":27967,"byte_end":28009,"line_start":203,"line_end":203,"column_start":5,"column_end":47}},{"value":"/ * `action`: what kind of action is charged for;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":28014,"byte_end":28065,"line_start":204,"line_end":204,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":28331,"byte_end":28341,"line_start":215,"line_end":215,"column_start":12,"column_end":22},"name":"prepay_gas","qualname":"<GasCounter>::prepay_gas","value":"pub fn prepay_gas(&mut Self, Gas) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":28437,"byte_end":28446,"line_start":219,"line_end":219,"column_start":12,"column_end":21},"name":"burnt_gas","qualname":"<GasCounter>::burnt_gas","value":"pub fn burnt_gas(&Self) -> Gas","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":28503,"byte_end":28511,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"used_gas","qualname":"<GasCounter>::used_gas","value":"pub fn used_gas(&Self) -> Gas","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":275},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":30280,"byte_end":30287,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"VMLogic","qualname":"::logic::VMLogic","value":"VMLogic {  }","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":33308,"byte_end":33333,"line_start":103,"line_end":103,"column_start":12,"column_end":37},"name":"new_with_protocol_version","qualname":"<VMLogic>::new_with_protocol_version","value":"pub fn new_with_protocol_version(&'a mut dyn External, VMContext,\n                                 &'a VMConfig, &'a RuntimeFeesConfig,\n                                 &'a [PromiseResult], &'a mut dyn MemoryLike,\n                                 ProfileData, ProtocolVersion) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":35088,"byte_end":35091,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"new","qualname":"<VMLogic>::new","value":"pub fn new(&'a mut dyn External, VMContext, &'a VMConfig,\n           &'a RuntimeFeesConfig, &'a [PromiseResult], &'a mut dyn MemoryLike,\n           ProfileData) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Legacy initialization method that doesn't pass the protocol version and uses the last\n protocol version before the change was introduced.\n","sig":null,"attributes":[{"value":"/ Legacy initialization method that doesn't pass the protocol version and uses the last","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":34928,"byte_end":35017,"line_start":151,"line_end":151,"column_start":5,"column_end":94}},{"value":"/ protocol version before the change was introduced.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":35022,"byte_end":35076,"line_start":152,"line_end":152,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39317,"byte_end":39348,"line_start":272,"line_end":272,"column_start":12,"column_end":43},"name":"wrapped_internal_write_register","qualname":"<VMLogic>::wrapped_internal_write_register","value":"pub fn wrapped_internal_write_register(&mut Self, u64, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for testing.\n","sig":null,"attributes":[{"value":"/ Convenience function for testing.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39268,"byte_end":39305,"line_start":271,"line_end":271,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40495,"byte_end":40508,"line_start":296,"line_end":296,"column_start":12,"column_end":25},"name":"read_register","qualname":"<VMLogic>::read_register","value":"pub fn read_register(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the entire content from the register `register_id` into the memory of the guest starting with `ptr`.","sig":null,"attributes":[{"value":"/ Writes the entire content from the register `register_id` into the memory of the guest starting with `ptr`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39483,"byte_end":39594,"line_start":276,"line_end":276,"column_start":5,"column_end":116}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39599,"byte_end":39602,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39607,"byte_end":39622,"line_start":278,"line_end":278,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39627,"byte_end":39630,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id from where to read the data;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39635,"byte_end":39700,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ * `ptr` -- location on guest memory where to copy the data.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39705,"byte_end":39768,"line_start":281,"line_end":281,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39773,"byte_end":39776,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39781,"byte_end":39793,"line_start":283,"line_end":283,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39798,"byte_end":39801,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ * If the content extends outside the memory allocated to the guest. In Wasmer, it returns `MemoryAccessViolation` error message;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39806,"byte_end":39938,"line_start":285,"line_end":285,"column_start":5,"column_end":137}},{"value":"/ * If `register_id` is pointing to unused register returns `InvalidRegisterId` error message.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":39943,"byte_end":40039,"line_start":286,"line_end":286,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40044,"byte_end":40047,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Undefined Behavior","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40052,"byte_end":40076,"line_start":288,"line_end":288,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40081,"byte_end":40084,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If the content of register extends outside the preallocated memory on the host side, or the pointer points to a","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40089,"byte_end":40204,"line_start":290,"line_end":290,"column_start":5,"column_end":120}},{"value":"/ wrong location this function will overwrite memory that it is not supposed to overwrite causing an undefined behavior.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40209,"byte_end":40331,"line_start":291,"line_end":291,"column_start":5,"column_end":127}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40336,"byte_end":40339,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40344,"byte_end":40354,"line_start":293,"line_end":293,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40359,"byte_end":40362,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ `base + read_register_base + read_register_byte * num_bytes + write_memory_base + write_memory_byte * num_bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40367,"byte_end":40483,"line_start":295,"line_end":295,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41086,"byte_end":41098,"line_start":313,"line_end":313,"column_start":12,"column_end":24},"name":"register_len","qualname":"<VMLogic>::register_len","value":"pub fn register_len(&mut Self, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the blob stored in the given register.\n * If register is used, then returns the size, which can potentially be zero;\n * If register is not used, returns `u64::MAX`","sig":null,"attributes":[{"value":"/ Returns the size of the blob stored in the given register.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40721,"byte_end":40783,"line_start":302,"line_end":302,"column_start":5,"column_end":67}},{"value":"/ * If register is used, then returns the size, which can potentially be zero;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40788,"byte_end":40868,"line_start":303,"line_end":303,"column_start":5,"column_end":85}},{"value":"/ * If register is not used, returns `u64::MAX`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40873,"byte_end":40922,"line_start":304,"line_end":304,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40927,"byte_end":40930,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40935,"byte_end":40950,"line_start":306,"line_end":306,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40955,"byte_end":40958,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id from where to read the data;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":40963,"byte_end":41028,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41033,"byte_end":41036,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41041,"byte_end":41051,"line_start":310,"line_end":310,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41056,"byte_end":41059,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41064,"byte_end":41074,"line_start":312,"line_end":312,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41941,"byte_end":41955,"line_start":331,"line_end":331,"column_start":12,"column_end":26},"name":"write_register","qualname":"<VMLogic>::write_register","value":"pub fn write_register(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies `data` from the guest memory into the register. If register is unused will initialize\n it. If register has larger capacity than needed for `data` will not re-allocate it. The\n register will lose the pre-existing data if any.","sig":null,"attributes":[{"value":"/ Copies `data` from the guest memory into the register. If register is unused will initialize","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41290,"byte_end":41386,"line_start":318,"line_end":318,"column_start":5,"column_end":101}},{"value":"/ it. If register has larger capacity than needed for `data` will not re-allocate it. The","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41391,"byte_end":41482,"line_start":319,"line_end":319,"column_start":5,"column_end":96}},{"value":"/ register will lose the pre-existing data if any.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41487,"byte_end":41539,"line_start":320,"line_end":320,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41544,"byte_end":41547,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41552,"byte_end":41567,"line_start":322,"line_end":322,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41572,"byte_end":41575,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id where to write the data;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41580,"byte_end":41641,"line_start":324,"line_end":324,"column_start":5,"column_end":66}},{"value":"/ * `data_len` -- length of the data in bytes;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41646,"byte_end":41694,"line_start":325,"line_end":325,"column_start":5,"column_end":53}},{"value":"/ * `data_ptr` -- pointer in the guest memory where to read the data from.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41699,"byte_end":41775,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41780,"byte_end":41783,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41788,"byte_end":41798,"line_start":328,"line_end":328,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41803,"byte_end":41806,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ `base + read_memory_base + read_memory_bytes * num_bytes + write_register_base + write_register_bytes * num_bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":41811,"byte_end":41929,"line_start":330,"line_end":330,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":49818,"byte_end":49836,"line_start":516,"line_end":516,"column_start":12,"column_end":30},"name":"current_account_id","qualname":"<VMLogic>::current_account_id","value":"pub fn current_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the account id of the current contract that we execute into the register.","sig":null,"attributes":[{"value":"/ Saves the account id of the current contract that we execute into the register.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":49506,"byte_end":49589,"line_start":507,"line_end":507,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":49594,"byte_end":49597,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":49602,"byte_end":49614,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":49619,"byte_end":49622,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":49627,"byte_end":49704,"line_start":511,"line_end":511,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":49709,"byte_end":49712,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":49717,"byte_end":49727,"line_start":513,"line_end":513,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":49732,"byte_end":49735,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":49740,"byte_end":49806,"line_start":515,"line_end":515,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50701,"byte_end":50718,"line_start":538,"line_end":538,"column_start":12,"column_end":29},"name":"signer_account_id","qualname":"<VMLogic>::signer_account_id","value":"pub fn signer_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" All contract calls are a result of some transaction that was signed by some account using\n some access key and submitted into a memory pool (either through the wallet using RPC or by\n a node itself). This function returns the id of that account. Saves the bytes of the signer\n account id into the register.","sig":null,"attributes":[{"value":"/ All contract calls are a result of some transaction that was signed by some account using","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50074,"byte_end":50167,"line_start":525,"line_end":525,"column_start":5,"column_end":98}},{"value":"/ some access key and submitted into a memory pool (either through the wallet using RPC or by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50172,"byte_end":50267,"line_start":526,"line_end":526,"column_start":5,"column_end":100}},{"value":"/ a node itself). This function returns the id of that account. Saves the bytes of the signer","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50272,"byte_end":50367,"line_start":527,"line_end":527,"column_start":5,"column_end":100}},{"value":"/ account id into the register.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50372,"byte_end":50405,"line_start":528,"line_end":528,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50410,"byte_end":50413,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50418,"byte_end":50430,"line_start":530,"line_end":530,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50435,"byte_end":50438,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50443,"byte_end":50522,"line_start":532,"line_end":532,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50527,"byte_end":50587,"line_start":533,"line_end":533,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50592,"byte_end":50595,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50600,"byte_end":50610,"line_start":535,"line_end":535,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50615,"byte_end":50618,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":50623,"byte_end":50689,"line_start":537,"line_end":537,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51739,"byte_end":51756,"line_start":565,"line_end":565,"column_start":12,"column_end":29},"name":"signer_account_pk","qualname":"<VMLogic>::signer_account_pk","value":"pub fn signer_account_pk(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the public key fo the access key that was used by the signer into the register. In\n rare situations smart contract might want to know the exact access key that was used to send\n the original transaction, e.g. to increase the allowance or manipulate with the public key.","sig":null,"attributes":[{"value":"/ Saves the public key fo the access key that was used by the signer into the register. In","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51150,"byte_end":51242,"line_start":553,"line_end":553,"column_start":5,"column_end":97}},{"value":"/ rare situations smart contract might want to know the exact access key that was used to send","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51247,"byte_end":51343,"line_start":554,"line_end":554,"column_start":5,"column_end":101}},{"value":"/ the original transaction, e.g. to increase the allowance or manipulate with the public key.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51348,"byte_end":51443,"line_start":555,"line_end":555,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51448,"byte_end":51451,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51456,"byte_end":51468,"line_start":557,"line_end":557,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51473,"byte_end":51476,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51481,"byte_end":51560,"line_start":559,"line_end":559,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51565,"byte_end":51625,"line_start":560,"line_end":560,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51630,"byte_end":51633,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51638,"byte_end":51648,"line_start":562,"line_end":562,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51653,"byte_end":51656,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":51661,"byte_end":51727,"line_start":564,"line_end":564,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52716,"byte_end":52738,"line_start":589,"line_end":589,"column_start":12,"column_end":34},"name":"predecessor_account_id","qualname":"<VMLogic>::predecessor_account_id","value":"pub fn predecessor_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" All contract calls are a result of a receipt, this receipt might be created by a transaction\n that does function invocation on the contract or another contract as a result of\n cross-contract call. Saves the bytes of the predecessor account id into the register.","sig":null,"attributes":[{"value":"/ All contract calls are a result of a receipt, this receipt might be created by a transaction","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52141,"byte_end":52237,"line_start":577,"line_end":577,"column_start":5,"column_end":101}},{"value":"/ that does function invocation on the contract or another contract as a result of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52242,"byte_end":52326,"line_start":578,"line_end":578,"column_start":5,"column_end":89}},{"value":"/ cross-contract call. Saves the bytes of the predecessor account id into the register.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52331,"byte_end":52420,"line_start":579,"line_end":579,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52425,"byte_end":52428,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52433,"byte_end":52445,"line_start":581,"line_end":581,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52450,"byte_end":52453,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52458,"byte_end":52537,"line_start":583,"line_end":583,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52542,"byte_end":52602,"line_start":584,"line_end":584,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52607,"byte_end":52610,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52615,"byte_end":52625,"line_start":586,"line_end":586,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52630,"byte_end":52633,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":52638,"byte_end":52704,"line_start":588,"line_end":588,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53544,"byte_end":53549,"line_start":611,"line_end":611,"column_start":12,"column_end":17},"name":"input","qualname":"<VMLogic>::input","value":"pub fn input(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reads input to the contract call into the register. Input is expected to be in JSON-format.\n If input is provided saves the bytes (potentially zero) of input into register. If input is\n not provided writes 0 bytes into the register.","sig":null,"attributes":[{"value":"/ Reads input to the contract call into the register. Input is expected to be in JSON-format.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53180,"byte_end":53275,"line_start":604,"line_end":604,"column_start":5,"column_end":100}},{"value":"/ If input is provided saves the bytes (potentially zero) of input into register. If input is","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53280,"byte_end":53375,"line_start":605,"line_end":605,"column_start":5,"column_end":100}},{"value":"/ not provided writes 0 bytes into the register.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53380,"byte_end":53430,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53435,"byte_end":53438,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53443,"byte_end":53453,"line_start":608,"line_end":608,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53458,"byte_end":53461,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53466,"byte_end":53532,"line_start":610,"line_end":610,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53865,"byte_end":53876,"line_start":623,"line_end":623,"column_start":12,"column_end":23},"name":"block_index","qualname":"<VMLogic>::block_index","value":"pub fn block_index(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current block height.","sig":null,"attributes":[{"value":"/ Returns the current block height.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53727,"byte_end":53764,"line_start":617,"line_end":617,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53769,"byte_end":53772,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53777,"byte_end":53787,"line_start":619,"line_end":619,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53792,"byte_end":53795,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53800,"byte_end":53810,"line_start":621,"line_end":621,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54160,"byte_end":54175,"line_start":633,"line_end":633,"column_start":12,"column_end":27},"name":"block_timestamp","qualname":"<VMLogic>::block_timestamp","value":"pub fn block_timestamp(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","sig":null,"attributes":[{"value":"/ Returns the current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":53995,"byte_end":54102,"line_start":628,"line_end":628,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54107,"byte_end":54110,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54115,"byte_end":54125,"line_start":630,"line_end":630,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54130,"byte_end":54133,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54138,"byte_end":54148,"line_start":632,"line_end":632,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54393,"byte_end":54405,"line_start":643,"line_end":643,"column_start":12,"column_end":24},"name":"epoch_height","qualname":"<VMLogic>::epoch_height","value":"pub fn epoch_height(&mut Self) -> Result<EpochHeight>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current epoch height.","sig":null,"attributes":[{"value":"/ Returns the current epoch height.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54298,"byte_end":54335,"line_start":638,"line_end":638,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54340,"byte_end":54343,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54348,"byte_end":54358,"line_start":640,"line_end":640,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54363,"byte_end":54366,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54371,"byte_end":54381,"line_start":642,"line_end":642,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54887,"byte_end":54902,"line_start":654,"line_end":654,"column_start":12,"column_end":27},"name":"validator_stake","qualname":"<VMLogic>::validator_stake","value":"pub fn validator_stake(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Get the stake of an account, if the account is currently a validator. Otherwise returns 0.\n writes the value into the` u128` variable pointed by `stake_ptr`.","sig":null,"attributes":[{"value":"/ Get the stake of an account, if the account is currently a validator. Otherwise returns 0.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54533,"byte_end":54627,"line_start":648,"line_end":648,"column_start":5,"column_end":99}},{"value":"/ writes the value into the` u128` variable pointed by `stake_ptr`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54632,"byte_end":54701,"line_start":649,"line_end":649,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54706,"byte_end":54709,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54714,"byte_end":54724,"line_start":651,"line_end":651,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54729,"byte_end":54732,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16 + utf8_decoding_base + utf8_decoding_byte * account_id_len + validator_stake_base`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":54737,"byte_end":54875,"line_start":653,"line_end":653,"column_start":5,"column_end":143}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":55667,"byte_end":55688,"line_start":674,"line_end":674,"column_start":12,"column_end":33},"name":"validator_total_stake","qualname":"<VMLogic>::validator_total_stake","value":"pub fn validator_total_stake(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Get the total validator stake of the current epoch.\n Write the u128 value into `stake_ptr`.\n writes the value into the` u128` variable pointed by `stake_ptr`.","sig":null,"attributes":[{"value":"/ Get the total validator stake of the current epoch.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":55359,"byte_end":55414,"line_start":667,"line_end":667,"column_start":5,"column_end":60}},{"value":"/ Write the u128 value into `stake_ptr`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":55419,"byte_end":55461,"line_start":668,"line_end":668,"column_start":5,"column_end":47}},{"value":"/ writes the value into the` u128` variable pointed by `stake_ptr`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":55466,"byte_end":55535,"line_start":669,"line_end":669,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":55540,"byte_end":55543,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":55548,"byte_end":55558,"line_start":671,"line_end":671,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":55563,"byte_end":55566,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16 + validator_total_stake_base`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":55571,"byte_end":55655,"line_start":673,"line_end":673,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56399,"byte_end":56412,"line_start":691,"line_end":691,"column_start":12,"column_end":25},"name":"storage_usage","qualname":"<VMLogic>::storage_usage","value":"pub fn storage_usage(&mut Self) -> Result<StorageUsage>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes used by the contract if it was saved to the trie as of the\n invocation. This includes:\n * The data written with storage_* functions during current and previous execution;\n * The bytes needed to store the access keys of the given account.\n * The contract code size\n * A small fixed overhead for account metadata.","sig":null,"attributes":[{"value":"/ Returns the number of bytes used by the contract if it was saved to the trie as of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":55963,"byte_end":56053,"line_start":681,"line_end":681,"column_start":5,"column_end":95}},{"value":"/ invocation. This includes:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56058,"byte_end":56088,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/ * The data written with storage_* functions during current and previous execution;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56093,"byte_end":56179,"line_start":683,"line_end":683,"column_start":5,"column_end":91}},{"value":"/ * The bytes needed to store the access keys of the given account.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56184,"byte_end":56253,"line_start":684,"line_end":684,"column_start":5,"column_end":74}},{"value":"/ * The contract code size","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56258,"byte_end":56286,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/ * A small fixed overhead for account metadata.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56291,"byte_end":56341,"line_start":686,"line_end":686,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56346,"byte_end":56349,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56354,"byte_end":56364,"line_start":688,"line_end":688,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56369,"byte_end":56372,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56377,"byte_end":56387,"line_start":690,"line_end":690,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56847,"byte_end":56862,"line_start":706,"line_end":706,"column_start":12,"column_end":27},"name":"account_balance","qualname":"<VMLogic>::account_balance","value":"pub fn account_balance(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The current balance of the given account. This includes the attached_deposit that was\n attached to the transaction.","sig":null,"attributes":[{"value":"/ The current balance of the given account. This includes the attached_deposit that was","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56618,"byte_end":56707,"line_start":700,"line_end":700,"column_start":5,"column_end":94}},{"value":"/ attached to the transaction.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56712,"byte_end":56744,"line_start":701,"line_end":701,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56749,"byte_end":56752,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56757,"byte_end":56767,"line_start":703,"line_end":703,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56772,"byte_end":56775,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":56780,"byte_end":56835,"line_start":705,"line_end":705,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57191,"byte_end":57213,"line_start":716,"line_end":716,"column_start":12,"column_end":34},"name":"account_locked_balance","qualname":"<VMLogic>::account_locked_balance","value":"pub fn account_locked_balance(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The current amount of tokens locked due to staking.","sig":null,"attributes":[{"value":"/ The current amount of tokens locked due to staking.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57033,"byte_end":57088,"line_start":711,"line_end":711,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57093,"byte_end":57096,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57101,"byte_end":57111,"line_start":713,"line_end":713,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57116,"byte_end":57119,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57124,"byte_end":57179,"line_start":715,"line_end":715,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57717,"byte_end":57733,"line_start":731,"line_end":731,"column_start":12,"column_end":28},"name":"attached_deposit","qualname":"<VMLogic>::attached_deposit","value":"pub fn attached_deposit(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The balance that was attached to the call that will be immediately deposited before the\n contract execution starts.","sig":null,"attributes":[{"value":"/ The balance that was attached to the call that will be immediately deposited before the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57391,"byte_end":57482,"line_start":721,"line_end":721,"column_start":5,"column_end":96}},{"value":"/ contract execution starts.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57487,"byte_end":57517,"line_start":722,"line_end":722,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57522,"byte_end":57525,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57530,"byte_end":57542,"line_start":724,"line_end":724,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57547,"byte_end":57550,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView``.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57555,"byte_end":57614,"line_start":726,"line_end":726,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57619,"byte_end":57622,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57627,"byte_end":57637,"line_start":728,"line_end":728,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57642,"byte_end":57645,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":57650,"byte_end":57705,"line_start":730,"line_end":730,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58338,"byte_end":58349,"line_start":752,"line_end":752,"column_start":12,"column_end":23},"name":"prepaid_gas","qualname":"<VMLogic>::prepaid_gas","value":"pub fn prepaid_gas(&mut Self) -> Result<Gas>","parent":null,"children":[],"decl_id":null,"docs":" The amount of gas attached to the call that can be used to pay for the gas fees.","sig":null,"attributes":[{"value":"/ The amount of gas attached to the call that can be used to pay for the gas fees.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58100,"byte_end":58184,"line_start":743,"line_end":743,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58189,"byte_end":58192,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58197,"byte_end":58209,"line_start":745,"line_end":745,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58214,"byte_end":58217,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58222,"byte_end":58280,"line_start":747,"line_end":747,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58285,"byte_end":58288,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58293,"byte_end":58303,"line_start":749,"line_end":749,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58308,"byte_end":58311,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58316,"byte_end":58326,"line_start":751,"line_end":751,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58893,"byte_end":58901,"line_start":771,"line_end":771,"column_start":12,"column_end":20},"name":"used_gas","qualname":"<VMLogic>::used_gas","value":"pub fn used_gas(&mut Self) -> Result<Gas>","parent":null,"children":[],"decl_id":null,"docs":" The gas that was already burnt during the contract execution (cannot exceed `prepaid_gas`)","sig":null,"attributes":[{"value":"/ The gas that was already burnt during the contract execution (cannot exceed `prepaid_gas`)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58645,"byte_end":58739,"line_start":762,"line_end":762,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58744,"byte_end":58747,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58752,"byte_end":58764,"line_start":764,"line_end":764,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58769,"byte_end":58772,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58777,"byte_end":58835,"line_start":766,"line_end":766,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58840,"byte_end":58843,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58848,"byte_end":58858,"line_start":768,"line_end":768,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58863,"byte_end":58866,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":58871,"byte_end":58881,"line_start":770,"line_end":770,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63388,"byte_end":63399,"line_start":883,"line_end":883,"column_start":12,"column_end":23},"name":"random_seed","qualname":"<VMLogic>::random_seed","value":"pub fn random_seed(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes random seed into the register.","sig":null,"attributes":[{"value":"/ Writes random seed into the register.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63116,"byte_end":63157,"line_start":874,"line_end":874,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63162,"byte_end":63165,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63170,"byte_end":63182,"line_start":876,"line_end":876,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63187,"byte_end":63190,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ If the size of the registers exceed the set limit `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63195,"byte_end":63273,"line_start":878,"line_end":878,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63278,"byte_end":63281,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63286,"byte_end":63296,"line_start":880,"line_end":880,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63301,"byte_end":63304,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63309,"byte_end":63376,"line_start":882,"line_end":882,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63990,"byte_end":63996,"line_start":898,"line_end":898,"column_start":12,"column_end":18},"name":"sha256","qualname":"<VMLogic>::sha256","value":"pub fn sha256(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using sha256 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using sha256 and returns it into `register_id`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63582,"byte_end":63656,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63661,"byte_end":63664,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63669,"byte_end":63681,"line_start":890,"line_end":890,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63686,"byte_end":63689,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63694,"byte_end":63788,"line_start":892,"line_end":892,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63793,"byte_end":63836,"line_start":893,"line_end":893,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63841,"byte_end":63844,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63849,"byte_end":63859,"line_start":895,"line_end":895,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63864,"byte_end":63867,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + sha256_base + sha256_byte * num_bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":63872,"byte_end":63978,"line_start":897,"line_end":897,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64870,"byte_end":64879,"line_start":919,"line_end":919,"column_start":12,"column_end":21},"name":"keccak256","qualname":"<VMLogic>::keccak256","value":"pub fn keccak256(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using keccak256 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using keccak256 and returns it into `register_id`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64453,"byte_end":64530,"line_start":909,"line_end":909,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64535,"byte_end":64538,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64543,"byte_end":64555,"line_start":911,"line_end":911,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64560,"byte_end":64563,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64568,"byte_end":64662,"line_start":913,"line_end":913,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64667,"byte_end":64710,"line_start":914,"line_end":914,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64715,"byte_end":64718,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64723,"byte_end":64733,"line_start":916,"line_end":916,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64738,"byte_end":64741,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + keccak256_base + keccak256_byte * num_bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":64746,"byte_end":64858,"line_start":918,"line_end":918,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65762,"byte_end":65771,"line_start":940,"line_end":940,"column_start":12,"column_end":21},"name":"keccak512","qualname":"<VMLogic>::keccak512","value":"pub fn keccak512(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using keccak512 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using keccak512 and returns it into `register_id`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65345,"byte_end":65422,"line_start":930,"line_end":930,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65427,"byte_end":65430,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65435,"byte_end":65447,"line_start":932,"line_end":932,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65452,"byte_end":65455,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65460,"byte_end":65554,"line_start":934,"line_end":934,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65559,"byte_end":65602,"line_start":935,"line_end":935,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65607,"byte_end":65610,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65615,"byte_end":65625,"line_start":937,"line_end":937,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65630,"byte_end":65633,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + keccak512_base + keccak512_byte * num_bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":65638,"byte_end":65750,"line_start":939,"line_end":939,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":66627,"byte_end":66630,"line_start":958,"line_end":958,"column_start":12,"column_end":15},"name":"gas","qualname":"<VMLogic>::gas","value":"pub fn gas(&mut Self, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Called by gas metering injected into Wasm. Counts both towards `burnt_gas` and `used_gas`.","sig":null,"attributes":[{"value":"/ Called by gas metering injected into Wasm. Counts both towards `burnt_gas` and `used_gas`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":66237,"byte_end":66331,"line_start":951,"line_end":951,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":66336,"byte_end":66339,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":66344,"byte_end":66356,"line_start":953,"line_end":953,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":66361,"byte_end":66364,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ * If passed gas amount somehow overflows internal gas counters returns `IntegerOverflow`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":66369,"byte_end":66462,"line_start":955,"line_end":955,"column_start":5,"column_end":98}},{"value":"/ * If we exceed usage limit imposed on burnt gas returns `GasLimitExceeded`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":66467,"byte_end":66546,"line_start":956,"line_end":956,"column_start":5,"column_end":84}},{"value":"/ * If we exceed the `prepaid_gas` then returns `GasExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":66551,"byte_end":66615,"line_start":957,"line_end":957,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":70045,"byte_end":70059,"line_start":1025,"line_end":1025,"column_start":12,"column_end":26},"name":"promise_create","qualname":"<VMLogic>::promise_create","value":"pub fn promise_create(&mut Self, u64, u64, u64, u64, u64, u64, u64, Gas)\n-> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a promise that will execute a method on account with given arguments and attaches\n the given amount and gas. `amount_ptr` point to slices of bytes representing `u128`.","sig":null,"attributes":[{"value":"/ Creates a promise that will execute a method on account with given arguments and attaches","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69151,"byte_end":69244,"line_start":1006,"line_end":1006,"column_start":5,"column_end":98}},{"value":"/ the given amount and gas. `amount_ptr` point to slices of bytes representing `u128`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69249,"byte_end":69337,"line_start":1007,"line_end":1007,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69342,"byte_end":69345,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69350,"byte_end":69362,"line_start":1009,"line_end":1009,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69367,"byte_end":69370,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ * If `account_id_len + account_id_ptr` or `method_name_len + method_name_ptr` or","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69375,"byte_end":69459,"line_start":1011,"line_end":1011,"column_start":5,"column_end":89}},{"value":"/ `arguments_len + arguments_ptr` or `amount_ptr + 16` points outside the memory of the guest","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69464,"byte_end":69559,"line_start":1012,"line_end":1012,"column_start":5,"column_end":100}},{"value":"/ or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69564,"byte_end":69608,"line_start":1013,"line_end":1013,"column_start":5,"column_end":49}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69613,"byte_end":69673,"line_start":1014,"line_end":1014,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69678,"byte_end":69681,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69686,"byte_end":69699,"line_start":1016,"line_end":1016,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69704,"byte_end":69707,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69712,"byte_end":69804,"line_start":1018,"line_end":1018,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69809,"byte_end":69820,"line_start":1019,"line_end":1019,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69825,"byte_end":69828,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69833,"byte_end":69843,"line_start":1021,"line_end":1021,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69848,"byte_end":69851,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ Since `promise_create` is a convenience wrapper around `promise_batch_create` and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69856,"byte_end":69941,"line_start":1023,"line_end":1023,"column_start":5,"column_end":90}},{"value":"/ `promise_batch_action_function_call`. This also means it charges `base` cost twice.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":69946,"byte_end":70033,"line_start":1024,"line_end":1024,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71597,"byte_end":71609,"line_start":1068,"line_end":1068,"column_start":12,"column_end":24},"name":"promise_then","qualname":"<VMLogic>::promise_then","value":"pub fn promise_then(&mut Self, u64, u64, u64, u64, u64, u64, u64, u64, u64)\n-> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Attaches the callback that is executed after promise pointed by `promise_idx` is complete.","sig":null,"attributes":[{"value":"/ Attaches the callback that is executed after promise pointed by `promise_idx` is complete.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":70692,"byte_end":70786,"line_start":1049,"line_end":1049,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":70791,"byte_end":70794,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":70799,"byte_end":70811,"line_start":1051,"line_end":1051,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":70816,"byte_end":70819,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":70824,"byte_end":70920,"line_start":1053,"line_end":1053,"column_start":5,"column_end":101}},{"value":"/ * If `account_id_len + account_id_ptr` or `method_name_len + method_name_ptr` or","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":70925,"byte_end":71009,"line_start":1054,"line_end":1054,"column_start":5,"column_end":89}},{"value":"/   `arguments_len + arguments_ptr` or `amount_ptr + 16` points outside the memory of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71014,"byte_end":71105,"line_start":1055,"line_end":1055,"column_start":5,"column_end":96}},{"value":"/   guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71110,"byte_end":71162,"line_start":1056,"line_end":1056,"column_start":5,"column_end":57}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71167,"byte_end":71227,"line_start":1057,"line_end":1057,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71232,"byte_end":71235,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71240,"byte_end":71253,"line_start":1059,"line_end":1059,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71258,"byte_end":71261,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71266,"byte_end":71358,"line_start":1061,"line_end":1061,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71363,"byte_end":71374,"line_start":1062,"line_end":1062,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71379,"byte_end":71382,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71387,"byte_end":71397,"line_start":1064,"line_end":1064,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71402,"byte_end":71405,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ Since `promise_create` is a convenience wrapper around `promise_batch_then` and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71410,"byte_end":71493,"line_start":1066,"line_end":1066,"column_start":5,"column_end":88}},{"value":"/ `promise_batch_action_function_call`. This also means it charges `base` cost twice.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":71498,"byte_end":71585,"line_start":1067,"line_end":1067,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73586,"byte_end":73597,"line_start":1119,"line_end":1119,"column_start":12,"column_end":23},"name":"promise_and","qualname":"<VMLogic>::promise_and","value":"pub fn promise_and(&mut Self, u64, u64) -> Result<PromiseIndex>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise which completes when time all promises passed as arguments complete.\n Cannot be used with registers. `promise_idx_ptr` points to an array of `u64` elements, with\n `promise_idx_count` denoting the number of elements. The array contains indices of promises\n that need to be waited on jointly.","sig":null,"attributes":[{"value":"/ Creates a new promise which completes when time all promises passed as arguments complete.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72291,"byte_end":72385,"line_start":1094,"line_end":1094,"column_start":5,"column_end":99}},{"value":"/ Cannot be used with registers. `promise_idx_ptr` points to an array of `u64` elements, with","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72390,"byte_end":72485,"line_start":1095,"line_end":1095,"column_start":5,"column_end":100}},{"value":"/ `promise_idx_count` denoting the number of elements. The array contains indices of promises","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72490,"byte_end":72585,"line_start":1096,"line_end":1096,"column_start":5,"column_end":100}},{"value":"/ that need to be waited on jointly.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72590,"byte_end":72628,"line_start":1097,"line_end":1097,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72633,"byte_end":72636,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72641,"byte_end":72653,"line_start":1099,"line_end":1099,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72658,"byte_end":72661,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ * If `promise_ids_ptr + 8 * promise_idx_count` extend outside the guest memory returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72666,"byte_end":72756,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/   `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72761,"byte_end":72791,"line_start":1102,"line_end":1102,"column_start":5,"column_end":35}},{"value":"/ * If any of the promises in the array do not correspond to existing promises returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72796,"byte_end":72884,"line_start":1103,"line_end":1103,"column_start":5,"column_end":93}},{"value":"/   `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72889,"byte_end":72917,"line_start":1104,"line_end":1104,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72922,"byte_end":72982,"line_start":1105,"line_end":1105,"column_start":5,"column_end":65}},{"value":"/ * If the total number of receipt dependencies exceeds `max_number_input_data_dependencies`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":72987,"byte_end":73081,"line_start":1106,"line_end":1106,"column_start":5,"column_end":99}},{"value":"/   limit returns `NumInputDataDependenciesExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73086,"byte_end":73141,"line_start":1107,"line_end":1107,"column_start":5,"column_end":60}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73146,"byte_end":73237,"line_start":1108,"line_end":1108,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73242,"byte_end":73278,"line_start":1109,"line_end":1109,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73283,"byte_end":73286,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73291,"byte_end":73304,"line_start":1111,"line_end":1111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73309,"byte_end":73312,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73317,"byte_end":73409,"line_start":1113,"line_end":1113,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73414,"byte_end":73425,"line_start":1114,"line_end":1114,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73430,"byte_end":73433,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73438,"byte_end":73448,"line_start":1116,"line_end":1116,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73453,"byte_end":73456,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ `base + promise_and_base + promise_and_per_promise * num_promises + cost of reading promise ids from memory`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":73461,"byte_end":73574,"line_start":1118,"line_end":1118,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76359,"byte_end":76379,"line_start":1187,"line_end":1187,"column_start":12,"column_end":32},"name":"promise_batch_create","qualname":"<VMLogic>::promise_batch_create","value":"pub fn promise_batch_create(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise towards given `account_id` without any actions attached to it.","sig":null,"attributes":[{"value":"/ Creates a new promise towards given `account_id` without any actions attached to it.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":75545,"byte_end":75633,"line_start":1168,"line_end":1168,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":75638,"byte_end":75641,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":75646,"byte_end":75658,"line_start":1170,"line_end":1170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":75663,"byte_end":75666,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ * If `account_id_len + account_id_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":75671,"byte_end":75760,"line_start":1172,"line_end":1172,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":75765,"byte_end":75801,"line_start":1173,"line_end":1173,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":75806,"byte_end":75866,"line_start":1174,"line_end":1174,"column_start":5,"column_end":65}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":75871,"byte_end":75962,"line_start":1175,"line_end":1175,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":75967,"byte_end":76003,"line_start":1176,"line_end":1176,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76008,"byte_end":76011,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76016,"byte_end":76029,"line_start":1178,"line_end":1178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76034,"byte_end":76037,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76042,"byte_end":76134,"line_start":1180,"line_end":1180,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76139,"byte_end":76150,"line_start":1181,"line_end":1181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76155,"byte_end":76158,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76163,"byte_end":76173,"line_start":1183,"line_end":1183,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76178,"byte_end":76181,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + cost of reading and decoding the account id + dispatch cost of the receipt`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76186,"byte_end":76287,"line_start":1185,"line_end":1185,"column_start":5,"column_end":106}},{"value":"/ `used_gas := burnt_gas + exec cost of the receipt`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":76292,"byte_end":76347,"line_start":1186,"line_end":1186,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":78146,"byte_end":78164,"line_start":1229,"line_end":1229,"column_start":12,"column_end":30},"name":"promise_batch_then","qualname":"<VMLogic>::promise_batch_then","value":"pub fn promise_batch_then(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise towards given `account_id` without any actions attached, that is\n executed after promise pointed by `promise_idx` is complete.","sig":null,"attributes":[{"value":"/ Creates a new promise towards given `account_id` without any actions attached, that is","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77159,"byte_end":77249,"line_start":1208,"line_end":1208,"column_start":5,"column_end":95}},{"value":"/ executed after promise pointed by `promise_idx` is complete.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77254,"byte_end":77318,"line_start":1209,"line_end":1209,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77323,"byte_end":77326,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77331,"byte_end":77343,"line_start":1211,"line_end":1211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77348,"byte_end":77351,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77356,"byte_end":77452,"line_start":1213,"line_end":1213,"column_start":5,"column_end":101}},{"value":"/ * If `account_id_len + account_id_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77457,"byte_end":77546,"line_start":1214,"line_end":1214,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77551,"byte_end":77587,"line_start":1215,"line_end":1215,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77592,"byte_end":77652,"line_start":1216,"line_end":1216,"column_start":5,"column_end":65}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77657,"byte_end":77748,"line_start":1217,"line_end":1217,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77753,"byte_end":77789,"line_start":1218,"line_end":1218,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77794,"byte_end":77797,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77802,"byte_end":77815,"line_start":1220,"line_end":1220,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77820,"byte_end":77823,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77828,"byte_end":77920,"line_start":1222,"line_end":1222,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77925,"byte_end":77936,"line_start":1223,"line_end":1223,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77941,"byte_end":77944,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77949,"byte_end":77959,"line_start":1225,"line_end":1225,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77964,"byte_end":77967,"line_start":1226,"line_end":1226,"column_start":5,"column_end":8}},{"value":"/ `base + cost of reading and decoding the account id + dispatch&execution cost of the receipt","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":77972,"byte_end":78068,"line_start":1227,"line_end":1227,"column_start":5,"column_end":101}},{"value":"/  + dispatch&execution base cost for each data dependency`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":78073,"byte_end":78134,"line_start":1228,"line_end":1228,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":81372,"byte_end":81407,"line_start":1309,"line_end":1309,"column_start":12,"column_end":47},"name":"promise_batch_action_create_account","qualname":"<VMLogic>::promise_batch_action_create_account","value":"pub fn promise_batch_action_create_account(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `CreateAccount` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `CreateAccount` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":80761,"byte_end":80852,"line_start":1295,"line_end":1295,"column_start":5,"column_end":96}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":80857,"byte_end":80875,"line_start":1296,"line_end":1296,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":80880,"byte_end":80883,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":80888,"byte_end":80900,"line_start":1298,"line_end":1298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":80905,"byte_end":80908,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":80913,"byte_end":81009,"line_start":1300,"line_end":1300,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":81014,"byte_end":81098,"line_start":1301,"line_end":1301,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":81103,"byte_end":81164,"line_start":1302,"line_end":1302,"column_start":5,"column_end":66}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":81169,"byte_end":81229,"line_start":1303,"line_end":1303,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":81234,"byte_end":81237,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":81242,"byte_end":81252,"line_start":1305,"line_end":1305,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":81257,"byte_end":81260,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action fee`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":81265,"byte_end":81310,"line_start":1307,"line_end":1307,"column_start":5,"column_end":50}},{"value":"/ `used_gas := burnt_gas + exec action fee`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":81315,"byte_end":81360,"line_start":1308,"line_end":1308,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":83035,"byte_end":83071,"line_start":1346,"line_end":1346,"column_start":12,"column_end":48},"name":"promise_batch_action_deploy_contract","qualname":"<VMLogic>::promise_batch_action_deploy_contract","value":"pub fn promise_batch_action_deploy_contract(&mut Self, u64, u64, u64)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeployContract` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeployContract` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82072,"byte_end":82164,"line_start":1329,"line_end":1329,"column_start":5,"column_end":97}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82169,"byte_end":82187,"line_start":1330,"line_end":1330,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82192,"byte_end":82195,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82200,"byte_end":82212,"line_start":1332,"line_end":1332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82217,"byte_end":82220,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82225,"byte_end":82321,"line_start":1334,"line_end":1334,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82326,"byte_end":82410,"line_start":1335,"line_end":1335,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82415,"byte_end":82476,"line_start":1336,"line_end":1336,"column_start":5,"column_end":66}},{"value":"/ * If `code_len + code_ptr` points outside the memory of the guest or host returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82481,"byte_end":82566,"line_start":1337,"line_end":1337,"column_start":5,"column_end":90}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82571,"byte_end":82599,"line_start":1338,"line_end":1338,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82604,"byte_end":82664,"line_start":1339,"line_end":1339,"column_start":5,"column_end":65}},{"value":"/ * If the contract code length exceeds `max_contract_size` returns `ContractSizeExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82669,"byte_end":82762,"line_start":1340,"line_end":1340,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82767,"byte_end":82770,"line_start":1341,"line_end":1341,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82775,"byte_end":82785,"line_start":1342,"line_end":1342,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82790,"byte_end":82793,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory `","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82798,"byte_end":82929,"line_start":1344,"line_end":1344,"column_start":5,"column_end":136}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":82934,"byte_end":83023,"line_start":1345,"line_end":1345,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":85463,"byte_end":85497,"line_start":1405,"line_end":1405,"column_start":12,"column_end":46},"name":"promise_batch_action_function_call","qualname":"<VMLogic>::promise_batch_action_function_call","value":"pub fn promise_batch_action_function_call(&mut Self, u64, u64, u64, u64, u64,\n                                          u64, Gas) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `FunctionCall` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `FunctionCall` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":84448,"byte_end":84538,"line_start":1387,"line_end":1387,"column_start":5,"column_end":95}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":84543,"byte_end":84561,"line_start":1388,"line_end":1388,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":84566,"byte_end":84569,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":84574,"byte_end":84586,"line_start":1390,"line_end":1390,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":84591,"byte_end":84594,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":84599,"byte_end":84695,"line_start":1392,"line_end":1392,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":84700,"byte_end":84784,"line_start":1393,"line_end":1393,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":84789,"byte_end":84850,"line_start":1394,"line_end":1394,"column_start":5,"column_end":66}},{"value":"/ * If `method_name_len + method_name_ptr` or `arguments_len + arguments_ptr` or","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":84855,"byte_end":84937,"line_start":1395,"line_end":1395,"column_start":5,"column_end":87}},{"value":"/ `amount_ptr + 16` points outside the memory of the guest or host returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":84942,"byte_end":85018,"line_start":1396,"line_end":1396,"column_start":5,"column_end":81}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":85023,"byte_end":85051,"line_start":1397,"line_end":1397,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":85056,"byte_end":85116,"line_start":1398,"line_end":1398,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":85121,"byte_end":85124,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":85129,"byte_end":85139,"line_start":1400,"line_end":1400,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":85144,"byte_end":85147,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":85152,"byte_end":85281,"line_start":1402,"line_end":1402,"column_start":5,"column_end":134}},{"value":"/  + cost of reading u128, method_name and arguments from the memory`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":85286,"byte_end":85357,"line_start":1403,"line_end":1403,"column_start":5,"column_end":76}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":85362,"byte_end":85451,"line_start":1404,"line_end":1404,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":88035,"byte_end":88064,"line_start":1469,"line_end":1469,"column_start":12,"column_end":41},"name":"promise_batch_action_transfer","qualname":"<VMLogic>::promise_batch_action_transfer","value":"pub fn promise_batch_action_transfer(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `Transfer` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `Transfer` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87182,"byte_end":87268,"line_start":1453,"line_end":1453,"column_start":5,"column_end":91}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87273,"byte_end":87291,"line_start":1454,"line_end":1454,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87296,"byte_end":87299,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87304,"byte_end":87316,"line_start":1456,"line_end":1456,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87321,"byte_end":87324,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87329,"byte_end":87425,"line_start":1458,"line_end":1458,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87430,"byte_end":87514,"line_start":1459,"line_end":1459,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87519,"byte_end":87580,"line_start":1460,"line_end":1460,"column_start":5,"column_end":66}},{"value":"/ * If `amount_ptr + 16` points outside the memory of the guest or host returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87585,"byte_end":87666,"line_start":1461,"line_end":1461,"column_start":5,"column_end":86}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87671,"byte_end":87699,"line_start":1462,"line_end":1462,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87704,"byte_end":87764,"line_start":1463,"line_end":1463,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87769,"byte_end":87772,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87777,"byte_end":87787,"line_start":1465,"line_end":1465,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87792,"byte_end":87795,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading u128 from memory `","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87800,"byte_end":87929,"line_start":1467,"line_end":1467,"column_start":5,"column_end":134}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":87934,"byte_end":88023,"line_start":1468,"line_end":1468,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90728,"byte_end":90754,"line_start":1533,"line_end":1533,"column_start":12,"column_end":38},"name":"promise_batch_action_stake","qualname":"<VMLogic>::promise_batch_action_stake","value":"pub fn promise_batch_action_stake(&mut Self, u64, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `Stake` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `Stake` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":89738,"byte_end":89821,"line_start":1516,"line_end":1516,"column_start":5,"column_end":88}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":89826,"byte_end":89844,"line_start":1517,"line_end":1517,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":89849,"byte_end":89852,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":89857,"byte_end":89869,"line_start":1519,"line_end":1519,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":89874,"byte_end":89877,"line_start":1520,"line_end":1520,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":89882,"byte_end":89978,"line_start":1521,"line_end":1521,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":89983,"byte_end":90067,"line_start":1522,"line_end":1522,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90072,"byte_end":90133,"line_start":1523,"line_end":1523,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90138,"byte_end":90230,"line_start":1524,"line_end":1524,"column_start":5,"column_end":97}},{"value":"/ * If `amount_ptr + 16` or `public_key_len + public_key_ptr` points outside the memory of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90235,"byte_end":90331,"line_start":1525,"line_end":1525,"column_start":5,"column_end":101}},{"value":"/ guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90336,"byte_end":90386,"line_start":1526,"line_end":1526,"column_start":5,"column_end":55}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90391,"byte_end":90451,"line_start":1527,"line_end":1527,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90456,"byte_end":90459,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90464,"byte_end":90474,"line_start":1529,"line_end":1529,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90479,"byte_end":90482,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90487,"byte_end":90622,"line_start":1531,"line_end":1531,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":90627,"byte_end":90716,"line_start":1532,"line_end":1532,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92682,"byte_end":92727,"line_start":1579,"line_end":1579,"column_start":12,"column_end":57},"name":"promise_batch_action_add_key_with_full_access","qualname":"<VMLogic>::promise_batch_action_add_key_with_full_access","value":"pub fn promise_batch_action_add_key_with_full_access(&mut Self, u64, u64, u64,\n                                                     u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `AddKey` action to the batch of actions for the given promise pointed by\n `promise_idx`. The access key will have `FullAccess` permission.","sig":null,"attributes":[{"value":"/ Appends `AddKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":91662,"byte_end":91746,"line_start":1562,"line_end":1562,"column_start":5,"column_end":89}},{"value":"/ `promise_idx`. The access key will have `FullAccess` permission.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":91751,"byte_end":91819,"line_start":1563,"line_end":1563,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":91824,"byte_end":91827,"line_start":1564,"line_end":1564,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":91832,"byte_end":91844,"line_start":1565,"line_end":1565,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":91849,"byte_end":91852,"line_start":1566,"line_end":1566,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":91857,"byte_end":91953,"line_start":1567,"line_end":1567,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":91958,"byte_end":92042,"line_start":1568,"line_end":1568,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92047,"byte_end":92108,"line_start":1569,"line_end":1569,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92113,"byte_end":92205,"line_start":1570,"line_end":1570,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92210,"byte_end":92299,"line_start":1571,"line_end":1571,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92304,"byte_end":92340,"line_start":1572,"line_end":1572,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92345,"byte_end":92405,"line_start":1573,"line_end":1573,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92410,"byte_end":92413,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92418,"byte_end":92428,"line_start":1575,"line_end":1575,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92433,"byte_end":92436,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92441,"byte_end":92576,"line_start":1577,"line_end":1577,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":92581,"byte_end":92670,"line_start":1578,"line_end":1578,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94877,"byte_end":94924,"line_start":1626,"line_end":1626,"column_start":12,"column_end":59},"name":"promise_batch_action_add_key_with_function_call","qualname":"<VMLogic>::promise_batch_action_add_key_with_function_call","value":"pub fn promise_batch_action_add_key_with_function_call(&mut Self, u64, u64,\n                                                       u64, u64, u64, u64,\n                                                       u64, u64, u64)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `AddKey` action to the batch of actions for the given promise pointed by\n `promise_idx`. The access key will have `FunctionCall` permission.","sig":null,"attributes":[{"value":"/ Appends `AddKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":93632,"byte_end":93716,"line_start":1607,"line_end":1607,"column_start":5,"column_end":89}},{"value":"/ `promise_idx`. The access key will have `FunctionCall` permission.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":93721,"byte_end":93791,"line_start":1608,"line_end":1608,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":93796,"byte_end":93799,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":93804,"byte_end":93816,"line_start":1610,"line_end":1610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":93821,"byte_end":93824,"line_start":1611,"line_end":1611,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":93829,"byte_end":93925,"line_start":1612,"line_end":1612,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":93930,"byte_end":94014,"line_start":1613,"line_end":1613,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94019,"byte_end":94080,"line_start":1614,"line_end":1614,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94085,"byte_end":94177,"line_start":1615,"line_end":1615,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr`, `allowance_ptr + 16`,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94182,"byte_end":94247,"line_start":1616,"line_end":1616,"column_start":5,"column_end":70}},{"value":"/ `receiver_id_len + receiver_id_ptr` or `method_names_len + method_names_ptr` points outside","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94252,"byte_end":94347,"line_start":1617,"line_end":1617,"column_start":5,"column_end":100}},{"value":"/ the memory of the guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94352,"byte_end":94420,"line_start":1618,"line_end":1618,"column_start":5,"column_end":73}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94425,"byte_end":94485,"line_start":1619,"line_end":1619,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94490,"byte_end":94493,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94498,"byte_end":94508,"line_start":1621,"line_end":1621,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94513,"byte_end":94516,"line_start":1622,"line_end":1622,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94521,"byte_end":94650,"line_start":1623,"line_end":1623,"column_start":5,"column_end":134}},{"value":"/  + cost of reading u128, method_names and public key from the memory + cost of reading and parsing account name`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94655,"byte_end":94771,"line_start":1624,"line_end":1624,"column_start":5,"column_end":121}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":94776,"byte_end":94865,"line_start":1625,"line_end":1625,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97881,"byte_end":97912,"line_start":1697,"line_end":1697,"column_start":12,"column_end":43},"name":"promise_batch_action_delete_key","qualname":"<VMLogic>::promise_batch_action_delete_key","value":"pub fn promise_batch_action_delete_key(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeleteKey` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeleteKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":96908,"byte_end":96995,"line_start":1680,"line_end":1680,"column_start":5,"column_end":92}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97000,"byte_end":97018,"line_start":1681,"line_end":1681,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97023,"byte_end":97026,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97031,"byte_end":97043,"line_start":1683,"line_end":1683,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97048,"byte_end":97051,"line_start":1684,"line_end":1684,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97056,"byte_end":97152,"line_start":1685,"line_end":1685,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97157,"byte_end":97241,"line_start":1686,"line_end":1686,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97246,"byte_end":97307,"line_start":1687,"line_end":1687,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97312,"byte_end":97404,"line_start":1688,"line_end":1688,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97409,"byte_end":97498,"line_start":1689,"line_end":1689,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97503,"byte_end":97539,"line_start":1690,"line_end":1690,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97544,"byte_end":97604,"line_start":1691,"line_end":1691,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97609,"byte_end":97612,"line_start":1692,"line_end":1692,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97617,"byte_end":97627,"line_start":1693,"line_end":1693,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97632,"byte_end":97635,"line_start":1694,"line_end":1694,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97640,"byte_end":97775,"line_start":1695,"line_end":1695,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":97780,"byte_end":97869,"line_start":1696,"line_end":1696,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99651,"byte_end":99686,"line_start":1740,"line_end":1740,"column_start":12,"column_end":47},"name":"promise_batch_action_delete_account","qualname":"<VMLogic>::promise_batch_action_delete_account","value":"pub fn promise_batch_action_delete_account(&mut Self, u64, u64, u64)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeleteAccount` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeleteAccount` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":98751,"byte_end":98842,"line_start":1724,"line_end":1724,"column_start":5,"column_end":96}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":98847,"byte_end":98865,"line_start":1725,"line_end":1725,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":98870,"byte_end":98873,"line_start":1726,"line_end":1726,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":98878,"byte_end":98890,"line_start":1727,"line_end":1727,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":98895,"byte_end":98898,"line_start":1728,"line_end":1728,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":98903,"byte_end":98999,"line_start":1729,"line_end":1729,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99004,"byte_end":99088,"line_start":1730,"line_end":1730,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99093,"byte_end":99154,"line_start":1731,"line_end":1731,"column_start":5,"column_end":66}},{"value":"/ * If `beneficiary_id_len + beneficiary_id_ptr` points outside the memory of the guest or","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99159,"byte_end":99251,"line_start":1732,"line_end":1732,"column_start":5,"column_end":97}},{"value":"/ host returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99256,"byte_end":99297,"line_start":1733,"line_end":1733,"column_start":5,"column_end":46}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99302,"byte_end":99362,"line_start":1734,"line_end":1734,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99367,"byte_end":99370,"line_start":1735,"line_end":1735,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99375,"byte_end":99385,"line_start":1736,"line_end":1736,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99390,"byte_end":99393,"line_start":1737,"line_end":1737,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading and parsing account id from memory `","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99398,"byte_end":99545,"line_start":1738,"line_end":1738,"column_start":5,"column_end":152}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":99550,"byte_end":99639,"line_start":1739,"line_end":1739,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101196,"byte_end":101217,"line_start":1782,"line_end":1782,"column_start":12,"column_end":33},"name":"promise_results_count","qualname":"<VMLogic>::promise_results_count","value":"pub fn promise_results_count(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" If the current function is invoked by a callback we can access the execution results of the\n promises that caused the callback. This function returns the number of complete and\n incomplete callbacks.","sig":null,"attributes":[{"value":"/ If the current function is invoked by a callback we can access the execution results of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":100571,"byte_end":100666,"line_start":1768,"line_end":1768,"column_start":5,"column_end":100}},{"value":"/ promises that caused the callback. This function returns the number of complete and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":100671,"byte_end":100758,"line_start":1769,"line_end":1769,"column_start":5,"column_end":92}},{"value":"/ incomplete callbacks.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":100763,"byte_end":100788,"line_start":1770,"line_end":1770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":100793,"byte_end":100796,"line_start":1771,"line_end":1771,"column_start":5,"column_end":8}},{"value":"/ Note, we are only going to have incomplete callbacks once we have promise_or combinator.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":100801,"byte_end":100893,"line_start":1772,"line_end":1772,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":100898,"byte_end":100901,"line_start":1773,"line_end":1773,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":100906,"byte_end":100909,"line_start":1774,"line_end":1774,"column_start":5,"column_end":8}},{"value":"/ * If there is only one callback returns `1`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":100914,"byte_end":100962,"line_start":1775,"line_end":1775,"column_start":5,"column_end":53}},{"value":"/ * If there are multiple callbacks (e.g. created through `promise_and`) returns their number;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":100967,"byte_end":101063,"line_start":1776,"line_end":1776,"column_start":5,"column_end":101}},{"value":"/ * If the function was called not through the callback returns `0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101068,"byte_end":101138,"line_start":1777,"line_end":1777,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101143,"byte_end":101146,"line_start":1778,"line_end":1778,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101151,"byte_end":101161,"line_start":1779,"line_end":1779,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101166,"byte_end":101169,"line_start":1780,"line_end":1780,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101174,"byte_end":101184,"line_start":1781,"line_end":1781,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102569,"byte_end":102583,"line_start":1815,"line_end":1815,"column_start":12,"column_end":26},"name":"promise_result","qualname":"<VMLogic>::promise_result","value":"pub fn promise_result(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" If the current function is invoked by a callback we can access the execution results of the\n promises that caused the callback. This function returns the result in blob format and\n places it into the register.","sig":null,"attributes":[{"value":"/ If the current function is invoked by a callback we can access the execution results of the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101542,"byte_end":101637,"line_start":1793,"line_end":1793,"column_start":5,"column_end":100}},{"value":"/ promises that caused the callback. This function returns the result in blob format and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101642,"byte_end":101732,"line_start":1794,"line_end":1794,"column_start":5,"column_end":95}},{"value":"/ places it into the register.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101737,"byte_end":101769,"line_start":1795,"line_end":1795,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101774,"byte_end":101777,"line_start":1796,"line_end":1796,"column_start":5,"column_end":8}},{"value":"/ * If promise result is complete and successful copies its blob into the register;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101782,"byte_end":101867,"line_start":1797,"line_end":1797,"column_start":5,"column_end":90}},{"value":"/ * If promise result is complete and failed or incomplete keeps register unused;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101872,"byte_end":101955,"line_start":1798,"line_end":1798,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101960,"byte_end":101963,"line_start":1799,"line_end":1799,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101968,"byte_end":101981,"line_start":1800,"line_end":1800,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101986,"byte_end":101989,"line_start":1801,"line_end":1801,"column_start":5,"column_end":8}},{"value":"/ * If promise result is not complete returns `0`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":101994,"byte_end":102046,"line_start":1802,"line_end":1802,"column_start":5,"column_end":57}},{"value":"/ * If promise result is complete and successful returns `1`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102051,"byte_end":102114,"line_start":1803,"line_end":1803,"column_start":5,"column_end":68}},{"value":"/ * If promise result is complete and failed returns `2`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102119,"byte_end":102178,"line_start":1804,"line_end":1804,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102183,"byte_end":102186,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102191,"byte_end":102203,"line_start":1806,"line_end":1806,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102208,"byte_end":102211,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ * If `result_id` does not correspond to an existing result returns `InvalidPromiseResultIndex`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102216,"byte_end":102315,"line_start":1808,"line_end":1808,"column_start":5,"column_end":104}},{"value":"/ * If copying the blob exhausts the memory limit it returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102320,"byte_end":102407,"line_start":1809,"line_end":1809,"column_start":5,"column_end":92}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102412,"byte_end":102472,"line_start":1810,"line_end":1810,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102477,"byte_end":102480,"line_start":1811,"line_end":1811,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102485,"byte_end":102495,"line_start":1812,"line_end":1812,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102500,"byte_end":102503,"line_start":1813,"line_end":1813,"column_start":5,"column_end":8}},{"value":"/ `base + cost of writing data into a register`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":102508,"byte_end":102557,"line_start":1814,"line_end":1814,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103706,"byte_end":103720,"line_start":1847,"line_end":1847,"column_start":12,"column_end":26},"name":"promise_return","qualname":"<VMLogic>::promise_return","value":"pub fn promise_return(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" When promise `promise_idx` finishes executing its result is considered to be the result of\n the current function.","sig":null,"attributes":[{"value":"/ When promise `promise_idx` finishes executing its result is considered to be the result of","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103308,"byte_end":103402,"line_start":1836,"line_end":1836,"column_start":5,"column_end":99}},{"value":"/ the current function.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103407,"byte_end":103432,"line_start":1837,"line_end":1837,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103437,"byte_end":103440,"line_start":1838,"line_end":1838,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103445,"byte_end":103457,"line_start":1839,"line_end":1839,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103462,"byte_end":103465,"line_start":1840,"line_end":1840,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103470,"byte_end":103566,"line_start":1841,"line_end":1841,"column_start":5,"column_end":101}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103571,"byte_end":103631,"line_start":1842,"line_end":1842,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103636,"byte_end":103639,"line_start":1843,"line_end":1843,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103644,"byte_end":103654,"line_start":1844,"line_end":1844,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103659,"byte_end":103662,"line_start":1845,"line_end":1845,"column_start":5,"column_end":8}},{"value":"/ `base + promise_return`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":103667,"byte_end":103694,"line_start":1846,"line_end":1846,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":105094,"byte_end":105106,"line_start":1883,"line_end":1883,"column_start":12,"column_end":24},"name":"value_return","qualname":"<VMLogic>::value_return","value":"pub fn value_return(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the blob of data as the return value of the contract.","sig":null,"attributes":[{"value":"/ Sets the blob of data as the return value of the contract.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104553,"byte_end":104615,"line_start":1872,"line_end":1872,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104620,"byte_end":104623,"line_start":1873,"line_end":1873,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104628,"byte_end":104640,"line_start":1874,"line_end":1874,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104645,"byte_end":104648,"line_start":1875,"line_end":1875,"column_start":5,"column_end":8}},{"value":"/ * If `value_len + value_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104653,"byte_end":104749,"line_start":1876,"line_end":1876,"column_start":5,"column_end":101}},{"value":"/   returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104754,"byte_end":104792,"line_start":1877,"line_end":1877,"column_start":5,"column_end":43}},{"value":"/ * if the length of the returned data exceeds `max_length_returned_data` returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104797,"byte_end":104880,"line_start":1878,"line_end":1878,"column_start":5,"column_end":88}},{"value":"/   `ReturnedValueLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104885,"byte_end":104921,"line_start":1879,"line_end":1879,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104926,"byte_end":104929,"line_start":1880,"line_end":1880,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104934,"byte_end":104944,"line_start":1881,"line_end":1881,"column_start":5,"column_end":15}},{"value":"/ `base + cost of reading return value from memory or register + dispatch&exec cost per byte of the data sent * num data receivers`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":104949,"byte_end":105082,"line_start":1882,"line_end":1882,"column_start":5,"column_end":138}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107278,"byte_end":107283,"line_start":1927,"line_end":1927,"column_start":12,"column_end":17},"name":"panic","qualname":"<VMLogic>::panic","value":"pub fn panic(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Terminates the execution of the program with panic `GuestPanic`.","sig":null,"attributes":[{"value":"/ Terminates the execution of the program with panic `GuestPanic`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107152,"byte_end":107220,"line_start":1922,"line_end":1922,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107225,"byte_end":107228,"line_start":1923,"line_end":1923,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107233,"byte_end":107243,"line_start":1924,"line_end":1924,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107248,"byte_end":107251,"line_start":1925,"line_end":1925,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107256,"byte_end":107266,"line_start":1926,"line_end":1926,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107950,"byte_end":107960,"line_start":1943,"line_end":1943,"column_start":12,"column_end":22},"name":"panic_utf8","qualname":"<VMLogic>::panic_utf8","value":"pub fn panic_utf8(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Guest panics with the UTF-8 encoded string.\n If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","sig":null,"attributes":[{"value":"/ Guest panics with the UTF-8 encoded string.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107456,"byte_end":107503,"line_start":1932,"line_end":1932,"column_start":5,"column_end":52}},{"value":"/ If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107508,"byte_end":107597,"line_start":1933,"line_end":1933,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107602,"byte_end":107605,"line_start":1934,"line_end":1934,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107610,"byte_end":107622,"line_start":1935,"line_end":1935,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107627,"byte_end":107630,"line_start":1936,"line_end":1936,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107635,"byte_end":107720,"line_start":1937,"line_end":1937,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107725,"byte_end":107772,"line_start":1938,"line_end":1938,"column_start":5,"column_end":52}},{"value":"/ * If string is longer than `max_log_len` returns `TotalLogLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107777,"byte_end":107855,"line_start":1939,"line_end":1939,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107860,"byte_end":107863,"line_start":1940,"line_end":1940,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107868,"byte_end":107878,"line_start":1941,"line_end":1941,"column_start":5,"column_end":15}},{"value":"/ `base + cost of reading and decoding a utf8 string`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":107883,"byte_end":107938,"line_start":1942,"line_end":1942,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108814,"byte_end":108822,"line_start":1963,"line_end":1963,"column_start":12,"column_end":20},"name":"log_utf8","qualname":"<VMLogic>::log_utf8","value":"pub fn log_utf8(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Logs the UTF-8 encoded string.\n If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","sig":null,"attributes":[{"value":"/ Logs the UTF-8 encoded string.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108150,"byte_end":108184,"line_start":1948,"line_end":1948,"column_start":5,"column_end":39}},{"value":"/ If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108189,"byte_end":108278,"line_start":1949,"line_end":1949,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108283,"byte_end":108286,"line_start":1950,"line_end":1950,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108291,"byte_end":108303,"line_start":1951,"line_end":1951,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108308,"byte_end":108311,"line_start":1952,"line_end":1952,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108316,"byte_end":108401,"line_start":1953,"line_end":1953,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108406,"byte_end":108453,"line_start":1954,"line_end":1954,"column_start":5,"column_end":52}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108458,"byte_end":108551,"line_start":1955,"line_end":1955,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108556,"byte_end":108587,"line_start":1956,"line_end":1956,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108592,"byte_end":108667,"line_start":1957,"line_end":1957,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108672,"byte_end":108701,"line_start":1958,"line_end":1958,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108706,"byte_end":108709,"line_start":1959,"line_end":1959,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108714,"byte_end":108724,"line_start":1960,"line_end":1960,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108729,"byte_end":108732,"line_start":1961,"line_end":1961,"column_start":5,"column_end":8}},{"value":"/ `base + log_base + log_byte + num_bytes + utf8 decoding cost`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":108737,"byte_end":108802,"line_start":1962,"line_end":1962,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109864,"byte_end":109873,"line_start":1987,"line_end":1987,"column_start":12,"column_end":21},"name":"log_utf16","qualname":"<VMLogic>::log_utf16","value":"pub fn log_utf16(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Logs the UTF-16 encoded string. If `len == u64::MAX` then treats the string as\n null-terminated with two-byte sequence of `0x00 0x00`.","sig":null,"attributes":[{"value":"/ Logs the UTF-16 encoded string. If `len == u64::MAX` then treats the string as","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109180,"byte_end":109262,"line_start":1972,"line_end":1972,"column_start":5,"column_end":87}},{"value":"/ null-terminated with two-byte sequence of `0x00 0x00`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109267,"byte_end":109325,"line_start":1973,"line_end":1973,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109330,"byte_end":109333,"line_start":1974,"line_end":1974,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109338,"byte_end":109350,"line_start":1975,"line_end":1975,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109355,"byte_end":109358,"line_start":1976,"line_end":1976,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109363,"byte_end":109448,"line_start":1977,"line_end":1977,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-16 returns `BadUtf16`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109453,"byte_end":109502,"line_start":1978,"line_end":1978,"column_start":5,"column_end":54}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109507,"byte_end":109600,"line_start":1979,"line_end":1979,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109605,"byte_end":109636,"line_start":1980,"line_end":1980,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109641,"byte_end":109716,"line_start":1981,"line_end":1981,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109721,"byte_end":109750,"line_start":1982,"line_end":1982,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109755,"byte_end":109758,"line_start":1983,"line_end":1983,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109763,"byte_end":109773,"line_start":1984,"line_end":1984,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109778,"byte_end":109781,"line_start":1985,"line_end":1985,"column_start":5,"column_end":8}},{"value":"/ `base + log_base + log_byte * num_bytes + utf16 decoding cost`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":109786,"byte_end":109852,"line_start":1986,"line_end":1986,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":111042,"byte_end":111047,"line_start":2012,"line_end":2012,"column_start":12,"column_end":17},"name":"abort","qualname":"<VMLogic>::abort","value":"pub fn abort(&mut Self, u32, u32, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Special import kept for compatibility with AssemblyScript contracts. Not called by smart\n contracts directly, but instead called by the code generated by AssemblyScript.","sig":null,"attributes":[{"value":"/ Special import kept for compatibility with AssemblyScript contracts. Not called by smart","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110324,"byte_end":110416,"line_start":1997,"line_end":1997,"column_start":5,"column_end":97}},{"value":"/ contracts directly, but instead called by the code generated by AssemblyScript.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110421,"byte_end":110504,"line_start":1998,"line_end":1998,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110509,"byte_end":110512,"line_start":1999,"line_end":1999,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110517,"byte_end":110529,"line_start":2000,"line_end":2000,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110534,"byte_end":110537,"line_start":2001,"line_end":2001,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110542,"byte_end":110627,"line_start":2002,"line_end":2002,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110632,"byte_end":110679,"line_start":2003,"line_end":2003,"column_start":5,"column_end":52}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110684,"byte_end":110777,"line_start":2004,"line_end":2004,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110782,"byte_end":110813,"line_start":2005,"line_end":2005,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110818,"byte_end":110893,"line_start":2006,"line_end":2006,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110898,"byte_end":110927,"line_start":2007,"line_end":2007,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110932,"byte_end":110935,"line_start":2008,"line_end":2008,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110940,"byte_end":110950,"line_start":2009,"line_end":2009,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110955,"byte_end":110958,"line_start":2010,"line_end":2010,"column_start":5,"column_end":8}},{"value":"/ `base +  log_base + log_byte * num_bytes + utf16 decoding cost`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":110963,"byte_end":111030,"line_start":2011,"line_end":2011,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":114120,"byte_end":114133,"line_start":2078,"line_end":2078,"column_start":12,"column_end":25},"name":"storage_write","qualname":"<VMLogic>::storage_write","value":"pub fn storage_write(&mut Self, u64, u64, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Writes key-value into storage.\n * If key is not in use it inserts the key-value pair and does not modify the register. Returns `0`;\n * If key is in use it inserts the key-value and copies the old value into the `register_id`. Returns `1`.","sig":null,"attributes":[{"value":"/ Writes key-value into storage.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":112889,"byte_end":112923,"line_start":2057,"line_end":2057,"column_start":5,"column_end":39}},{"value":"/ * If key is not in use it inserts the key-value pair and does not modify the register. Returns `0`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":112928,"byte_end":113031,"line_start":2058,"line_end":2058,"column_start":5,"column_end":108}},{"value":"/ * If key is in use it inserts the key-value and copies the old value into the `register_id`. Returns `1`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113036,"byte_end":113145,"line_start":2059,"line_end":2059,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113150,"byte_end":113153,"line_start":2060,"line_end":2060,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113158,"byte_end":113170,"line_start":2061,"line_end":2061,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113175,"byte_end":113178,"line_start":2062,"line_end":2062,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` or `value_len + value_ptr` exceeds the memory container or points","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113183,"byte_end":113277,"line_start":2063,"line_end":2063,"column_start":5,"column_end":99}},{"value":"/   to an unused register it returns `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113282,"byte_end":113345,"line_start":2064,"line_end":2064,"column_start":5,"column_end":68}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113350,"byte_end":113446,"line_start":2065,"line_end":2065,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113451,"byte_end":113481,"line_start":2066,"line_end":2066,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113486,"byte_end":113578,"line_start":2067,"line_end":2067,"column_start":5,"column_end":97}},{"value":"/ * If the length of the value exceeds `max_length_storage_value` returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113583,"byte_end":113658,"line_start":2068,"line_end":2068,"column_start":5,"column_end":80}},{"value":"/   `ValueLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113663,"byte_end":113691,"line_start":2069,"line_end":2069,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView``.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113696,"byte_end":113757,"line_start":2070,"line_end":2070,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113762,"byte_end":113765,"line_start":2071,"line_end":2071,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113770,"byte_end":113780,"line_start":2072,"line_end":2072,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113785,"byte_end":113788,"line_start":2073,"line_end":2073,"column_start":5,"column_end":8}},{"value":"/ `base + storage_write_base + storage_write_key_byte * num_key_bytes + storage_write_value_byte * num_value_bytes","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113793,"byte_end":113909,"line_start":2074,"line_end":2074,"column_start":5,"column_end":121}},{"value":"/ + get_vec_from_memory_or_register_cost x 2`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113914,"byte_end":113962,"line_start":2075,"line_end":2075,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113967,"byte_end":113970,"line_start":2076,"line_end":2076,"column_start":5,"column_end":8}},{"value":"/ If a value was evicted it costs additional `storage_write_value_evicted_byte * num_evicted_bytes + internal_write_register_cost`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":113975,"byte_end":114108,"line_start":2077,"line_end":2077,"column_start":5,"column_end":138}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118619,"byte_end":118631,"line_start":2180,"line_end":2180,"column_start":12,"column_end":24},"name":"storage_read","qualname":"<VMLogic>::storage_read","value":"pub fn storage_read(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Reads the value stored under the given key.\n * If key is used copies the content of the value into the `register_id`, even if the content\n   is zero bytes. Returns `1`;\n * If key is not present then does not modify the register. Returns `0`;","sig":null,"attributes":[{"value":"/ Reads the value stored under the given key.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":117708,"byte_end":117755,"line_start":2163,"line_end":2163,"column_start":5,"column_end":52}},{"value":"/ * If key is used copies the content of the value into the `register_id`, even if the content","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":117760,"byte_end":117856,"line_start":2164,"line_end":2164,"column_start":5,"column_end":101}},{"value":"/   is zero bytes. Returns `1`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":117861,"byte_end":117894,"line_start":2165,"line_end":2165,"column_start":5,"column_end":38}},{"value":"/ * If key is not present then does not modify the register. Returns `0`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":117899,"byte_end":117974,"line_start":2166,"line_end":2166,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":117979,"byte_end":117982,"line_start":2167,"line_end":2167,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":117987,"byte_end":117999,"line_start":2168,"line_end":2168,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118004,"byte_end":118007,"line_start":2169,"line_end":2169,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118012,"byte_end":118104,"line_start":2170,"line_end":2170,"column_start":5,"column_end":97}},{"value":"/   returns `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118109,"byte_end":118147,"line_start":2171,"line_end":2171,"column_start":5,"column_end":43}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118152,"byte_end":118248,"line_start":2172,"line_end":2172,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118253,"byte_end":118283,"line_start":2173,"line_end":2173,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118288,"byte_end":118380,"line_start":2174,"line_end":2174,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118385,"byte_end":118388,"line_start":2175,"line_end":2175,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118393,"byte_end":118403,"line_start":2176,"line_end":2176,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118408,"byte_end":118411,"line_start":2177,"line_end":2177,"column_start":5,"column_end":8}},{"value":"/ `base + storage_read_base + storage_read_key_byte * num_key_bytes + storage_read_value_byte + num_value_bytes","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118416,"byte_end":118529,"line_start":2178,"line_end":2178,"column_start":5,"column_end":118}},{"value":"/  cost to read key from register + cost to write value into register`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":118534,"byte_end":118607,"line_start":2179,"line_end":2179,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120877,"byte_end":120891,"line_start":2225,"line_end":2225,"column_start":12,"column_end":26},"name":"storage_remove","qualname":"<VMLogic>::storage_remove","value":"pub fn storage_remove(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Removes the value stored under the given key.\n * If key is used, removes the key-value from the trie and copies the content of the value\n   into the `register_id`, even if the content is zero bytes. Returns `1`;\n * If key is not present then does not modify the register. Returns `0`.","sig":null,"attributes":[{"value":"/ Removes the value stored under the given key.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":119782,"byte_end":119831,"line_start":2206,"line_end":2206,"column_start":5,"column_end":54}},{"value":"/ * If key is used, removes the key-value from the trie and copies the content of the value","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":119836,"byte_end":119929,"line_start":2207,"line_end":2207,"column_start":5,"column_end":98}},{"value":"/   into the `register_id`, even if the content is zero bytes. Returns `1`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":119934,"byte_end":120011,"line_start":2208,"line_end":2208,"column_start":5,"column_end":82}},{"value":"/ * If key is not present then does not modify the register. Returns `0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120016,"byte_end":120091,"line_start":2209,"line_end":2209,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120096,"byte_end":120099,"line_start":2210,"line_end":2210,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120104,"byte_end":120116,"line_start":2211,"line_end":2211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120121,"byte_end":120124,"line_start":2212,"line_end":2212,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120129,"byte_end":120221,"line_start":2213,"line_end":2213,"column_start":5,"column_end":97}},{"value":"/   returns `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120226,"byte_end":120264,"line_start":2214,"line_end":2214,"column_start":5,"column_end":43}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120269,"byte_end":120348,"line_start":2215,"line_end":2215,"column_start":5,"column_end":84}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120353,"byte_end":120449,"line_start":2216,"line_end":2216,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120454,"byte_end":120484,"line_start":2217,"line_end":2217,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120489,"byte_end":120581,"line_start":2218,"line_end":2218,"column_start":5,"column_end":97}},{"value":"/ * If called as view function returns `ProhibitedInView``.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120586,"byte_end":120647,"line_start":2219,"line_end":2219,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120652,"byte_end":120655,"line_start":2220,"line_end":2220,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120660,"byte_end":120670,"line_start":2221,"line_end":2221,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120675,"byte_end":120678,"line_start":2222,"line_end":2222,"column_start":5,"column_end":8}},{"value":"/ `base + storage_remove_base + storage_remove_key_byte * num_key_bytes + storage_remove_ret_value_byte * num_value_bytes","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120683,"byte_end":120806,"line_start":2223,"line_end":2223,"column_start":5,"column_end":128}},{"value":"/ + cost to read the key + cost to write the value`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":120811,"byte_end":120865,"line_start":2224,"line_end":2224,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":123350,"byte_end":123365,"line_start":2281,"line_end":2281,"column_start":12,"column_end":27},"name":"storage_has_key","qualname":"<VMLogic>::storage_has_key","value":"pub fn storage_has_key(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Checks if there is a key-value pair.\n * If key is used returns `1`, even if the value is zero bytes;\n * Otherwise returns `0`.","sig":null,"attributes":[{"value":"/ Checks if there is a key-value pair.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":122840,"byte_end":122880,"line_start":2269,"line_end":2269,"column_start":5,"column_end":45}},{"value":"/ * If key is used returns `1`, even if the value is zero bytes;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":122885,"byte_end":122951,"line_start":2270,"line_end":2270,"column_start":5,"column_end":71}},{"value":"/ * Otherwise returns `0`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":122956,"byte_end":122984,"line_start":2271,"line_end":2271,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":122989,"byte_end":122992,"line_start":2272,"line_end":2272,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":122997,"byte_end":123009,"line_start":2273,"line_end":2273,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":123014,"byte_end":123017,"line_start":2274,"line_end":2274,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container it returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":123022,"byte_end":123115,"line_start":2275,"line_end":2275,"column_start":5,"column_end":98}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":123120,"byte_end":123212,"line_start":2276,"line_end":2276,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":123217,"byte_end":123220,"line_start":2277,"line_end":2277,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":123225,"byte_end":123235,"line_start":2278,"line_end":2278,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":123240,"byte_end":123243,"line_start":2279,"line_end":2279,"column_start":5,"column_end":8}},{"value":"/ `base + storage_has_key_base + storage_has_key_byte * num_bytes + cost of reading key`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":123248,"byte_end":123338,"line_start":2280,"line_end":2280,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125127,"byte_end":125146,"line_start":2317,"line_end":2317,"column_start":12,"column_end":31},"name":"storage_iter_prefix","qualname":"<VMLogic>::storage_iter_prefix","value":"pub fn storage_iter_prefix(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Creates an iterator object inside the host. Returns the identifier that uniquely\n differentiates the given iterator from other iterators that can be simultaneously created.\n * It iterates over the keys that have the provided prefix. The order of iteration is defined\n   by the lexicographic order of the bytes in the keys;\n * If there are no keys, it creates an empty iterator, see below on empty iterators.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124243,"byte_end":124257,"line_start":2300,"line_end":2300,"column_start":5,"column_end":19}},{"value":"/ Creates an iterator object inside the host. Returns the identifier that uniquely","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124262,"byte_end":124346,"line_start":2301,"line_end":2301,"column_start":5,"column_end":89}},{"value":"/ differentiates the given iterator from other iterators that can be simultaneously created.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124351,"byte_end":124445,"line_start":2302,"line_end":2302,"column_start":5,"column_end":99}},{"value":"/ * It iterates over the keys that have the provided prefix. The order of iteration is defined","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124450,"byte_end":124546,"line_start":2303,"line_end":2303,"column_start":5,"column_end":101}},{"value":"/   by the lexicographic order of the bytes in the keys;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124551,"byte_end":124609,"line_start":2304,"line_end":2304,"column_start":5,"column_end":63}},{"value":"/ * If there are no keys, it creates an empty iterator, see below on empty iterators.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124614,"byte_end":124701,"line_start":2305,"line_end":2305,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124706,"byte_end":124709,"line_start":2306,"line_end":2306,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124714,"byte_end":124726,"line_start":2307,"line_end":2307,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124731,"byte_end":124734,"line_start":2308,"line_end":2308,"column_start":5,"column_end":8}},{"value":"/ * If `prefix_len + prefix_ptr` exceeds the memory container it returns","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124739,"byte_end":124813,"line_start":2309,"line_end":2309,"column_start":5,"column_end":79}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124818,"byte_end":124848,"line_start":2310,"line_end":2310,"column_start":5,"column_end":35}},{"value":"/ * If the length of the prefix exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124853,"byte_end":124948,"line_start":2311,"line_end":2311,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124953,"byte_end":124956,"line_start":2312,"line_end":2312,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124961,"byte_end":124971,"line_start":2313,"line_end":2313,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124976,"byte_end":124979,"line_start":2314,"line_end":2314,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_create_prefix_base + storage_iter_create_key_byte * num_prefix_bytes","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":124984,"byte_end":125077,"line_start":2315,"line_end":2315,"column_start":5,"column_end":98}},{"value":"/  cost of reading the prefix`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125082,"byte_end":125115,"line_start":2316,"line_end":2316,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126329,"byte_end":126347,"line_start":2340,"line_end":2340,"column_start":12,"column_end":30},"name":"storage_iter_range","qualname":"<VMLogic>::storage_iter_range","value":"pub fn storage_iter_range(&mut Self, u64, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Iterates over all key-values such that keys are between `start` and `end`, where `start` is\n inclusive and `end` is exclusive. Unless lexicographically `start < end`, it creates an\n empty iterator. Note, this definition allows for `start` or `end` keys to not actually exist\n on the given trie.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125354,"byte_end":125368,"line_start":2323,"line_end":2323,"column_start":5,"column_end":19}},{"value":"/ Iterates over all key-values such that keys are between `start` and `end`, where `start` is","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125373,"byte_end":125468,"line_start":2324,"line_end":2324,"column_start":5,"column_end":100}},{"value":"/ inclusive and `end` is exclusive. Unless lexicographically `start < end`, it creates an","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125473,"byte_end":125564,"line_start":2325,"line_end":2325,"column_start":5,"column_end":96}},{"value":"/ empty iterator. Note, this definition allows for `start` or `end` keys to not actually exist","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125569,"byte_end":125665,"line_start":2326,"line_end":2326,"column_start":5,"column_end":101}},{"value":"/ on the given trie.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125670,"byte_end":125692,"line_start":2327,"line_end":2327,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125697,"byte_end":125700,"line_start":2328,"line_end":2328,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125705,"byte_end":125717,"line_start":2329,"line_end":2329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125722,"byte_end":125725,"line_start":2330,"line_end":2330,"column_start":5,"column_end":8}},{"value":"/ * If `start_len + start_ptr` or `end_len + end_ptr` exceeds the memory container or points to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125730,"byte_end":125827,"line_start":2331,"line_end":2331,"column_start":5,"column_end":102}},{"value":"/   an unused register it returns `MemoryAccessViolation`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125832,"byte_end":125892,"line_start":2332,"line_end":2332,"column_start":5,"column_end":65}},{"value":"/ * If the length of the `start` exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125897,"byte_end":125993,"line_start":2333,"line_end":2333,"column_start":5,"column_end":101}},{"value":"/ * If the length of the `end` exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":125998,"byte_end":126092,"line_start":2334,"line_end":2334,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126097,"byte_end":126100,"line_start":2335,"line_end":2335,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126105,"byte_end":126115,"line_start":2336,"line_end":2336,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126120,"byte_end":126123,"line_start":2337,"line_end":2337,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_create_range_base + storage_iter_create_from_byte * num_from_bytes","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126128,"byte_end":126219,"line_start":2338,"line_end":2338,"column_start":5,"column_end":96}},{"value":"/  + storage_iter_create_to_byte * num_to_bytes + reading from prefix + reading to prefix`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126224,"byte_end":126317,"line_start":2339,"line_end":2339,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":128379,"byte_end":128396,"line_start":2380,"line_end":2380,"column_start":12,"column_end":29},"name":"storage_iter_next","qualname":"<VMLogic>::storage_iter_next","value":"pub fn storage_iter_next(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Advances iterator and saves the next key and value in the register.\n * If iterator is not empty (after calling next it points to a key-value), copies the key\n   into `key_register_id` and value into `value_register_id` and returns `1`;\n * If iterator is empty returns `0`;\n This allows us to iterate over the keys that have zero bytes stored in values.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126629,"byte_end":126643,"line_start":2352,"line_end":2352,"column_start":5,"column_end":19}},{"value":"/ Advances iterator and saves the next key and value in the register.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126648,"byte_end":126719,"line_start":2353,"line_end":2353,"column_start":5,"column_end":76}},{"value":"/ * If iterator is not empty (after calling next it points to a key-value), copies the key","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126724,"byte_end":126816,"line_start":2354,"line_end":2354,"column_start":5,"column_end":97}},{"value":"/   into `key_register_id` and value into `value_register_id` and returns `1`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126821,"byte_end":126901,"line_start":2355,"line_end":2355,"column_start":5,"column_end":85}},{"value":"/ * If iterator is empty returns `0`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126906,"byte_end":126945,"line_start":2356,"line_end":2356,"column_start":5,"column_end":44}},{"value":"/ This allows us to iterate over the keys that have zero bytes stored in values.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":126950,"byte_end":127032,"line_start":2357,"line_end":2357,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127037,"byte_end":127040,"line_start":2358,"line_end":2358,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127045,"byte_end":127057,"line_start":2359,"line_end":2359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127062,"byte_end":127065,"line_start":2360,"line_end":2360,"column_start":5,"column_end":8}},{"value":"/ * If `key_register_id == value_register_id` returns `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127070,"byte_end":127150,"line_start":2361,"line_end":2361,"column_start":5,"column_end":85}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127155,"byte_end":127234,"line_start":2362,"line_end":2362,"column_start":5,"column_end":84}},{"value":"/ * If `iterator_id` does not correspond to an existing iterator returns `InvalidIteratorId`;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127239,"byte_end":127334,"line_start":2363,"line_end":2363,"column_start":5,"column_end":100}},{"value":"/ * If between the creation of the iterator and calling `storage_iter_next` the range over","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127339,"byte_end":127431,"line_start":2364,"line_end":2364,"column_start":5,"column_end":97}},{"value":"/   which it iterates was modified returns `IteratorWasInvalidated`. Specifically, if","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127436,"byte_end":127523,"line_start":2365,"line_end":2365,"column_start":5,"column_end":92}},{"value":"/   `storage_write` or `storage_remove` was invoked on the key key such that:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127528,"byte_end":127607,"line_start":2366,"line_end":2366,"column_start":5,"column_end":84}},{"value":"/   * in case of `storage_iter_prefix`. `key` has the given prefix and:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127612,"byte_end":127685,"line_start":2367,"line_end":2367,"column_start":5,"column_end":78}},{"value":"/     * Iterator was not called next yet.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127690,"byte_end":127733,"line_start":2368,"line_end":2368,"column_start":5,"column_end":48}},{"value":"/     * `next` was already called on the iterator and it is currently pointing at the `key`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127738,"byte_end":127831,"line_start":2369,"line_end":2369,"column_start":5,"column_end":98}},{"value":"/       `curr` such that `curr <= key`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127836,"byte_end":127877,"line_start":2370,"line_end":2370,"column_start":5,"column_end":46}},{"value":"/   * in case of `storage_iter_range`. `start<=key<end` and:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127882,"byte_end":127944,"line_start":2371,"line_end":2371,"column_start":5,"column_end":67}},{"value":"/     * Iterator was not called `next` yet.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127949,"byte_end":127994,"line_start":2372,"line_end":2372,"column_start":5,"column_end":50}},{"value":"/     * `next` was already called on the iterator and it is currently pointing at the key","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":127999,"byte_end":128090,"line_start":2373,"line_end":2373,"column_start":5,"column_end":96}},{"value":"/       `curr` such that `curr<=key<end`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":128095,"byte_end":128138,"line_start":2374,"line_end":2374,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":128143,"byte_end":128146,"line_start":2375,"line_end":2375,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":128151,"byte_end":128161,"line_start":2376,"line_end":2376,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":128166,"byte_end":128169,"line_start":2377,"line_end":2377,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_next_base + storage_iter_next_key_byte * num_key_bytes + storage_iter_next_value_byte * num_value_bytes","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":128174,"byte_end":128302,"line_start":2378,"line_end":2378,"column_start":5,"column_end":133}},{"value":"/  + writing key to register + writing value to register`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":128307,"byte_end":128367,"line_start":2379,"line_end":2379,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":128722,"byte_end":128729,"line_start":2392,"line_end":2392,"column_start":12,"column_end":19},"name":"outcome","qualname":"<VMLogic>::outcome","value":"pub fn outcome(Self) -> VMOutcome","parent":null,"children":[],"decl_id":null,"docs":" Computes the outcome of execution.\n","sig":null,"attributes":[{"value":"/ Computes the outcome of execution.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":128672,"byte_end":128710,"line_start":2391,"line_end":2391,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":129122,"byte_end":129135,"line_start":2404,"line_end":2404,"column_start":12,"column_end":25},"name":"clone_outcome","qualname":"<VMLogic>::clone_outcome","value":"pub fn clone_outcome(&Self) -> VMOutcome","parent":null,"children":[],"decl_id":null,"docs":" clones the outcome of execution.\n","sig":null,"attributes":[{"value":"/ clones the outcome of execution.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":129074,"byte_end":129110,"line_start":2403,"line_end":2403,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":129549,"byte_end":129573,"line_start":2417,"line_end":2417,"column_start":12,"column_end":36},"name":"add_contract_compile_fee","qualname":"<VMLogic>::add_contract_compile_fee","value":"pub fn add_contract_compile_fee(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1007},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":129826,"byte_end":129835,"line_start":2424,"line_end":2424,"column_start":12,"column_end":21},"name":"VMOutcome","qualname":"::logic::VMOutcome","value":"VMOutcome { balance, storage_usage, return_data, burnt_gas, used_gas, logs }","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1105},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":129904,"byte_end":129911,"line_start":2426,"line_end":2426,"column_start":9,"column_end":16},"name":"balance","qualname":"::logic::VMOutcome::balance","value":"u128","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::u128_dec_format\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":129842,"byte_end":129895,"line_start":2425,"line_end":2425,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1008},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":129930,"byte_end":129943,"line_start":2427,"line_end":2427,"column_start":9,"column_end":22},"name":"storage_usage","qualname":"::logic::VMOutcome::storage_usage","value":"u64","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1009},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":129967,"byte_end":129978,"line_start":2428,"line_end":2428,"column_start":9,"column_end":20},"name":"return_data","qualname":"::logic::VMOutcome::return_data","value":"types::ReturnData","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1010},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":130000,"byte_end":130009,"line_start":2429,"line_end":2429,"column_start":9,"column_end":18},"name":"burnt_gas","qualname":"::logic::VMOutcome::burnt_gas","value":"u64","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1011},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":130024,"byte_end":130032,"line_start":2430,"line_end":2430,"column_start":9,"column_end":17},"name":"used_gas","qualname":"::logic::VMOutcome::used_gas","value":"u64","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1012},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":130047,"byte_end":130051,"line_start":2431,"line_end":2431,"column_start":9,"column_end":13},"name":"logs","qualname":"::logic::VMOutcome::logs","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mocks","qualname":"::mocks","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mod.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":465}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":394},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock_external","qualname":"::mocks::mock_external","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":1106},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":1114},{"krate":0,"index":1118},{"krate":0,"index":1124},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1200},{"krate":0,"index":1206},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1271},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1341},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1440},{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1501},{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1584},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1651},{"krate":0,"index":1655},{"krate":0,"index":1677},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1785},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1858},{"krate":0,"index":1899},{"krate":0,"index":1901}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130394,"byte_end":130408,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"MockedExternal","qualname":"::mocks::mock_external::MockedExternal","value":"MockedExternal { fake_trie, validators }","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109}],"decl_id":null,"docs":" Emulates the trie and the mock handling code.\n","sig":null,"attributes":[{"value":"/ Emulates the trie and the mock handling code.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130333,"byte_end":130382,"line_start":8,"line_end":8,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1107},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130419,"byte_end":130428,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"name":"fake_trie","qualname":"::mocks::mock_external::MockedExternal::fake_trie","value":"std::collections::HashMap<std::vec::Vec<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1109},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130493,"byte_end":130503,"line_start":12,"line_end":12,"column_start":9,"column_end":19},"name":"validators","qualname":"::mocks::mock_external::MockedExternal::validators","value":"std::collections::HashMap<std::string::String, u128>","parent":{"krate":0,"index":1106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":425},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130548,"byte_end":130562,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"MockedValuePtr","qualname":"::mocks::mock_external::MockedValuePtr","value":"MockedValuePtr {  }","parent":null,"children":[{"krate":0,"index":426}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130621,"byte_end":130624,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<MockedValuePtr>::new","value":"pub fn new<T>(T) -> Self where T: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130989,"byte_end":130992,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<MockedExternal>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":131125,"byte_end":131149,"line_start":44,"line_end":44,"column_start":12,"column_end":36},"name":"get_receipt_create_calls","qualname":"<MockedExternal>::get_receipt_create_calls","value":"pub fn get_receipt_create_calls(&Self) -> &Vec<Receipt>","parent":null,"children":[],"decl_id":null,"docs":" Get calls to receipt create that were performed during contract call.\n","sig":null,"attributes":[{"value":"/ Get calls to receipt create that were performed during contract call.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":131040,"byte_end":131113,"line_start":43,"line_end":43,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1114},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136312,"byte_end":136319,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"Receipt","qualname":"::mocks::mock_external::Receipt","value":"Receipt {  }","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1174},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136477,"byte_end":136490,"line_start":225,"line_end":225,"column_start":5,"column_end":18},"name":"CreateAccount","qualname":"::mocks::mock_external::Action::CreateAccount","value":"Action::CreateAccount","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1176},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136496,"byte_end":136510,"line_start":226,"line_end":226,"column_start":5,"column_end":19},"name":"DeployContract","qualname":"::mocks::mock_external::Action::DeployContract","value":"Action::DeployContract(DeployContractAction)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1179},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136538,"byte_end":136550,"line_start":227,"line_end":227,"column_start":5,"column_end":17},"name":"FunctionCall","qualname":"::mocks::mock_external::Action::FunctionCall","value":"Action::FunctionCall(FunctionCallAction)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1182},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136576,"byte_end":136584,"line_start":228,"line_end":228,"column_start":5,"column_end":13},"name":"Transfer","qualname":"::mocks::mock_external::Action::Transfer","value":"Action::Transfer(TransferAction)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1185},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136606,"byte_end":136611,"line_start":229,"line_end":229,"column_start":5,"column_end":10},"name":"Stake","qualname":"::mocks::mock_external::Action::Stake","value":"Action::Stake(StakeAction)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1188},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136630,"byte_end":136650,"line_start":230,"line_end":230,"column_start":5,"column_end":25},"name":"AddKeyWithFullAccess","qualname":"::mocks::mock_external::Action::AddKeyWithFullAccess","value":"Action::AddKeyWithFullAccess(AddKeyWithFullAccessAction)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136684,"byte_end":136706,"line_start":231,"line_end":231,"column_start":5,"column_end":27},"name":"AddKeyWithFunctionCall","qualname":"::mocks::mock_external::Action::AddKeyWithFunctionCall","value":"Action::AddKeyWithFunctionCall(AddKeyWithFunctionCallAction)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1194},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136742,"byte_end":136751,"line_start":232,"line_end":232,"column_start":5,"column_end":14},"name":"DeleteKey","qualname":"::mocks::mock_external::Action::DeleteKey","value":"Action::DeleteKey(DeleteKeyAction)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1197},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136774,"byte_end":136787,"line_start":233,"line_end":233,"column_start":5,"column_end":18},"name":"DeleteAccount","qualname":"::mocks::mock_external::Action::DeleteAccount","value":"Action::DeleteAccount(DeleteAccountAction)","parent":{"krate":0,"index":1173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1173},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136464,"byte_end":136470,"line_start":224,"line_end":224,"column_start":10,"column_end":16},"name":"Action","qualname":"::mocks::mock_external::Action","value":"pub enum Action {\n    CreateAccount,\n    DeployContract(DeployContractAction),\n    FunctionCall(FunctionCallAction),\n    Transfer(TransferAction),\n    Stake(StakeAction),\n    AddKeyWithFullAccess(AddKeyWithFullAccessAction),\n    AddKeyWithFunctionCall(AddKeyWithFunctionCallAction),\n    DeleteKey(DeleteKeyAction),\n    DeleteAccount(DeleteAccountAction),\n}","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1197}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1263},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136872,"byte_end":136892,"line_start":237,"line_end":237,"column_start":12,"column_end":32},"name":"DeployContractAction","qualname":"::mocks::mock_external::DeployContractAction","value":"DeployContractAction { code }","parent":null,"children":[{"krate":0,"index":1264}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1264},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136903,"byte_end":136907,"line_start":238,"line_end":238,"column_start":9,"column_end":13},"name":"code","qualname":"::mocks::mock_external::DeployContractAction::code","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1316},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":136980,"byte_end":136998,"line_start":242,"line_end":242,"column_start":12,"column_end":30},"name":"FunctionCallAction","qualname":"::mocks::mock_external::FunctionCallAction","value":"FunctionCallAction {  }","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1317},{"krate":0,"index":1318}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":137587,"byte_end":137601,"line_start":256,"line_end":256,"column_start":12,"column_end":26},"name":"TransferAction","qualname":"::mocks::mock_external::TransferAction","value":"TransferAction {  }","parent":null,"children":[{"krate":0,"index":1433}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1485},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":137688,"byte_end":137699,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"StakeAction","qualname":"::mocks::mock_external::StakeAction","value":"StakeAction {  }","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1567}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1568},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":137869,"byte_end":137895,"line_start":268,"line_end":268,"column_start":12,"column_end":38},"name":"AddKeyWithFullAccessAction","qualname":"::mocks::mock_external::AddKeyWithFullAccessAction","value":"AddKeyWithFullAccessAction {  }","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1569}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1651},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":138061,"byte_end":138089,"line_start":275,"line_end":275,"column_start":12,"column_end":40},"name":"AddKeyWithFunctionCallAction","qualname":"::mocks::mock_external::AddKeyWithFunctionCallAction","value":"AddKeyWithFunctionCallAction {  }","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1769}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1770},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":138406,"byte_end":138421,"line_start":286,"line_end":286,"column_start":12,"column_end":27},"name":"DeleteKeyAction","qualname":"::mocks::mock_external::DeleteKeyAction","value":"DeleteKeyAction {  }","parent":null,"children":[{"krate":0,"index":1849}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1850},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":138571,"byte_end":138590,"line_start":292,"line_end":292,"column_start":12,"column_end":31},"name":"DeleteAccountAction","qualname":"::mocks::mock_external::DeleteAccountAction","value":"DeleteAccountAction {  }","parent":null,"children":[{"krate":0,"index":1851}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":465},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_memory.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock_memory","qualname":"::mocks::mock_memory","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_memory.rs","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":469}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1903},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_memory.rs","byte_start":138681,"byte_end":138693,"line_start":4,"line_end":4,"column_start":12,"column_end":24},"name":"MockedMemory","qualname":"::mocks::mock_memory::MockedMemory","value":"MockedMemory {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":474},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_with","qualname":"::serde_with","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":491},{"krate":0,"index":507},{"krate":0,"index":523},{"krate":0,"index":557},{"krate":0,"index":576}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":475},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":139421,"byte_end":139436,"line_start":2,"line_end":2,"column_start":9,"column_end":24},"name":"bytes_as_base64","qualname":"::serde_with::bytes_as_base64","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":488}],"decl_id":null,"docs":" Serialize `Vec<u8>` as base64 encoding.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as base64 encoding.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":139369,"byte_end":139412,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":486},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":139507,"byte_end":139516,"line_start":5,"line_end":5,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_base64::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":139689,"byte_end":139700,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_base64::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":491},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":139984,"byte_end":139996,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"name":"bytes_as_str","qualname":"::serde_with::bytes_as_str","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":504}],"decl_id":null,"docs":" Serialize `Vec<u8>` as `String`.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as `String`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":139939,"byte_end":139975,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":140067,"byte_end":140076,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_str::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":140269,"byte_end":140280,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_str::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":507},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":140521,"byte_end":140536,"line_start":42,"line_end":42,"column_start":9,"column_end":24},"name":"bytes_as_base58","qualname":"::serde_with::bytes_as_base58","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":520}],"decl_id":null,"docs":" Serialize `Vec<u8>` as base58 encoding.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as base58 encoding.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":140469,"byte_end":140512,"line_start":41,"line_end":41,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":518},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":140607,"byte_end":140616,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_base58::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":520},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":140801,"byte_end":140812,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_base58::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":523},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":141114,"byte_end":141130,"line_start":62,"line_end":62,"column_start":9,"column_end":25},"name":"vec_bytes_as_str","qualname":"::serde_with::vec_bytes_as_str","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":554}],"decl_id":null,"docs":" Serialize `Vec<Vec<u8>>` as `Vec<String>`.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<Vec<u8>>` as `Vec<String>`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":141059,"byte_end":141105,"line_start":61,"line_end":61,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":544},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":141282,"byte_end":141291,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::vec_bytes_as_str::serialize","value":"pub fn serialize<S>(&Vec<Vec<u8>>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":142219,"byte_end":142230,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::vec_bytes_as_str::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<Vec<u8>>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":557},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":142410,"byte_end":142425,"line_start":109,"line_end":109,"column_start":9,"column_end":24},"name":"u128_dec_format","qualname":"::serde_with::u128_dec_format","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":571},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":142515,"byte_end":142524,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::u128_dec_format::serialize","value":"pub fn serialize<S>(&u128, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":573},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":142693,"byte_end":142704,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::u128_dec_format::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<u128, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":576},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":142935,"byte_end":142961,"line_start":129,"line_end":129,"column_start":9,"column_end":35},"name":"u128_dec_format_compatible","qualname":"::serde_with::u128_dec_format_compatible","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":1913},{"krate":0,"index":1906},{"krate":0,"index":590}],"decl_id":null,"docs":" This in an extension to `u128_dec_format` that serves a compatibility layer role to\n deserialize u128 from a \"small\" JSON number (u64).","sig":null,"attributes":[{"value":"/ This in an extension to `u128_dec_format` that serves a compatibility layer role to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":142968,"byte_end":143055,"line_start":130,"line_end":130,"column_start":5,"column_end":92}},{"value":"/ deserialize u128 from a \"small\" JSON number (u64).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":143060,"byte_end":143114,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":143119,"byte_end":143122,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ It is unfortunate that we cannot enable \"arbitrary_precision\" feature in serde_json due to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":143127,"byte_end":143221,"line_start":133,"line_end":133,"column_start":5,"column_end":99}},{"value":"/ a bug: https://github.com/serde-rs/json/issues/505","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":143226,"byte_end":143280,"line_start":134,"line_end":134,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":143507,"byte_end":143518,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::u128_dec_format_compatible::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<u128, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":593},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":1920},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1932},{"krate":0,"index":1946},{"krate":0,"index":1997},{"krate":0,"index":606},{"krate":0,"index":2002},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2027}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":602},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":143926,"byte_end":143935,"line_start":5,"line_end":5,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::types::PublicKey","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":603},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":143956,"byte_end":143968,"line_start":6,"line_end":6,"column_start":10,"column_end":22},"name":"PromiseIndex","qualname":"::types::PromiseIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":604},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":143985,"byte_end":143997,"line_start":7,"line_end":7,"column_start":10,"column_end":22},"name":"ReceiptIndex","qualname":"::types::ReceiptIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":605},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144014,"byte_end":144027,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"IteratorIndex","qualname":"::types::IteratorIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1999},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144220,"byte_end":144225,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Value","qualname":"::types::ReturnData::Value","value":"ReturnData::Value(Vec<u8>)","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":" Method returned some value or data.\n","sig":null,"attributes":[{"value":"/ Method returned some value or data.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144121,"byte_end":144160,"line_start":12,"line_end":12,"column_start":5,"column_end":44}},{"value":"serde(with = \"crate::serde_with::bytes_as_str\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144165,"byte_end":144215,"line_start":13,"line_end":13,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1921},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144378,"byte_end":144390,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"name":"ReceiptIndex","qualname":"::types::ReturnData::ReceiptIndex","value":"ReturnData::ReceiptIndex(ReceiptIndex)","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":" The return value of the method should be taken from the return value of another method\n identified through receipt index.\n","sig":null,"attributes":[{"value":"/ The return value of the method should be taken from the return value of another method","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144241,"byte_end":144331,"line_start":16,"line_end":16,"column_start":5,"column_end":95}},{"value":"/ identified through receipt index.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144336,"byte_end":144373,"line_start":17,"line_end":17,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1924},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144463,"byte_end":144467,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"None","qualname":"::types::ReturnData::None","value":"ReturnData::None","parent":{"krate":0,"index":1920},"children":[],"decl_id":null,"docs":" Method hasn't returned any data or promise.\n","sig":null,"attributes":[{"value":"/ Method hasn't returned any data or promise.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144411,"byte_end":144458,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1920},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144104,"byte_end":144114,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"ReturnData","qualname":"::types::ReturnData","value":"pub enum ReturnData { Value(Vec<u8>), ReceiptIndex(ReceiptIndex), None, }","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":1921},{"krate":0,"index":1924}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144552,"byte_end":144560,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"as_value","qualname":"<ReturnData>::as_value","value":"pub fn as_value(Self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Function to extract value from ReturnData.\n","sig":null,"attributes":[{"value":"/ Function to extract value from ReturnData.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144494,"byte_end":144540,"line_start":25,"line_end":25,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2003},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":145035,"byte_end":145043,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::types::PromiseResult::NotReady","value":"PromiseResult::NotReady","parent":{"krate":0,"index":2002},"children":[],"decl_id":null,"docs":" Current version of the protocol never returns `PromiseResult::NotReady`.\n","sig":null,"attributes":[{"value":"/ Current version of the protocol never returns `PromiseResult::NotReady`.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144954,"byte_end":145030,"line_start":38,"line_end":38,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2078},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":145104,"byte_end":145114,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"Successful","qualname":"::types::PromiseResult::Successful","value":"PromiseResult::Successful(Vec<u8>)","parent":{"krate":0,"index":2002},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_str\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":145049,"byte_end":145099,"line_start":40,"line_end":40,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2005},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":145129,"byte_end":145135,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Failed","qualname":"::types::PromiseResult::Failed","value":"PromiseResult::Failed","parent":{"krate":0,"index":2002},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2002},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144934,"byte_end":144947,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"name":"PromiseResult","qualname":"::types::PromiseResult","value":"pub enum PromiseResult { NotReady, Successful(Vec<u8>), Failed, }","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2078},{"krate":0,"index":2005}],"decl_id":null,"docs":" When there is a callback attached to one or more contract calls the execution results of these\n calls are available to the contract invoked through the callback.\n","sig":null,"attributes":[{"value":"/ When there is a callback attached to one or more contract calls the execution results of these","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144704,"byte_end":144802,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ calls are available to the contract invoked through the callback.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144803,"byte_end":144872,"line_start":35,"line_end":35,"column_start":1,"column_end":70}}]}],"impls":[{"id":4,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","byte_start":954,"byte_end":960,"line_start":15,"line_end":15,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":22929,"byte_end":22939,"line_start":55,"line_end":55,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":23054,"byte_end":23064,"line_start":61,"line_end":61,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":33283,"byte_end":33290,"line_start":102,"line_end":102,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":1006},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":342},{"krate":0,"index":346},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130593,"byte_end":130607,"line_start":19,"line_end":19,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130771,"byte_end":130785,"line_start":28,"line_end":28,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130961,"byte_end":130975,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":131289,"byte_end":131303,"line_start":52,"line_end":52,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_memory.rs","byte_start":138718,"byte_end":138730,"line_start":6,"line_end":6,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":141659,"byte_end":141674,"line_start":82,"line_end":82,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144477,"byte_end":144487,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":117,"byte_end":128,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":105}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":149,"byte_end":154,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":393}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mod.rs","byte_start":130077,"byte_end":130090,"line_start":1,"line_end":1,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":394}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mod.rs","byte_start":130100,"byte_end":130111,"line_start":2,"line_end":2,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":465}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":164,"byte_end":174,"line_start":9,"line_end":9,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":474}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/lib.rs","byte_start":184,"byte_end":189,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":593}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/config.rs","byte_start":954,"byte_end":960,"line_start":15,"line_end":15,"column_start":18,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":664},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":22929,"byte_end":22939,"line_start":55,"line_end":55,"column_start":21,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/gas_counter.rs","byte_start":23054,"byte_end":23064,"line_start":61,"line_end":61,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/logic.rs","byte_start":33283,"byte_end":33290,"line_start":102,"line_end":102,"column_start":10,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130593,"byte_end":130607,"line_start":19,"line_end":19,"column_start":6,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130771,"byte_end":130785,"line_start":28,"line_end":28,"column_start":19,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":425},"to":{"krate":0,"index":81}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":130961,"byte_end":130975,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_external.rs","byte_start":131289,"byte_end":131303,"line_start":52,"line_end":52,"column_start":19,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1106},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/mocks/mock_memory.rs","byte_start":138718,"byte_end":138730,"line_start":6,"line_end":6,"column_start":21,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1903},"to":{"krate":0,"index":74}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/serde_with.rs","byte_start":141659,"byte_end":141674,"line_start":82,"line_end":82,"column_start":32,"column_end":47},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":546},"to":{"krate":22,"index":1531}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-4.0.0-pre.1/src/types.rs","byte_start":144477,"byte_end":144487,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1920},"to":{"krate":4294967295,"index":4294967295}}]}