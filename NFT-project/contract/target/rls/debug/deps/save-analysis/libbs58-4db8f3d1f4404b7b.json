{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0","program":"/home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bs58","--edition=2018","/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=4db8f3d1f4404b7b","-C","extra-filename=-4db8f3d1f4404b7b","--out-dir","/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps","-L","dependency=/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/pavel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/pavel/Near/create-near-NFTapp/NFT-project/contract/target/rls/debug/deps/libbs58-4db8f3d1f4404b7b.rmeta"},"prelude":{"crate_id":{"name":"bs58","disambiguator":[6892947182555612257,0]},"crate_root":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src","external_crates":[{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}}],"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":0,"byte_end":6134,"line_start":1,"line_end":214,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2709,"byte_end":2717,"line_start":83,"line_end":83,"column_start":19,"column_end":27},"alias_span":null,"name":"Alphabet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":0,"byte_end":6134,"line_start":1,"line_end":214,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":71},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":150}],"decl_id":null,"docs":" Another [Base58][] codec implementation.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"warn(missing_copy_implementations)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":50,"byte_end":88,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":89,"byte_end":128,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"warn(missing_docs)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":129,"byte_end":151,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"warn(trivial_casts)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":152,"byte_end":175,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"warn(trivial_numeric_casts)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":176,"byte_end":207,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"warn(unused_extern_crates)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":208,"byte_end":238,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"warn(unused_import_braces)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":239,"byte_end":269,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"warn(variant_size_differences)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":270,"byte_end":304,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ Another [Base58][] codec implementation.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":342,"byte_end":386,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":387,"byte_end":390,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Compared to [`base58`][] this is significantly faster at decoding (about","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":391,"byte_end":467,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ 2.4x as fast when decoding 32 bytes), almost the same speed for encoding","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":468,"byte_end":544,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ (about 3% slower when encoding 32 bytes) and doesn't have the 128 byte","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":545,"byte_end":619,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ limitation.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":620,"byte_end":635,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":636,"byte_end":639,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Compared to [`rust-base58`][] this is massively faster (over ten times as","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":640,"byte_end":717,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ fast when decoding 32 bytes, almost 40 times as fast when encoding 32","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":718,"byte_end":791,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ bytes) and has no external dependencies.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":792,"byte_end":836,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":837,"byte_end":840,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Compared to both this supports a configurable alphabet and user provided","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":841,"byte_end":917,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ buffers for zero-allocation {en,de}coding.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":918,"byte_end":964,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":965,"byte_end":968,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [Base58]: https://en.wikipedia.org/wiki/Base58","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":969,"byte_end":1019,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ [`base58`]: https://github.com/debris/base58","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1020,"byte_end":1068,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ [`rust-base58`]: https://github.com/nham/rust-base58","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1069,"byte_end":1125,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1126,"byte_end":1129,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1130,"byte_end":1144,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1145,"byte_end":1148,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/  Feature | Activation         | Effect","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1149,"byte_end":1191,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ ---------|--------------------|--------","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1192,"byte_end":1235,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/  `std`   | **on**-by-default  | Implement [`Error`](std::error::Error) for error types","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1236,"byte_end":1326,"line_start":35,"line_end":35,"column_start":1,"column_end":91}},{"value":"/  `alloc` | implied by `std`   | Support encoding/decoding to [`Vec`](alloc::vec::Vec) and [`String`](alloc::string::String) as appropriate","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1327,"byte_end":1469,"line_start":36,"line_end":36,"column_start":1,"column_end":143}},{"value":"/  `check` | **off**-by-default | Integrated support for [Base58Check][]","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1470,"byte_end":1544,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1545,"byte_end":1548,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [Base58Check]: https://en.bitcoin.it/wiki/Base58Check_encoding","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1549,"byte_end":1615,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1616,"byte_end":1619,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1620,"byte_end":1634,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1635,"byte_end":1638,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## Basic example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1639,"byte_end":1659,"line_start":43,"line_end":43,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1660,"byte_end":1663,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1664,"byte_end":1675,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/ let decoded = bs58::decode(\"he11owor1d\").into_vec()?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1676,"byte_end":1733,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/ let encoded = bs58::encode(decoded).into_string();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1734,"byte_end":1788,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(\"he11owor1d\", encoded);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1789,"byte_end":1827,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/ # Ok::<(), bs58::decode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1828,"byte_end":1867,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1868,"byte_end":1875,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1876,"byte_end":1879,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ## Changing the alphabet","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1880,"byte_end":1908,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1909,"byte_end":1912,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1913,"byte_end":1924,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/ let decoded = bs58::decode(\"he11owor1d\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1925,"byte_end":1969,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/     .with_alphabet(bs58::Alphabet::RIPPLE)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":1970,"byte_end":2016,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/     .into_vec()?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2017,"byte_end":2038,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/ let encoded = bs58::encode(decoded)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2039,"byte_end":2078,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/     .with_alphabet(bs58::Alphabet::FLICKR)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2079,"byte_end":2125,"line_start":59,"line_end":59,"column_start":1,"column_end":47}},{"value":"/     .into_string();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2126,"byte_end":2149,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(\"4DSSNaN1SC\", encoded);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2150,"byte_end":2188,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ # Ok::<(), bs58::decode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2189,"byte_end":2228,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2229,"byte_end":2236,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2237,"byte_end":2240,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Decoding into an existing buffer","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2241,"byte_end":2280,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2281,"byte_end":2284,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2285,"byte_end":2296,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ let (mut decoded, mut encoded) = ([0xFF; 8], String::with_capacity(10));","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2297,"byte_end":2373,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ bs58::decode(\"he11owor1d\").into(&mut decoded)?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2374,"byte_end":2425,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/ bs58::encode(decoded).into(&mut encoded)?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2426,"byte_end":2472,"line_start":70,"line_end":70,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(\"he11owor1d\", encoded);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2473,"byte_end":2511,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2512,"byte_end":2558,"line_start":72,"line_end":72,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2559,"byte_end":2566,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"alphabet","qualname":"::alphabet","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":10},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27}],"decl_id":null,"docs":" Support for configurable alphabets\n","sig":null,"attributes":[{"value":"/ Support for configurable alphabets","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6136,"byte_end":6174,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6421,"byte_end":6429,"line_start":9,"line_end":9,"column_start":12,"column_end":20},"name":"Alphabet","qualname":"::alphabet::Alphabet","value":"Alphabet {  }","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":155}],"decl_id":null,"docs":" Prepared Alphabet for\n [`EncodeBuilder::with_alphabet`](crate::encode::EncodeBuilder::with_alphabet) and\n [`DecodeBuilder::with_alphabet`](crate::decode::DecodeBuilder::with_alphabet).\n","sig":null,"attributes":[{"value":"/ Prepared Alphabet for","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6192,"byte_end":6217,"line_start":5,"line_end":5,"column_start":1,"column_end":26}},{"value":"/ [`EncodeBuilder::with_alphabet`](crate::encode::EncodeBuilder::with_alphabet) and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6218,"byte_end":6303,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/ [`DecodeBuilder::with_alphabet`](crate::decode::DecodeBuilder::with_alphabet).","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6304,"byte_end":6386,"line_start":7,"line_end":7,"column_start":1,"column_end":83}}]},{"kind":"StructVariant","id":{"krate":0,"index":163},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6724,"byte_end":6742,"line_start":19,"line_end":19,"column_start":5,"column_end":23},"name":"DuplicateCharacter","qualname":"::alphabet::Error::DuplicateCharacter","value":"Error::DuplicateCharacter { character, first, second }","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" The alphabet contained a duplicate character at at least 2 indexes.\n","sig":null,"attributes":[{"value":"/ The alphabet contained a duplicate character at at least 2 indexes.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6648,"byte_end":6719,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"StructVariant","id":{"krate":0,"index":167},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7056,"byte_end":7073,"line_start":29,"line_end":29,"column_start":5,"column_end":22},"name":"NonAsciiCharacter","qualname":"::alphabet::Error::NonAsciiCharacter","value":"Error::NonAsciiCharacter { index }","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" The alphabet contained a multi-byte (or non-utf8) character.\n","sig":null,"attributes":[{"value":"/ The alphabet contained a multi-byte (or non-utf8) character.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6987,"byte_end":7051,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":162},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6636,"byte_end":6641,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::alphabet::Error","value":"pub enum Error {\n    DuplicateCharacter {\n        character: char,\n        first: usize,\n        second: usize,\n    },\n    NonAsciiCharacter {\n        index: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":167}],"decl_id":null,"docs":" Errors that could occur when preparing a Base58 alphabet.\n","sig":null,"attributes":[{"value":"/ Errors that could occur when preparing a Base58 alphabet.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6502,"byte_end":6563,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":6564,"byte_end":6581,"line_start":15,"line_end":15,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":11},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7362,"byte_end":7369,"line_start":39,"line_end":39,"column_start":15,"column_end":22},"name":"BITCOIN","qualname":"::alphabet::Alphabet::BITCOIN","value":"&'static Self","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Bitcoin's alphabet as defined in their Base58Check encoding.","sig":null,"attributes":[{"value":"/ Bitcoin's alphabet as defined in their Base58Check encoding.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7193,"byte_end":7257,"line_start":36,"line_end":36,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7262,"byte_end":7265,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See <https://en.bitcoin.it/wiki/Base58Check_encoding#Base58_symbol_chart>","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7270,"byte_end":7347,"line_start":38,"line_end":38,"column_start":5,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7667,"byte_end":7673,"line_start":45,"line_end":45,"column_start":15,"column_end":21},"name":"MONERO","qualname":"::alphabet::Alphabet::MONERO","value":"&'static Self","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Monero's alphabet as defined in this forum post.","sig":null,"attributes":[{"value":"/ Monero's alphabet as defined in this forum post.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7482,"byte_end":7534,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7539,"byte_end":7542,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ See <https://forum.getmonero.org/4/academic-and-technical/221/creating-a-standard-for-physical-coins>","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7547,"byte_end":7652,"line_start":44,"line_end":44,"column_start":5,"column_end":110}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7904,"byte_end":7910,"line_start":51,"line_end":51,"column_start":15,"column_end":21},"name":"RIPPLE","qualname":"::alphabet::Alphabet::RIPPLE","value":"&'static Self","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Ripple's alphabet as defined in their wiki.","sig":null,"attributes":[{"value":"/ Ripple's alphabet as defined in their wiki.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7786,"byte_end":7833,"line_start":48,"line_end":48,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7838,"byte_end":7841,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ See <https://wiki.ripple.com/Encodings>","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7846,"byte_end":7889,"line_start":50,"line_end":50,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8182,"byte_end":8188,"line_start":57,"line_end":57,"column_start":15,"column_end":21},"name":"FLICKR","qualname":"::alphabet::Alphabet::FLICKR","value":"&'static Self","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Flickr's alphabet for creating short urls from photo ids.","sig":null,"attributes":[{"value":"/ Flickr's alphabet for creating short urls from photo ids.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8023,"byte_end":8084,"line_start":54,"line_end":54,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8089,"byte_end":8092,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ See <https://www.flickr.com/groups/api/discuss/72157616713786392/>","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8097,"byte_end":8167,"line_start":56,"line_end":56,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":15},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8425,"byte_end":8432,"line_start":62,"line_end":62,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::alphabet::Alphabet::DEFAULT","value":"&'static Self","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" The default alphabet used if none is given. Currently is the\n [`BITCOIN`](Self::BITCOIN) alphabet.\n","sig":null,"attributes":[{"value":"/ The default alphabet used if none is given. Currently is the","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8301,"byte_end":8365,"line_start":60,"line_end":60,"column_start":5,"column_end":69}},{"value":"/ [`BITCOIN`](Self::BITCOIN) alphabet.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8370,"byte_end":8410,"line_start":61,"line_end":61,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9844,"byte_end":9847,"line_start":102,"line_end":102,"column_start":18,"column_end":21},"name":"new","qualname":"<Alphabet>::new","value":"pub const fn new(&[u8; ]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create prepared alphabet, checks that the alphabet is pure ASCII and that there are no\n duplicate characters, which would result in inconsistent encoding/decoding","sig":null,"attributes":[{"value":"/ Create prepared alphabet, checks that the alphabet is pure ASCII and that there are no","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8470,"byte_end":8560,"line_start":64,"line_end":64,"column_start":5,"column_end":95}},{"value":"/ duplicate characters, which would result in inconsistent encoding/decoding","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8565,"byte_end":8643,"line_start":65,"line_end":65,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8648,"byte_end":8651,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8656,"byte_end":8667,"line_start":67,"line_end":67,"column_start":5,"column_end":16}},{"value":"/ let alpha = bs58::Alphabet::new(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8672,"byte_end":8708,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/     b\" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXY\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8713,"byte_end":8783,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ )?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8788,"byte_end":8795,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8800,"byte_end":8803,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let decoded = bs58::decode(\"he11owor1d\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8808,"byte_end":8852,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/     .with_alphabet(bs58::Alphabet::RIPPLE)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8857,"byte_end":8903,"line_start":73,"line_end":73,"column_start":5,"column_end":51}},{"value":"/     .into_vec()?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8908,"byte_end":8929,"line_start":74,"line_end":74,"column_start":5,"column_end":26}},{"value":"/ let encoded = bs58::encode(decoded)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8934,"byte_end":8973,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/     .with_alphabet(&alpha)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":8978,"byte_end":9008,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"/     .into_string();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9013,"byte_end":9036,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9041,"byte_end":9044,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"#ERRN)N RD\", encoded);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9049,"byte_end":9087,"line_start":79,"line_end":79,"column_start":5,"column_end":43}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9092,"byte_end":9138,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9143,"byte_end":9150,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ## Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9155,"byte_end":9168,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9173,"byte_end":9176,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ### Duplicate Character","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9181,"byte_end":9208,"line_start":84,"line_end":84,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9213,"byte_end":9216,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9221,"byte_end":9232,"line_start":86,"line_end":86,"column_start":5,"column_end":16}},{"value":"/ let alpha = b\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9237,"byte_end":9315,"line_start":87,"line_end":87,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9320,"byte_end":9335,"line_start":88,"line_end":88,"column_start":5,"column_end":20}},{"value":"/     bs58::alphabet::Error::DuplicateCharacter { character: 'a', first: 0, second: 1 },","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9340,"byte_end":9430,"line_start":89,"line_end":89,"column_start":5,"column_end":95}},{"value":"/     bs58::Alphabet::new(alpha).unwrap_err());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9435,"byte_end":9484,"line_start":90,"line_end":90,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9489,"byte_end":9496,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9501,"byte_end":9504,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ### Non-ASCII Character","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9509,"byte_end":9536,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9541,"byte_end":9544,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9549,"byte_end":9560,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ let mut alpha = *b\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9565,"byte_end":9648,"line_start":96,"line_end":96,"column_start":5,"column_end":88}},{"value":"/ alpha[1] = 255;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9653,"byte_end":9672,"line_start":97,"line_end":97,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9677,"byte_end":9692,"line_start":98,"line_end":98,"column_start":5,"column_end":20}},{"value":"/     bs58::alphabet::Error::NonAsciiCharacter { index: 1 },","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9697,"byte_end":9759,"line_start":99,"line_end":99,"column_start":5,"column_end":67}},{"value":"/     bs58::Alphabet::new(&alpha).unwrap_err());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9764,"byte_end":9814,"line_start":100,"line_end":100,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":9819,"byte_end":9826,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11623,"byte_end":11633,"line_start":153,"line_end":153,"column_start":18,"column_end":28},"name":"new_unwrap","qualname":"<Alphabet>::new_unwrap","value":"pub const fn new_unwrap(&[u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Self::new`], but gives a panic instead of an [`Err`] on bad input.","sig":null,"attributes":[{"value":"/ Same as [`Self::new`], but gives a panic instead of an [`Err`] on bad input.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":10574,"byte_end":10654,"line_start":126,"line_end":126,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":10659,"byte_end":10662,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Intended to support usage in `const` context until [`Result::unwrap`] is able to be called.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":10667,"byte_end":10762,"line_start":128,"line_end":128,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":10767,"byte_end":10770,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":10775,"byte_end":10786,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/ const ALPHA: &'static bs58::Alphabet = &bs58::Alphabet::new_unwrap(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":10791,"byte_end":10862,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/     b\" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXY\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":10867,"byte_end":10937,"line_start":132,"line_end":132,"column_start":5,"column_end":75}},{"value":"/ );","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":10942,"byte_end":10948,"line_start":133,"line_end":133,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":10953,"byte_end":10956,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let decoded = bs58::decode(\"he11owor1d\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":10961,"byte_end":11005,"line_start":135,"line_end":135,"column_start":5,"column_end":49}},{"value":"/     .with_alphabet(bs58::Alphabet::RIPPLE)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11010,"byte_end":11056,"line_start":136,"line_end":136,"column_start":5,"column_end":51}},{"value":"/     .into_vec()?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11061,"byte_end":11082,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/ let encoded = bs58::encode(decoded)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11087,"byte_end":11126,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     .with_alphabet(ALPHA)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11131,"byte_end":11160,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/     .into_string();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11165,"byte_end":11188,"line_start":140,"line_end":140,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11193,"byte_end":11196,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"#ERRN)N RD\", encoded);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11201,"byte_end":11239,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11244,"byte_end":11290,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11295,"byte_end":11302,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11307,"byte_end":11310,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If your alphabet is inconsistent then this will fail to compile in a `const` context:","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11315,"byte_end":11404,"line_start":146,"line_end":146,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11409,"byte_end":11412,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11417,"byte_end":11436,"line_start":148,"line_end":148,"column_start":5,"column_end":24}},{"value":"/ const _: &'static bs58::Alphabet = &bs58::Alphabet::new_unwrap(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11441,"byte_end":11508,"line_start":149,"line_end":149,"column_start":5,"column_end":72}},{"value":"/     b\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11513,"byte_end":11582,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ );","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11587,"byte_end":11593,"line_start":151,"line_end":151,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11598,"byte_end":11605,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decode","qualname":"::decode","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":54},{"krate":0,"index":181},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":56},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":" Functions for decoding Base58 encoded strings.\n","sig":null,"attributes":[{"value":"/ Functions for decoding Base58 encoded strings.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":13265,"byte_end":13315,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":48},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":13723,"byte_end":13736,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"DecodeBuilder","qualname":"::decode::DecodeBuilder","value":"DecodeBuilder {  }","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" A builder for setting up the alphabet and output of a base58 decode.","sig":null,"attributes":[{"value":"/ A builder for setting up the alphabet and output of a base58 decode.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":13480,"byte_end":13552,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":13553,"byte_end":13556,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See the documentation for [`bs58::decode`](crate::decode()) for a more","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":13557,"byte_end":13631,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ high level view of how to use this.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":13632,"byte_end":13671,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":13672,"byte_end":13711,"line_start":18,"line_end":18,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":13927,"byte_end":13933,"line_start":26,"line_end":26,"column_start":10,"column_end":16},"name":"Result","qualname":"::decode::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized [`Result`](core::result::Result) type for [`bs58::decode`](module@crate::decode)\n","sig":null,"attributes":[{"value":"/ A specialized [`Result`](core::result::Result) type for [`bs58::decode`](module@crate::decode)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":13819,"byte_end":13917,"line_start":25,"line_end":25,"column_start":1,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":182},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":14192,"byte_end":14206,"line_start":33,"line_end":33,"column_start":5,"column_end":19},"name":"BufferTooSmall","qualname":"::decode::Error::BufferTooSmall","value":"Error::BufferTooSmall","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" The output buffer was too small to contain the entire input.\n","sig":null,"attributes":[{"value":"/ The output buffer was too small to contain the entire input.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":14123,"byte_end":14187,"line_start":32,"line_end":32,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":184},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":14311,"byte_end":14327,"line_start":37,"line_end":37,"column_start":5,"column_end":21},"name":"InvalidCharacter","qualname":"::decode::Error::InvalidCharacter","value":"Error::InvalidCharacter { character, index }","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" The input contained a character that was not part of the current Base58\n alphabet.\n","sig":null,"attributes":[{"value":"/ The input contained a character that was not part of the current Base58","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":14213,"byte_end":14288,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ alphabet.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":14293,"byte_end":14306,"line_start":36,"line_end":36,"column_start":5,"column_end":18}}]},{"kind":"StructVariant","id":{"krate":0,"index":187},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":14616,"byte_end":14633,"line_start":46,"line_end":46,"column_start":5,"column_end":22},"name":"NonAsciiCharacter","qualname":"::decode::Error::NonAsciiCharacter","value":"Error::NonAsciiCharacter { index }","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" The input contained a multi-byte (or non-utf8) character which is\n unsupported by this Base58 decoder.\n","sig":null,"attributes":[{"value":"/ The input contained a multi-byte (or non-utf8) character which is","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":14498,"byte_end":14567,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ unsupported by this Base58 decoder.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":14572,"byte_end":14611,"line_start":45,"line_end":45,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":181},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":14111,"byte_end":14116,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"name":"Error","qualname":"::decode::Error","value":"pub enum Error {\n    BufferTooSmall,\n    InvalidCharacter {\n        character: char,\n        index: usize,\n    },\n    NonAsciiCharacter {\n        index: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":187}],"decl_id":null,"docs":" Errors that could occur when decoding a Base58 encoded string.\n","sig":null,"attributes":[{"value":"/ Errors that could occur when decoding a Base58 encoded string.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":13972,"byte_end":14038,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"non_exhaustive","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":14084,"byte_end":14101,"line_start":30,"line_end":30,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":15765,"byte_end":15768,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodeBuilder>::new","value":"pub fn new(I, &'a Alphabet) -> DecodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Setup decoder for the given string using the given alphabet.\n Preferably use [`bs58::decode`](crate::decode()) instead of this directly.\n","sig":null,"attributes":[{"value":"/ Setup decoder for the given string using the given alphabet.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":15606,"byte_end":15670,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/ Preferably use [`bs58::decode`](crate::decode()) instead of this directly.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":15675,"byte_end":15753,"line_start":80,"line_end":80,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16604,"byte_end":16617,"line_start":110,"line_end":110,"column_start":12,"column_end":25},"name":"with_alphabet","qualname":"<DecodeBuilder>::with_alphabet","value":"pub fn with_alphabet(Self, &'a Alphabet) -> DecodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Change the alphabet that will be used for decoding.","sig":null,"attributes":[{"value":"/ Change the alphabet that will be used for decoding.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16225,"byte_end":16280,"line_start":98,"line_end":98,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16285,"byte_end":16288,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16293,"byte_end":16307,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16312,"byte_end":16315,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16320,"byte_end":16331,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16336,"byte_end":16351,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/     vec![0x60, 0x65, 0xe7, 0x9b, 0xba, 0x2f, 0x78],","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16356,"byte_end":16411,"line_start":104,"line_end":104,"column_start":5,"column_end":60}},{"value":"/     bs58::decode(\"he11owor1d\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16416,"byte_end":16450,"line_start":105,"line_end":105,"column_start":5,"column_end":39}},{"value":"/         .with_alphabet(bs58::Alphabet::RIPPLE)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16455,"byte_end":16505,"line_start":106,"line_end":106,"column_start":5,"column_end":55}},{"value":"/         .into_vec()?);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16510,"byte_end":16536,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/ # Ok::<(), bs58::decode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16541,"byte_end":16580,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":16585,"byte_end":16592,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18076,"byte_end":18084,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<DecodeBuilder>::into_vec","value":"pub fn into_vec(Self) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decode into a new vector of bytes.","sig":null,"attributes":[{"value":"/ Decode into a new vector of bytes.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17534,"byte_end":17572,"line_start":139,"line_end":139,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17577,"byte_end":17580,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`bs58::decode`](crate::decode()) for an","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17585,"byte_end":17655,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ explanation of the errors that may occur.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17660,"byte_end":17705,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17710,"byte_end":17713,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17718,"byte_end":17732,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17737,"byte_end":17740,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17745,"byte_end":17756,"line_start":146,"line_end":146,"column_start":5,"column_end":16}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17761,"byte_end":17776,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/     vec![0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58],","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17781,"byte_end":17842,"line_start":148,"line_end":148,"column_start":5,"column_end":66}},{"value":"/     bs58::decode(\"he11owor1d\").into_vec()?);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17847,"byte_end":17895,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), bs58::decode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17900,"byte_end":17939,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17944,"byte_end":17951,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17956,"byte_end":17959,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":17964,"byte_end":17989,"line_start":153,"line_end":153,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18921,"byte_end":18925,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"into","qualname":"<DecodeBuilder>::into","value":"pub fn into<O: AsMut<[u8]>>(Self, O) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Decode into the given buffer.","sig":null,"attributes":[{"value":"/ Decode into the given buffer.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18291,"byte_end":18324,"line_start":163,"line_end":163,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18329,"byte_end":18332,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Returns the length written into the buffer, the rest of the bytes in","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18337,"byte_end":18409,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/ the buffer will be untouched.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18414,"byte_end":18447,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18452,"byte_end":18455,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`bs58::decode`](crate::decode()) for an","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18460,"byte_end":18530,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ explanation of the errors that may occur.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18535,"byte_end":18580,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18585,"byte_end":18588,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18593,"byte_end":18607,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18612,"byte_end":18615,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18620,"byte_end":18631,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/ let mut output = [0xFF; 10];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18636,"byte_end":18668,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(8, bs58::decode(\"he11owor1d\").into(&mut output)?);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18673,"byte_end":18738,"line_start":175,"line_end":175,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18743,"byte_end":18758,"line_start":176,"line_end":176,"column_start":5,"column_end":20}},{"value":"/     [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58, 0xFF, 0xFF],","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18763,"byte_end":18832,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/     output);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18837,"byte_end":18853,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), bs58::decode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18858,"byte_end":18897,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":18902,"byte_end":18909,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":71},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encode","qualname":"::encode","value":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":105},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":127},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" Functions for encoding into Base58 encoded strings.\n","sig":null,"attributes":[{"value":"/ Functions for encoding into Base58 encoded strings.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":23350,"byte_end":23405,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":88},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":23705,"byte_end":23718,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"EncodeBuilder","qualname":"::encode::EncodeBuilder","value":"EncodeBuilder {  }","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" A builder for setting up the alphabet and output of a base58 encode.\n","sig":null,"attributes":[{"value":"/ A builder for setting up the alphabet and output of a base58 encode.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":23581,"byte_end":23653,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":23654,"byte_end":23693,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":94},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":23909,"byte_end":23915,"line_start":23,"line_end":23,"column_start":10,"column_end":16},"name":"Result","qualname":"::encode::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized [`Result`](core::result::Result) type for [`bs58::encode`](module@crate::encode)\n","sig":null,"attributes":[{"value":"/ A specialized [`Result`](core::result::Result) type for [`bs58::encode`](module@crate::encode)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":23801,"byte_end":23899,"line_start":22,"line_end":22,"column_start":1,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":202},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24174,"byte_end":24188,"line_start":30,"line_end":30,"column_start":5,"column_end":19},"name":"BufferTooSmall","qualname":"::encode::Error::BufferTooSmall","value":"Error::BufferTooSmall","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":" The output buffer was too small to contain the entire input.\n","sig":null,"attributes":[{"value":"/ The output buffer was too small to contain the entire input.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24105,"byte_end":24169,"line_start":29,"line_end":29,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":201},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24093,"byte_end":24098,"line_start":28,"line_end":28,"column_start":10,"column_end":15},"name":"Error","qualname":"::encode::Error","value":"pub enum Error { BufferTooSmall, }","parent":null,"children":[{"krate":0,"index":202}],"decl_id":null,"docs":" Errors that could occur when encoding a Base58 encoded string.\n","sig":null,"attributes":[{"value":"/ Errors that could occur when encoding a Base58 encoded string.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":23954,"byte_end":24020,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"non_exhaustive","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24066,"byte_end":24083,"line_start":27,"line_end":27,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24336,"byte_end":24348,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"EncodeTarget","qualname":"::encode::EncodeTarget","value":"EncodeTarget","parent":null,"children":[{"krate":0,"index":97}],"decl_id":null,"docs":" Represents a buffer that can be encoded into. See [`EncodeBuilder::into`] and the provided\n implementations for more details.\n","sig":null,"attributes":[{"value":"/ Represents a buffer that can be encoded into. See [`EncodeBuilder::into`] and the provided","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24193,"byte_end":24287,"line_start":33,"line_end":33,"column_start":1,"column_end":95}},{"value":"/ implementations for more details.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24288,"byte_end":24325,"line_start":34,"line_end":34,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24592,"byte_end":24603,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"encode_with","qualname":"::encode::EncodeTarget::encode_with","value":"pub fn encode_with<impl for<'a> FnOnce(&'a mut [u8]) -> Result<usize>: for<'a> FnOnce(&'a mut [u8])\n                   ->\n                   Result<usize>>(&mut Self, usize,\n                                  impl for<'a> FnOnce(&'a mut [u8]) -> Result<usize>)\n-> Result<usize>","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Encodes into this buffer, provides the maximum length for implementations that wish to\n preallocate space, along with a function that will encode ASCII bytes into the buffer and\n return the length written to it.\n","sig":null,"attributes":[{"value":"/ Encodes into this buffer, provides the maximum length for implementations that wish to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24355,"byte_end":24445,"line_start":36,"line_end":36,"column_start":5,"column_end":95}},{"value":"/ preallocate space, along with a function that will encode ASCII bytes into the buffer and","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24450,"byte_end":24543,"line_start":37,"line_end":37,"column_start":5,"column_end":98}},{"value":"/ return the length written to it.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":24548,"byte_end":24584,"line_start":38,"line_end":38,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":27625,"byte_end":27628,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodeBuilder>::new","value":"pub fn new(I, &'a Alphabet) -> EncodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Setup encoder for the given string using the given alphabet.\n Preferably use [`bs58::encode`](crate::encode()) instead of this\n directly.\n","sig":null,"attributes":[{"value":"/ Setup encoder for the given string using the given alphabet.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":27458,"byte_end":27522,"line_start":138,"line_end":138,"column_start":5,"column_end":69}},{"value":"/ Preferably use [`bs58::encode`](crate::encode()) instead of this","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":27527,"byte_end":27595,"line_start":139,"line_end":139,"column_start":5,"column_end":73}},{"value":"/ directly.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":27600,"byte_end":27613,"line_start":140,"line_end":140,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28445,"byte_end":28458,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"with_alphabet","qualname":"<EncodeBuilder>::with_alphabet","value":"pub fn with_alphabet(Self, &'a Alphabet) -> EncodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Change the alphabet that will be used for encoding.","sig":null,"attributes":[{"value":"/ Change the alphabet that will be used for encoding.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28085,"byte_end":28140,"line_start":158,"line_end":158,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28145,"byte_end":28148,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28153,"byte_end":28167,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28172,"byte_end":28175,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28180,"byte_end":28191,"line_start":162,"line_end":162,"column_start":5,"column_end":16}},{"value":"/ let input = [0x60, 0x65, 0xe7, 0x9b, 0xba, 0x2f, 0x78];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28196,"byte_end":28255,"line_start":163,"line_end":163,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28260,"byte_end":28275,"line_start":164,"line_end":164,"column_start":5,"column_end":20}},{"value":"/     \"he11owor1d\",","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28280,"byte_end":28301,"line_start":165,"line_end":165,"column_start":5,"column_end":26}},{"value":"/     bs58::encode(input)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28306,"byte_end":28333,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"/         .with_alphabet(bs58::Alphabet::RIPPLE)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28338,"byte_end":28388,"line_start":167,"line_end":167,"column_start":5,"column_end":55}},{"value":"/         .into_string());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28393,"byte_end":28421,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":28426,"byte_end":28433,"line_start":169,"line_end":169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30326,"byte_end":30337,"line_start":228,"line_end":228,"column_start":12,"column_end":23},"name":"into_string","qualname":"<EncodeBuilder>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encode into a new owned string.","sig":null,"attributes":[{"value":"/ Encode into a new owned string.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":29972,"byte_end":30007,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30012,"byte_end":30015,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30020,"byte_end":30034,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30039,"byte_end":30042,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30047,"byte_end":30058,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30063,"byte_end":30128,"line_start":223,"line_end":223,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(\"he11owor1d\", bs58::encode(input).into_string());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30133,"byte_end":30197,"line_start":224,"line_end":224,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30202,"byte_end":30209,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30214,"byte_end":30239,"line_start":226,"line_end":226,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30817,"byte_end":30825,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<EncodeBuilder>::into_vec","value":"pub fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Encode into a new owned vector.","sig":null,"attributes":[{"value":"/ Encode into a new owned vector.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30463,"byte_end":30498,"line_start":234,"line_end":234,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30503,"byte_end":30506,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30511,"byte_end":30525,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30530,"byte_end":30533,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30538,"byte_end":30549,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30554,"byte_end":30619,"line_start":239,"line_end":239,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(b\"he11owor1d\", &*bs58::encode(input).into_vec());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30624,"byte_end":30688,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30693,"byte_end":30700,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30705,"byte_end":30730,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":33287,"byte_end":33291,"line_start":315,"line_end":315,"column_start":12,"column_end":16},"name":"into","qualname":"<EncodeBuilder>::into","value":"pub fn into<impl EncodeTarget: EncodeTarget>(Self, impl EncodeTarget)\n-> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Encode into the given buffer.","sig":null,"attributes":[{"value":"/ Encode into the given buffer.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30949,"byte_end":30982,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30987,"byte_end":30990,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Returns the length written into the buffer.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":30995,"byte_end":31042,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31047,"byte_end":31050,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ If the buffer is resizeable it will be reallocated to fit the encoded data and truncated to","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31055,"byte_end":31150,"line_start":254,"line_end":254,"column_start":5,"column_end":100}},{"value":"/ size.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31155,"byte_end":31164,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31169,"byte_end":31172,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If the buffer is not resizeable bytes after the final character will be left alone, except","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31177,"byte_end":31271,"line_start":257,"line_end":257,"column_start":5,"column_end":99}},{"value":"/ up to 3 null bytes may be written to an `&mut str` to overwrite remaining characters of a","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31276,"byte_end":31369,"line_start":258,"line_end":258,"column_start":5,"column_end":98}},{"value":"/ partially overwritten multi-byte character.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31374,"byte_end":31421,"line_start":259,"line_end":259,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31426,"byte_end":31429,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`bs58::encode`](crate::encode()) for an","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31434,"byte_end":31504,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"/ explanation of the errors that may occur.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31509,"byte_end":31554,"line_start":262,"line_end":262,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31559,"byte_end":31562,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31567,"byte_end":31581,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31586,"byte_end":31589,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ## `Vec<u8>`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31594,"byte_end":31610,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31615,"byte_end":31618,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31623,"byte_end":31634,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31639,"byte_end":31704,"line_start":269,"line_end":269,"column_start":5,"column_end":70}},{"value":"/ let mut output = \"goodbye world\".to_owned().into_bytes();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31709,"byte_end":31770,"line_start":270,"line_end":270,"column_start":5,"column_end":66}},{"value":"/ bs58::encode(input).into(&mut output)?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31775,"byte_end":31818,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(b\"he11owor1d\", &*output);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31823,"byte_end":31863,"line_start":272,"line_end":272,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), bs58::encode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31868,"byte_end":31907,"line_start":273,"line_end":273,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31912,"byte_end":31919,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31924,"byte_end":31927,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ## `&mut [u8]`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31932,"byte_end":31950,"line_start":276,"line_end":276,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31955,"byte_end":31958,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31963,"byte_end":31974,"line_start":278,"line_end":278,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":31979,"byte_end":32044,"line_start":279,"line_end":279,"column_start":5,"column_end":70}},{"value":"/ let mut output = Vec::from(\"goodbye world\");","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32049,"byte_end":32097,"line_start":280,"line_end":280,"column_start":5,"column_end":53}},{"value":"/ bs58::encode(input).into(&mut output[..])?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32102,"byte_end":32149,"line_start":281,"line_end":281,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(b\"he11owor1drld\", &*output);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32154,"byte_end":32197,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/ # Ok::<(), bs58::encode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32202,"byte_end":32241,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32246,"byte_end":32253,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32258,"byte_end":32261,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ## `String`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32266,"byte_end":32281,"line_start":286,"line_end":286,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32286,"byte_end":32289,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32294,"byte_end":32305,"line_start":288,"line_end":288,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32310,"byte_end":32375,"line_start":289,"line_end":289,"column_start":5,"column_end":70}},{"value":"/ let mut output = \"goodbye world\".to_owned();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32380,"byte_end":32428,"line_start":290,"line_end":290,"column_start":5,"column_end":53}},{"value":"/ bs58::encode(input).into(&mut output)?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32433,"byte_end":32476,"line_start":291,"line_end":291,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(\"he11owor1d\", output);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32481,"byte_end":32518,"line_start":292,"line_end":292,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), bs58::encode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32523,"byte_end":32562,"line_start":293,"line_end":293,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32567,"byte_end":32574,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32579,"byte_end":32582,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ## `&mut str`","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32587,"byte_end":32604,"line_start":296,"line_end":296,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32609,"byte_end":32612,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32617,"byte_end":32628,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32633,"byte_end":32698,"line_start":299,"line_end":299,"column_start":5,"column_end":70}},{"value":"/ let mut output = \"goodbye world\".to_owned();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32703,"byte_end":32751,"line_start":300,"line_end":300,"column_start":5,"column_end":53}},{"value":"/ bs58::encode(input).into(output.as_mut_str())?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32756,"byte_end":32807,"line_start":301,"line_end":301,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(\"he11owor1drld\", output);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32812,"byte_end":32852,"line_start":302,"line_end":302,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), bs58::encode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32857,"byte_end":32896,"line_start":303,"line_end":303,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32901,"byte_end":32908,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32913,"byte_end":32916,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ### Clearing partially overwritten characters","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32921,"byte_end":32970,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32975,"byte_end":32978,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32983,"byte_end":32994,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":32999,"byte_end":33064,"line_start":309,"line_end":309,"column_start":5,"column_end":70}},{"value":"/ let mut output = \"goodbye w®ld\".to_owned();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":33069,"byte_end":33117,"line_start":310,"line_end":310,"column_start":5,"column_end":52}},{"value":"/ bs58::encode(input).into(output.as_mut_str())?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":33122,"byte_end":33173,"line_start":311,"line_end":311,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(\"he11owor1d\\0ld\", output);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":33178,"byte_end":33219,"line_start":312,"line_end":312,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), bs58::encode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":33224,"byte_end":33263,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":33268,"byte_end":33275,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4667,"byte_end":4673,"line_start":163,"line_end":163,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"pub fn decode<I: AsRef<[u8]>>(I) -> decode::DecodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Setup decoder for the given string using the [default alphabet][Alphabet::DEFAULT].","sig":null,"attributes":[{"value":"/ Setup decoder for the given string using the [default alphabet][Alphabet::DEFAULT].","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2925,"byte_end":3012,"line_start":98,"line_end":98,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3013,"byte_end":3016,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3017,"byte_end":3031,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3032,"byte_end":3035,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ## Basic example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3036,"byte_end":3056,"line_start":102,"line_end":102,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3057,"byte_end":3060,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3061,"byte_end":3072,"line_start":104,"line_end":104,"column_start":1,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3073,"byte_end":3088,"line_start":105,"line_end":105,"column_start":1,"column_end":16}},{"value":"/     vec![0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58],","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3089,"byte_end":3150,"line_start":106,"line_end":106,"column_start":1,"column_end":62}},{"value":"/     bs58::decode(\"he11owor1d\").into_vec()?);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3151,"byte_end":3199,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"/ # Ok::<(), bs58::decode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3200,"byte_end":3239,"line_start":108,"line_end":108,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3240,"byte_end":3247,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3248,"byte_end":3251,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ## Changing the alphabet","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3252,"byte_end":3280,"line_start":111,"line_end":111,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3281,"byte_end":3284,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3285,"byte_end":3296,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3297,"byte_end":3312,"line_start":114,"line_end":114,"column_start":1,"column_end":16}},{"value":"/     vec![0x60, 0x65, 0xe7, 0x9b, 0xba, 0x2f, 0x78],","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3313,"byte_end":3368,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/     bs58::decode(\"he11owor1d\")","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3369,"byte_end":3403,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/         .with_alphabet(bs58::Alphabet::RIPPLE)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3404,"byte_end":3454,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/         .into_vec()?);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3455,"byte_end":3481,"line_start":118,"line_end":118,"column_start":1,"column_end":27}},{"value":"/ # Ok::<(), bs58::decode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3482,"byte_end":3521,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3522,"byte_end":3529,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3530,"byte_end":3533,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ## Decoding into an existing buffer","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3534,"byte_end":3573,"line_start":122,"line_end":122,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3574,"byte_end":3577,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3578,"byte_end":3589,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"/ let mut output = [0xFF; 10];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3590,"byte_end":3622,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(8, bs58::decode(\"he11owor1d\").into(&mut output)?);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3623,"byte_end":3688,"line_start":126,"line_end":126,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3689,"byte_end":3704,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"/     [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58, 0xFF, 0xFF],","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3705,"byte_end":3774,"line_start":128,"line_end":128,"column_start":1,"column_end":70}},{"value":"/     output);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3775,"byte_end":3791,"line_start":129,"line_end":129,"column_start":1,"column_end":17}},{"value":"/ # Ok::<(), bs58::decode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3792,"byte_end":3831,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3832,"byte_end":3839,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3840,"byte_end":3843,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3844,"byte_end":3857,"line_start":133,"line_end":133,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3858,"byte_end":3861,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ### Invalid Character","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3862,"byte_end":3887,"line_start":135,"line_end":135,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3888,"byte_end":3891,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3892,"byte_end":3903,"line_start":137,"line_end":137,"column_start":1,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3904,"byte_end":3919,"line_start":138,"line_end":138,"column_start":1,"column_end":16}},{"value":"/     bs58::decode::Error::InvalidCharacter { character: 'l', index: 2 },","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3920,"byte_end":3995,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/     bs58::decode(\"hello world\").into_vec().unwrap_err());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":3996,"byte_end":4057,"line_start":140,"line_end":140,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4058,"byte_end":4065,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4066,"byte_end":4069,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ### Non-ASCII Character","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4070,"byte_end":4097,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4098,"byte_end":4101,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4102,"byte_end":4113,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4114,"byte_end":4129,"line_start":146,"line_end":146,"column_start":1,"column_end":16}},{"value":"/     bs58::decode::Error::NonAsciiCharacter { index: 5 },","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4130,"byte_end":4190,"line_start":147,"line_end":147,"column_start":1,"column_end":61}},{"value":"/     bs58::decode(\"he11o🇳🇿\").into_vec().unwrap_err());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4191,"byte_end":4254,"line_start":148,"line_end":148,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4255,"byte_end":4262,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4263,"byte_end":4266,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ### Too Small Buffer","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4267,"byte_end":4291,"line_start":151,"line_end":151,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4292,"byte_end":4295,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ This error can only occur when reading into a provided buffer, when using","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4296,"byte_end":4373,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ [`into_vec()`][decode::DecodeBuilder::into_vec] a vector large enough is guaranteed to be","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4374,"byte_end":4467,"line_start":154,"line_end":154,"column_start":1,"column_end":94}},{"value":"/ used.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4468,"byte_end":4477,"line_start":155,"line_end":155,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4478,"byte_end":4481,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4482,"byte_end":4493,"line_start":157,"line_end":157,"column_start":1,"column_end":12}},{"value":"/ let mut output = [0; 7];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4494,"byte_end":4522,"line_start":158,"line_end":158,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4523,"byte_end":4538,"line_start":159,"line_end":159,"column_start":1,"column_end":16}},{"value":"/     bs58::decode::Error::BufferTooSmall,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4539,"byte_end":4583,"line_start":160,"line_end":160,"column_start":1,"column_end":45}},{"value":"/     bs58::decode(\"he11owor1d\").into(&mut output).unwrap_err());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4584,"byte_end":4651,"line_start":161,"line_end":161,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4652,"byte_end":4659,"line_start":162,"line_end":162,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":150},"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":6016,"byte_end":6022,"line_start":212,"line_end":212,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode","value":"pub fn encode<I: AsRef<[u8]>>(I) -> encode::EncodeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Setup encoder for the given bytes using the [default alphabet][Alphabet::DEFAULT].","sig":null,"attributes":[{"value":"/ Setup encoder for the given bytes using the [default alphabet][Alphabet::DEFAULT].","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4787,"byte_end":4873,"line_start":167,"line_end":167,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4874,"byte_end":4877,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4878,"byte_end":4892,"line_start":169,"line_end":169,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4893,"byte_end":4896,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ## Basic example","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4897,"byte_end":4917,"line_start":171,"line_end":171,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4918,"byte_end":4921,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4922,"byte_end":4933,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":4934,"byte_end":4999,"line_start":174,"line_end":174,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(\"he11owor1d\", bs58::encode(input).into_string());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5000,"byte_end":5064,"line_start":175,"line_end":175,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5065,"byte_end":5072,"line_start":176,"line_end":176,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5073,"byte_end":5076,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ## Changing the alphabet","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5077,"byte_end":5105,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5106,"byte_end":5109,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5110,"byte_end":5121,"line_start":180,"line_end":180,"column_start":1,"column_end":12}},{"value":"/ let input = [0x60, 0x65, 0xe7, 0x9b, 0xba, 0x2f, 0x78];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5122,"byte_end":5181,"line_start":181,"line_end":181,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5182,"byte_end":5197,"line_start":182,"line_end":182,"column_start":1,"column_end":16}},{"value":"/     \"he11owor1d\",","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5198,"byte_end":5219,"line_start":183,"line_end":183,"column_start":1,"column_end":22}},{"value":"/     bs58::encode(input)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5220,"byte_end":5247,"line_start":184,"line_end":184,"column_start":1,"column_end":28}},{"value":"/         .with_alphabet(bs58::Alphabet::RIPPLE)","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5248,"byte_end":5298,"line_start":185,"line_end":185,"column_start":1,"column_end":51}},{"value":"/         .into_string());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5299,"byte_end":5327,"line_start":186,"line_end":186,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5328,"byte_end":5335,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5336,"byte_end":5339,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ## Encoding into an existing string","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5340,"byte_end":5379,"line_start":189,"line_end":189,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5380,"byte_end":5383,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5384,"byte_end":5395,"line_start":191,"line_end":191,"column_start":1,"column_end":12}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5396,"byte_end":5461,"line_start":192,"line_end":192,"column_start":1,"column_end":66}},{"value":"/ let mut output = \"goodbye world\".to_owned();","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5462,"byte_end":5510,"line_start":193,"line_end":193,"column_start":1,"column_end":49}},{"value":"/ bs58::encode(input).into(&mut output)?;","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5511,"byte_end":5554,"line_start":194,"line_end":194,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(\"he11owor1d\", output);","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5555,"byte_end":5592,"line_start":195,"line_end":195,"column_start":1,"column_end":38}},{"value":"/ # Ok::<(), bs58::encode::Error>(())","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5593,"byte_end":5632,"line_start":196,"line_end":196,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5633,"byte_end":5640,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5641,"byte_end":5644,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5645,"byte_end":5658,"line_start":199,"line_end":199,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5659,"byte_end":5662,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ### Too Small Buffer","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5663,"byte_end":5687,"line_start":201,"line_end":201,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5688,"byte_end":5691,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ This error can only occur when reading into an unresizeable buffer.","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5692,"byte_end":5763,"line_start":203,"line_end":203,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5764,"byte_end":5767,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5768,"byte_end":5779,"line_start":205,"line_end":205,"column_start":1,"column_end":12}},{"value":"/ let input = [0x04, 0x30, 0x5e, 0x2b, 0x24, 0x73, 0xf0, 0x58];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5780,"byte_end":5845,"line_start":206,"line_end":206,"column_start":1,"column_end":66}},{"value":"/ let mut output = [0; 7];","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5846,"byte_end":5874,"line_start":207,"line_end":207,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5875,"byte_end":5890,"line_start":208,"line_end":208,"column_start":1,"column_end":16}},{"value":"/     bs58::encode::Error::BufferTooSmall,","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5891,"byte_end":5935,"line_start":209,"line_end":209,"column_start":1,"column_end":45}},{"value":"/     bs58::encode(input).into(&mut output[..]).unwrap_err());","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":5936,"byte_end":6000,"line_start":210,"line_end":210,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":6001,"byte_end":6008,"line_start":211,"line_end":211,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7178,"byte_end":7186,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11923,"byte_end":11931,"line_start":163,"line_end":163,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":12275,"byte_end":12280,"line_start":175,"line_end":175,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":12307,"byte_end":12312,"line_start":177,"line_end":177,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":15579,"byte_end":15592,"line_start":78,"line_end":78,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":21911,"byte_end":21916,"line_start":284,"line_end":284,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":21943,"byte_end":21948,"line_start":286,"line_end":286,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":25115,"byte_end":25118,"line_start":58,"line_end":58,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":25515,"byte_end":25521,"line_start":73,"line_end":73,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":26360,"byte_end":26365,"line_start":105,"line_end":105,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":27431,"byte_end":27444,"line_start":137,"line_end":137,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":35711,"byte_end":35716,"line_start":399,"line_end":399,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":35743,"byte_end":35748,"line_start":401,"line_end":401,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2666,"byte_end":2674,"line_start":81,"line_end":81,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2728,"byte_end":2734,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":31}},{"kind":"Mod","span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/lib.rs","byte_start":2744,"byte_end":2750,"line_start":86,"line_end":86,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":71}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":7178,"byte_end":7186,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":11923,"byte_end":11931,"line_start":163,"line_end":163,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":152},"to":{"krate":1,"index":9293}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":12275,"byte_end":12280,"line_start":175,"line_end":175,"column_start":28,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":162},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/alphabet.rs","byte_start":12307,"byte_end":12312,"line_start":177,"line_end":177,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":162},"to":{"krate":1,"index":9300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":15579,"byte_end":15592,"line_start":78,"line_end":78,"column_start":26,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":21911,"byte_end":21916,"line_start":284,"line_end":284,"column_start":28,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":181},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/decode.rs","byte_start":21943,"byte_end":21948,"line_start":286,"line_end":286,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":9300}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":25115,"byte_end":25118,"line_start":58,"line_end":58,"column_start":23,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":7014},"to":{"krate":0,"index":96}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":25515,"byte_end":25521,"line_start":73,"line_end":73,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":7547},"to":{"krate":0,"index":96}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":26360,"byte_end":26365,"line_start":105,"line_end":105,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":121},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":27431,"byte_end":27444,"line_start":137,"line_end":137,"column_start":26,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":35711,"byte_end":35716,"line_start":399,"line_end":399,"column_start":28,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":201},"to":{"krate":4,"index":2336}},{"span":{"file_name":"/home/pavel/.cargo/registry/src/github.com-1ecc6299db9ec823/bs58-0.4.0/src/encode.rs","byte_start":35743,"byte_end":35748,"line_start":401,"line_end":401,"column_start":23,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":201},"to":{"krate":1,"index":9300}}]}